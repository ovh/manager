import{_ as a,o as s,c as n,Q as o}from"./chunks/framework.2eec50d8.js";const p="/manager/assets/img/generate-module-app.gif",F=JSON.parse('{"title":"Scripts","description":"","frontmatter":{},"headers":[],"relativePath":"guide/scripts.md","filePath":"guide/scripts.md","lastUpdated":1720522942000}'),e={name:"guide/scripts.md"},l=o('<h1 id="scripts" tabindex="-1">Scripts <a class="header-anchor" href="#scripts" aria-label="Permalink to &quot;Scripts&quot;">​</a></h1><p>Our <a href="package.json"><code>package.json</code></a> houses a collection of <a href="https://docs.npmjs.com/cli/run-script" target="_blank" rel="noreferrer">run-scripts</a> that we use to maintain, test, build, and publish the OVHcloud Manager, notably:</p><h2 id="table-of-content" tabindex="-1">Table of Content <a class="header-anchor" href="#table-of-content" aria-label="Permalink to &quot;Table of Content&quot;">​</a></h2><nav class="table-of-contents"><ul><li><a href="#table-of-content">Table of Content</a><ul><li><a href="#generate-a-module-or-an-application">Generate a module (or an Application)</a></li></ul></li></ul></nav><h3 id="generate-a-module-or-an-application" tabindex="-1">Generate a module (or an Application) <a class="header-anchor" href="#generate-a-module-or-an-application" aria-label="Permalink to &quot;Generate a module (or an Application)&quot;">​</a></h3><p><img src="'+p+`" alt="generate module"></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># \`foo\` is the name of your module.</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">generate:module</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./packages/manager/modules/foo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># \`foo\` is the name of your application.</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">generate:app</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./packages/manager/apps/foo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># \`foo\` is the name of your micro-application.</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">generate:uapp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># start the application</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">yarn</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">packages/manager/apps/foo</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#B392F0;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start:dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># \`foo\` is the name of your module.</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">generate:module</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./packages/manager/modules/foo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># \`foo\` is the name of your application.</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">generate:app</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./packages/manager/apps/foo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># \`foo\` is the name of your micro-application.</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">generate:uapp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># start the application</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">yarn</span><span style="color:#24292E;"> &amp;&amp; </span><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">packages/manager/apps/foo</span><span style="color:#24292E;"> &amp;&amp; </span><span style="color:#6F42C1;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start:dev</span></span></code></pre></div><p>Now you are able to visit <code>http://localhost:9000/#!/foo</code> (route based on the module name).</p>`,8),t=[l];function r(c,i,y,E,d,u){return s(),n("div",null,t)}const h=a(e,[["render",r]]);export{F as __pageData,h as default};
