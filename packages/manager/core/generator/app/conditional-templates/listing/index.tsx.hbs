import React, { Suspense } from 'react';
import { useTranslation } from 'react-i18next';
import {
  Await,
  defer,
  Link,
  Navigate,
  Outlet,
  useLoaderData,
} from 'react-router-dom';

<<<<<<< HEAD
<<<<<<< HEAD
import { {{listingEndpoint}} } from '@/api';

export function loader() {
  return defer({
    services: {{listingEndpoint}}(),
=======
import { get{{pascalCase listingEndpoint}} } from '@/api';

export function loader() {
  return defer({
    services: get{{pascalCase listingEndpoint}}(),
>>>>>>> 5c6f5029ff (feat(generator): update template vite js)
=======
import { {{listingEndpoint}} } from '@/api';

export function loader() {
  return defer({
    services: {{listingEndpoint}}(),
>>>>>>> c5c6c0b474 (feat(generator): add apiv6 requests)
  });
}

export default function Listing() {
<<<<<<< HEAD
  const { t } = useTranslation('{{appName}}/listing');
=======
  const { t } = useTranslation('{{appName}}');
>>>>>>> 5c6f5029ff (feat(generator): update template vite js)
  const data = useLoaderData() as Record<string, unknown>;

  return (
    <div>
      <h1>{t('title')}</h1>
      <Suspense fallback="">
        <Await resolve={data.services}>
          {(services) => {
            const count = services.length;
            if (count === 0) {
              return <Navigate to="onboarding" />;
            }
            if (count === 1) {
              return (
                <>
                  <Outlet />
                  <Navigate to={services[0]} />
                </>
              );
            }
            return (
              <>
                <h2>
                  Services list
                </h2>
                <ul>
                  {services.map((serviceName: string) => (
                    <li key={serviceName}>
<<<<<<< HEAD
                      <Link to={`/dashboard/${serviceName}`}>{serviceName}</Link>
=======
                      <Link to={`/details/${serviceName}`}>{serviceName}</Link>
>>>>>>> 5c6f5029ff (feat(generator): update template vite js)
                    </li>
                  ))}

                </ul>
              </>
            );
          }}
        </Await>
      </Suspense>
    </div>
  );
}
