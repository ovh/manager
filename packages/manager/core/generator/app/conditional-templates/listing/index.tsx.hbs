import React from 'react';
import { Navigate, Outlet} from 'react-router-dom';
import { useQuery } from '@tanstack/react-query';
import { getListingIceberg } from '@/api';
import Datagrid from '@/components/layout-helpers/Listing/dataGrid';
import Loading from '@/components/Loading/Loading';
import appConfig from '@/{{this.appName}}.config';
import Breadcrumb from "@/components/Breadcrumb/Breadcrumb";

import Errors from '@/components/Error/Error';

type ServiceData = {
  serviceName: string;
};

const ServiceList: React.FC<{ data: ServiceData[] }> = ({ data }) => {
  const count = data?.length;

  if (count === 0) return <Navigate to="onboarding" />;

  return (count === 1)
    ? (
      <>
        <Outlet />
        <Navigate to={data[0].serviceName} />
      </>
    )
    : (
      <>
        <h2>{{appName}}</h2>
        <Datagrid
          data={data}
          serviceKey={appConfig.listing.datagrid.serviceKey as string} />
      </>
    );
}

export default function Listing() {
  const { data, isError, error, isLoading }: any = useQuery(
      { queryKey: ['servicesListingIceberg'], queryFn: getListingIceberg, staleTime: Infinity, },
  );


  if (isError) {
    return <Errors
        error={error.response}/>
  }

  if (isLoading) {
    return (<div><Loading/></div>)
  }


  return (
    <>
      <Breadcrumb />
      <ServiceList
        data={data.data}
      />
    </>
  );
}
