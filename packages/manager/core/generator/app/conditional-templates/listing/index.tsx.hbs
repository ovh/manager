import React from 'react';
import { Navigate, Outlet } from 'react-router-dom';
import { useQueries } from '@tanstack/react-query';
import { getListingIceberg{{#if this.pimID}}, getPIMService{{/if}} } from '@/api';
import Datagrid from '@/components/layout-helpers/Listing/dataGrid';
import appConfig from '@/{{this.appName}}.config';
import Breadcrumb, {
  BreadcrumbHandleParams,
} from '@/components/Breadcrumb/Breadcrumb';

export function breadcrumb({ params }: BreadcrumbHandleParams) {
  return params.serviceName;
}

type ServiceData = {
  serviceName: string;
};

const ServiceList: React.FC<{ data: ServiceData[]{{#if this.pimID}}; appName: string{{/if}} }> = ({ data{{#if this.pimID}}, appName{{/if}} }) => {
  const count = data?.length;

  if (count === 0) return <Navigate to="onboarding" />;

  return (count === 1)
    ? (
      <>
        <Outlet />
        <Navigate to={data[0].serviceName} />
      </>
    )
    : (
      <>
        <h2>{{#if this.pimID}}{ appName || '{{appName}}' }{{else}}{{appName}}{{/if}}</h2>
        <Datagrid
          data={data}
          serviceKey={appConfig.listing.datagrid.serviceKey as string} />
      </>
    );
}

export default function Listing() {
  const { t } = useTranslation('{{appName}}/listing');
  const data = useLoaderData() as Record<string, unknown>;

  return (
    <>
      <Breadcrumb />
      <ServiceList
        data={servicesListingIcebergResult.data}
        {{#if this.pimID}}appName={pimServiceResult.data?.name}{{/if}}
      />
    </>
  );
}
