import { queryClient } from '@ovh-ux/manager-react-core-application';
import { fetchIceberg, apiClient } from '@ovh-ux/manager-core-api';

{{#if unknownTypeList}}
{{#each unknownTypeList}}
type {{this}} = unknown;
{{/each}}
{{/if}}
{{#each operationList}}

{{#if this.params}}
export type {{pascalCase this.functionName}}Params = {
  {{#each this.params}}
  /** {{this.description}} */
  {{this.name}}{{#if this.required}}?{{/if}}: {{this.type}};
  {{/each}}
};

{{/if}}
export const {{this.functionName}}QueryKey = {{#if this.urlParams}}(params: {{pascalCase this.functionName}}Params) => [`{{this.url}}`]{{else}}['{{this.url}}']{{/if}};

{{#if this.description}}
/**
 * {{this.description}}
 */
{{/if}}
export const {{this.functionName}} = async ({{#if this.params}}params: {{pascalCase this.functionName}}Params{{/if}}): Promise<{{this.responseType}}> => {
  const fetchData = async () => {
    const response = await apiClient.v6.{{this.httpMethod}}({{#if this.urlParams}}`{{this.url}}`{{else}}'{{this.url}}'{{/if}}{{#if this.bodyParams}}, { data: params }{{/if}});
    return response.data;
  };

  return queryClient.fetchQuery({{this.functionName}}QueryKey{{#if this.urlParams}}(params){{/if}}, fetchData);
};
{{/each}}

/**
 *  Get listing with iceberg
 */
export const getListingIceberg = async () => {
  try {
    const List = await fetchIceberg({ route: '{{this.apiPath}}' }).then(
      ({ data }) => data,
    );
    return List;
  } catch (error) {
    return null;
  }
}
