import { nanoid } from 'nanoid';

const getDate = () => {
  const date = new Date();
  return `${date.getDate()}${date.getMonth() + 1}`;
};

export const getAutoGeneratedName = (prefix = ''): string => {
  const date = getDate();
  const randomNumber = nanoid(5);
  const prefixPart = prefix ? `${prefix}-` : '';

  return `${prefixPart}${date}-${randomNumber}`;
};

const SIZE_ORDER = ['s', 'm', 'l', 'xl', '2xl'];

export const sortProductBySize = (
  products: Array<{
    product: string;
    pricings: Array<{ price: number }>;
    blobs?: { technical?: { name: string } };
  }>,
) =>
  products
    .map(({ product, pricings, blobs }) => ({
      size: product.split('-').pop(),
      price: pricings[0].price,
      technicalName: blobs?.technical?.name,
    }))
    .sort((a, b) => SIZE_ORDER.indexOf(a.size) - SIZE_ORDER.indexOf(b.size));

export const queryKeyBuilder = (
  projectId: string,
  region: string,
  rest?: string[],
): string[] => [
  'project',
  projectId,
  'region',
  region,
  ...(rest && rest.length > 0 ? rest : []),
];
