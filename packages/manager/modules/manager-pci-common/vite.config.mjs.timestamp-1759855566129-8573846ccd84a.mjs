// vite.config.mjs
import react from "file:///Users/hbenkhal/Desktop/git_workspace/manager/node_modules/@vitejs/plugin-react/dist/index.mjs";
import { defineConfig } from "file:///Users/hbenkhal/Desktop/git_workspace/manager/node_modules/vitest/dist/config.js";
import dts from "file:///Users/hbenkhal/Desktop/git_workspace/manager/packages/manager/modules/manager-pci-common/node_modules/vite-plugin-dts/dist/index.mjs";
import path from "path";
import tailwindcss from "file:///Users/hbenkhal/Desktop/git_workspace/manager/packages/manager/modules/manager-pci-common/node_modules/tailwindcss/lib/index.js";
import { getBaseConfig } from "file:///Users/hbenkhal/Desktop/git_workspace/manager/packages/manager-tools/manager-vite-config/src/index.js";

// package.json
var peerDependencies = {
  "@ovh-ux/manager-config": "^7.3.2",
  "@ovh-ux/manager-core-api": "^0.9.0",
  "@ovh-ux/manager-react-components": "^2.5.1",
  "@ovh-ux/manager-react-shell-client": "^0.9.1",
  "@ovh-ux/manager-tailwind-config": "^0.2.0",
  "@ovh-ux/shell": "^3.7.0",
  "@ovhcloud/ods-components": "^18.4.1",
  "@ovhcloud/ods-themes": "^18.4.1",
  "@tanstack/react-query": "^5.51.21",
  i18next: "^23.8.2",
  react: "^18.2.0",
  "react-dom": "^18.2.0",
  "react-i18next": "^14.0.5",
  "react-router-dom": "^6.3.0"
};

// vite.config.mjs
var __vite_injected_original_dirname = "/Users/hbenkhal/Desktop/git_workspace/manager/packages/manager/modules/manager-pci-common";
var baseConfig = getBaseConfig({});
var pathSrc = path.resolve(__vite_injected_original_dirname, "src");
var externalDeps = [
  ...Object.keys(peerDependencies || {}),
  "@ovhcloud/ods-components/react"
];
var vite_config_default = defineConfig({
  ...baseConfig,
  resolve: {
    alias: {
      "@": pathSrc
    }
  },
  plugins: [
    react(),
    dts({
      root: __vite_injected_original_dirname,
      insertTypesEntry: true,
      outDir: "dist/types"
    })
    /*
     * Visualizer emits an HTML file that allows to check what's really included in the bundle.
     * Uncomment if you want to run the plugin and check the output dist.
     * Be sure that plugin is installed before and well imported.
     */
    // visualizer({
    //   filename: 'stats/bundle-analysis.html',
    // }),
  ],
  css: {
    postcss: {
      plugins: [tailwindcss]
    }
  },
  test: {
    globals: true,
    environment: "jsdom"
  },
  build: {
    outDir: path.resolve(__vite_injected_original_dirname, "dist"),
    emptyOutDir: true,
    lib: {
      entry: path.resolve(pathSrc, "index.ts"),
      name: "ManagerPciCommonLib",
      formats: ["esm", "cjs"],
      fileName: (format) => `index.${format}.js`
    },
    rollupOptions: {
      external: (id) => externalDeps.some((dep) => id === dep || id.startsWith(`${dep}/`))
    },
    sourcemap: "hidden"
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,
