/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetServiceServiceIdRenewForecastParams = {
/**
 * Include service's option(s) billed on comsumption
 */
includeConsumption?: boolean;
/**
 * Include service's option(s)
 */
includeOptions?: boolean;
};

export type PostServiceServiceIdRenewBody = {
  /** Indicates if renew order is generated */
  dryRun?: boolean;
  /** Renew duration */
  duration: string;
  /** List of services to renew */
  services: number[];
};

export type GetServiceServiceIdRenewParams = {
/**
 * Include service's option(s)
 */
includeOptions?: boolean;
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Renew service description
 * @nullable
 */
export type ServiceListServiceOVHRenew = ServiceRenewOVH | null;

/**
 * Description of a service
 */
export interface ServiceRenewServiceOVH {
  /** ID of the service */
  readonly serviceId?: number;
  /** Name of the service */
  readonly serviceName?: string;
  /** Type of the service */
  readonly serviceType?: string;
}

/**
 * Representation of a product renew pricing
 */
export interface ServiceRenewRenewStrategyOVH {
  /** Price of the product */
  readonly price?: OrderPriceOVH;
  /** Price of the product in micro-centims */
  readonly priceInUcents?: number;
  /** Services renewed by strategy */
  readonly services?: readonly number[];
  /** Details of services renewed by strategy */
  readonly servicesDetails?: readonly ServiceRenewServiceOVH[];
}

/**
 * Details about a renew Order
 */
export interface ServiceRenewRenewOrderOVH {
  /**
   * Creation date of the renew Order
   * @nullable
   */
  readonly date?: string | null;
  /**
   * Expiration date of the renew Order
   * @nullable
   */
  readonly expirationDate?: string | null;
  /** ID of the renew Order */
  readonly orderId?: number;
  /** Password */
  readonly password?: string;
  /** Public pdf URL of the generated renew Order */
  readonly pdfUrl?: string;
  /** Price of the product without tax */
  readonly priceWithoutTax?: OrderPriceOVH;
  /** Price of the product with tax */
  readonly priceWithTax?: OrderPriceOVH;
  /**
   * Retraction date
   * @nullable
   */
  readonly retractionDate?: string | null;
  /** Value of the tax */
  readonly tax?: OrderPriceOVH;
  /** Public URL to display generated renew Order */
  readonly url?: string;
}

/**
 * Prices for renew forecasting
 */
export interface ServiceRenewRenewForecastPricesOVH {
  /** Tax */
  readonly tax?: OrderPriceOVH;
  /** Total price without tax */
  readonly withoutTax?: OrderPriceOVH;
  /** Total price with tax */
  readonly withTax?: OrderPriceOVH;
}

/**
 * Representation of a product renew pricing
 */
export interface ServiceRenewRenewForecastDetailOVH {
  /**
   * Detail description
   * @nullable
   */
  readonly description?: string | null;
  /** Quantity */
  readonly quantity?: number;
  /** Associated service name */
  readonly serviceName?: string;
  /** Total price */
  readonly totalPrice?: OrderPriceOVH;
  /** Price for one unit */
  readonly unitPrice?: OrderPriceOVH;
}

/**
 * Representation of service's renew forecasting
 */
export interface ServiceRenewRenewForecastOVH {
  /** Forecast details */
  readonly details?: readonly ServiceRenewRenewForecastDetailOVH[];
  /** Prices for renew forecasting */
  readonly prices?: ServiceRenewRenewForecastPricesOVH;
}

/**
 * List possible renews for service
 */
export interface ServiceRenewRenewDescriptionOVH {
  /** ISO8601 formatted renewal duration */
  readonly renewPeriod?: unknown;
  /** List possible strategies */
  readonly strategies?: readonly ServiceRenewRenewStrategyOVH[];
}

/**
 * Mode enum informations
 */
export type ServiceRenewModeOVH = typeof ServiceRenewModeOVH[keyof typeof ServiceRenewModeOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewModeOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  automaticV2024: 'automaticV2024',
  deleteAtEndEngagement: 'deleteAtEndEngagement',
  deleteAtExpiration: 'deleteAtExpiration',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Interval enum information
 */
export type ServiceRenewIntervalOVH = typeof ServiceRenewIntervalOVH[keyof typeof ServiceRenewIntervalOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewIntervalOVH = {
  P1M: 'P1M',
  P1Y: 'P1Y',
  P2Y: 'P2Y',
  P3M: 'P3M',
  P3Y: 'P3Y',
  P6M: 'P6M',
} as const;

/**
 * Product plan information
 */
export interface ServicePlanProductOVH {
  /**
   * Product name
   * @nullable
   */
  name?: string | null;
}

/**
 * route of this service
 */
export interface ServiceRouteOVH {
  /**
   * Path to use in API
   * @nullable
   */
  path?: string | null;
  /**
   * Path with variables applyed
   * @nullable
   */
  url?: string | null;
  /** Variables to use in the path */
  vars?: ComplexTypeSafeKeyValueStringOVH[];
}

/**
 * Possible resource states
 */
export type ServiceResourceStateEnumOVH = typeof ServiceResourceStateEnumOVH[keyof typeof ServiceResourceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceResourceStateEnumOVH = {
  deleted: 'deleted',
  deleting: 'deleting',
  ok: 'ok',
  opening: 'opening',
  suspended: 'suspended',
  suspending: 'suspending',
  toDelete: 'toDelete',
  toOpen: 'toOpen',
  toSuspend: 'toSuspend',
} as const;

/**
 * Resource state
 * @nullable
 */
export type ServiceResourceOVHState = ServiceResourceStateEnumOVH | null;

/**
 * Resource service informations
 */
export interface ServiceResourceOVH {
  /** Custom display name of the service */
  displayName?: string;
  /**
   * Name of the service
   * @nullable
   */
  name?: string | null;
  /**
   * Resource state
   * @nullable
   */
  state?: ServiceResourceOVHState;
}

/**
 * Interval between each renewal
 * @nullable
 */
export type ServiceRenewOVHInterval = ServiceRenewIntervalOVH | null;

/**
 * Renew information
 */
export interface ServiceRenewOVH {
  /**
   * Renew day number
   * @nullable
   */
  dayOfMonth?: number | null;
  /**
   * Interval between each renewal
   * @nullable
   */
  interval?: ServiceRenewOVHInterval;
  /** Renewal mode */
  mode?: ServiceRenewModeOVH;
  /**
   * Possible interval between each renewal
   * @nullable
   */
  possibleIntervals?: ServiceRenewIntervalOVH[] | null;
  /** Possible renewal mode */
  possibleModes?: ServiceRenewModeOVH[];
}

/**
 * Plan information
 */
export interface ServicePlanOVH {
  /**
   * Product code
   * @nullable
   */
  code?: string | null;
  /** Product plan information */
  product?: ServicePlanProductOVH;
}

/**
 * Possible billing states
 */
export type ServiceBillingStateEnumOVH = typeof ServiceBillingStateEnumOVH[keyof typeof ServiceBillingStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceBillingStateEnumOVH = {
  expired: 'expired',
  ok: 'ok',
  pending: 'pending',
  unpaid: 'unpaid',
} as const;

/**
 * Details about a Service
 */
export interface ServiceListServiceOVH {
  /** Creation date */
  readonly creationDate?: string;
  /** Resource details */
  readonly details?: readonly ComplexTypeSafeKeyValueStringOVH[];
  /**
   * Engagement date
   * @nullable
   */
  readonly engagementDate?: string | null;
  /**
   * Expiration date
   * @nullable
   */
  readonly expirationDate?: string | null;
  /**
   * The next billing date
   * @nullable
   */
  readonly nextBillingDate?: string | null;
  /** Plan service description */
  readonly plan?: ServicePlanOVH;
  /** Quantity */
  readonly quantity?: number;
  /**
   * Renew service description
   * @nullable
   */
  readonly renew?: ServiceListServiceOVHRenew;
  /** Resource service description */
  resource?: ServiceResourceOVH;
  /** Route to use in API */
  readonly route?: ServiceRouteOVH;
  /** Billing state of your service */
  readonly state?: ServiceBillingStateEnumOVH;
}

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

export type OrderCurrencyCodeEnumOVH = typeof OrderCurrencyCodeEnumOVH[keyof typeof OrderCurrencyCodeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OrderCurrencyCodeEnumOVH = {
  AUD: 'AUD',
  CAD: 'CAD',
  CZK: 'CZK',
  EUR: 'EUR',
  GBP: 'GBP',
  INR: 'INR',
  LTL: 'LTL',
  MAD: 'MAD',
  'N/A': 'N/A',
  PLN: 'PLN',
  SGD: 'SGD',
  TND: 'TND',
  USD: 'USD',
  XOF: 'XOF',
  points: 'points',
} as const;

/**
 * Price with it's currency and textual representation
 */
export interface OrderPriceOVH {
  currencyCode?: OrderCurrencyCodeEnumOVH;
  text?: string;
  value?: number;
}

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * Key and value, with proper key strings
 */
export interface ComplexTypeSafeKeyValueStringOVH {
  key?: string;
  value?: string;
}

