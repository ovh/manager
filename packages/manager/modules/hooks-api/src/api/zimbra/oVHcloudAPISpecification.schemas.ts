/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
/**
 * Common error model
 */
export type PostZimbraProjectProjectIdPlatform404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraProjectProjectId404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetZimbraProjectParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdTaskTaskId404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdTask404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetZimbraPlatformPlatformIdTaskParams = {
/**
 * Filter by organization identifier
 */
organizationId?: string;
/**
 * Filter by organization label
 */
organizationLabel?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdRedirectionRedirectionId404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdRedirection404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetZimbraPlatformPlatformIdRedirectionParams = {
/**
 * Filter by organization identifier
 */
organizationId?: string;
/**
 * Filter by organization label
 */
organizationLabel?: string;
/**
 * A redirection name
 */
redirection?: string;
/**
 * A redirection account target id
 */
redirectionTargetId?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdOrganizationOrganizationIdTask404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdOrganizationOrganizationIdEvent404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PutZimbraPlatformPlatformIdOrganizationOrganizationId412 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PutZimbraPlatformPlatformIdOrganizationOrganizationId404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdOrganizationOrganizationId404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PostZimbraPlatformPlatformIdOrganization404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdOrganization404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdMailingListMailingListIdTask404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdMailingListMailingListIdEvent404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdMailingListMailingListId404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdMailingList404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetZimbraPlatformPlatformIdMailingListParams = {
/**
 * Filter by organization identifier
 */
organizationId?: string;
/**
 * Filter by organization label
 */
organizationLabel?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdEvent404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetZimbraPlatformPlatformIdEventParams = {
/**
 * Filter by organization identifier
 */
organizationId?: string;
/**
 * Filter by organization label
 */
organizationLabel?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdDomainDomainIdTask404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdDomainDomainIdEvent404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PutZimbraPlatformPlatformIdDomainDomainId412 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PutZimbraPlatformPlatformIdDomainDomainId404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdDomainDomainId404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PostZimbraPlatformPlatformIdDomain404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PostZimbraPlatformPlatformIdDomain400 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdDomain404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetZimbraPlatformPlatformIdDomainParams = {
/**
 * Filter by organization identifier
 */
organizationId?: string;
/**
 * Filter by organization label
 */
organizationLabel?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdAliasAliasId404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdAlias404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetZimbraPlatformPlatformIdAliasParams = {
/**
 * An alias name
 */
alias?: string;
/**
 * An alias email target id
 */
aliasTargetId?: string;
/**
 * Filter by organization identifier
 */
organizationId?: string;
/**
 * Filter by organization label
 */
organizationLabel?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdAccountAccountIdTask404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdAccountAccountIdEvent404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PutZimbraPlatformPlatformIdAccountAccountId412 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PutZimbraPlatformPlatformIdAccountAccountId404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdAccountAccountId404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PostZimbraPlatformPlatformIdAccount409 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PostZimbraPlatformPlatformIdAccount404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PostZimbraPlatformPlatformIdAccount400 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformIdAccount404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetZimbraPlatformPlatformIdAccountParams = {
/**
 * Filter by Domain identifier
 */
domainId?: string;
/**
 * Filter by organization identifier
 */
organizationId?: string;
/**
 * Filter by organization label
 */
organizationLabel?: string;
};

/**
 * Common error model
 */
export type PutZimbraPlatformPlatformId412 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetZimbraPlatformPlatformId404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetZimbraPlatformParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
/**
 * Project identifier
 */
projectId?: string;
};

/**
 * Object representing a DNS configuration that should be applied
 */
export interface ZimbraExpectedDNSConfigOVH {
  /** Recommended MX records for efficient mail delivery */
  readonly mx?: readonly ZimbraMXRecordOVH[];
  /** DNS configuration to apply to verify ownership */
  readonly ownership?: ZimbraDNSOwnershipOVH;
}

/**
 * Error code of SPF Diagnostics
 */
export type ZimbraSPFErrorCodeEnumOVH = typeof ZimbraSPFErrorCodeEnumOVH[keyof typeof ZimbraSPFErrorCodeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ZimbraSPFErrorCodeEnumOVH = {
  MISSING_RECORD: 'MISSING_RECORD',
  OVH_NOT_INCLUDED: 'OVH_NOT_INCLUDED',
} as const;

/**
 * Error code of the SPF diagnostic
 * @nullable
 */
export type ZimbraSPFDiagnosticOVHErrorCode = ZimbraSPFErrorCodeEnumOVH | null;

/**
 * Object representing a SPF diagnostic
 */
export interface ZimbraSPFDiagnosticOVH {
  /**
   * Error code of the SPF diagnostic
   * @nullable
   */
  readonly errorCode?: ZimbraSPFDiagnosticOVHErrorCode;
  /**
   * Error message of the SPF diagnostic
   * @nullable
   */
  readonly errorMessage?: string | null;
  /**
   * Record found for SPF
   * @nullable
   */
  readonly recordFound?: string | null;
  /** Status of the SPF diagnostic */
  readonly status?: ZimbraDiagnosticStatusEnumOVH;
}

/**
 * Object representing Redirection
 */
export interface ZimbraRedirectionBaseOVH {
  /** The email redirected to */
  redirection: string;
  /** The target mail to redirect */
  redirectionTargetId: string;
}

/**
 * Payload for creating new Zimbra Redirection
 */
export interface ZimbraRedirectionPostPayloadOVH {
  /** Target redirection specification */
  targetSpec: ZimbraRedirectionBaseOVH;
}

/**
 * Object representing Redirection
 */
export interface ZimbraRedirectionOVH {
  /** Keep a copy on targeted mailbox or not */
  readonly keepCopy?: boolean;
  /** The email redirected to */
  readonly redirection?: string;
  /** The target mail to redirect */
  readonly redirectionTargetId?: string;
}

/**
 * Response for get redirection
 */
export interface ZimbraRedirectionResponseOVH {
  /** Checksum hash in MD5 representation */
  readonly checksum?: string;
  /** Object representing Alias */
  readonly currentState?: ZimbraRedirectionOVH;
  /** An array containing tasks responses pending on resource extends AsyncResourceBase object */
  readonly currentTasks?: readonly CommonCurrentTaskOVH[];
  /** Resource identifier in UUID representation */
  readonly id?: string;
  /** Current resource status */
  readonly resourceStatus?: CommonResourceStatusEnumOVH;
  /** Object representing Alias */
  readonly targetSpec?: ZimbraRedirectionOVH;
}

/**
 * Number representation of account capacity
 */
export interface ZimbraQuotaOVH {
  /** Remaining space */
  available?: number;
  /** Space already taken */
  used?: number;
}

/**
 * IAM resource metadata
 * @nullable
 */
export type ZimbraProjectResponseWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * Object representing project
 */
export interface ZimbraProjectOVH {
  /** Description of the project */
  readonly description?: string;
  /** Name of the project */
  readonly name?: string;
  /** Total number of created platforms for wholesale end-customers by wholesale customer */
  readonly numberOfPlatforms?: number;
  /** Total storage used by end-customers in bytes */
  readonly totalStorage?: number;
}

/**
 * Response for get project
 */
export interface ZimbraProjectResponseWithIAMOVH {
  /** Checksum hash in MD5 representation */
  readonly checksum?: string;
  /** Object representing project */
  readonly currentState?: ZimbraProjectOVH;
  /** An array containing tasks responses pending on resource extends AsyncResourceBase object */
  readonly currentTasks?: readonly CommonCurrentTaskOVH[];
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: ZimbraProjectResponseWithIAMOVHIam;
  /** Resource identifier in UUID representation */
  readonly id?: string;
  /** Current resource status */
  readonly resourceStatus?: CommonResourceStatusEnumOVH;
  /** Object representing project */
  readonly targetSpec?: ZimbraProjectOVH;
}

/**
 * Response for get project
 */
export interface ZimbraProjectResponseOVH {
  /** Checksum hash in MD5 representation */
  readonly checksum?: string;
  /** Object representing project */
  readonly currentState?: ZimbraProjectOVH;
  /** An array containing tasks responses pending on resource extends AsyncResourceBase object */
  readonly currentTasks?: readonly CommonCurrentTaskOVH[];
  /** Resource identifier in UUID representation */
  readonly id?: string;
  /** Current resource status */
  readonly resourceStatus?: CommonResourceStatusEnumOVH;
  /** Object representing project */
  readonly targetSpec?: ZimbraProjectOVH;
}

/**
 * Object representing platform
 */
export interface ZimbraPlatformTargetSpecOVH {
  /** Description of the platform */
  readonly description?: string;
  /** Name of the platform */
  readonly name?: string;
}

/**
 * IAM resource metadata
 * @nullable
 */
export type ZimbraPlatformResponseWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * Object representing Put platform route payload
 */
export interface ZimbraPlatformPutPayloadOVH {
  /** Known checksum of the resource, allowing to prevent unwanted side effects */
  checksum?: string;
  /** Target platform specification */
  targetSpec: ZimbraPlatformTargetSpecOVH;
}

/**
 * Object representing POST platform route payload
 */
export interface ZimbraPlatformPostPayloadOVH {
  /** Target organization specification */
  targetSpec: ZimbraPlatformTargetSpecOVH;
}

/**
 * Object representing platform
 */
export interface ZimbraPlatformCurrentStateOVH {
  /** Statistics of accounts on the platform */
  readonly accountsStatistics?: readonly ZimbraOfferStatisticsOVH[];
  /** Description of the platform */
  readonly description?: string;
  /** Name of the platform */
  readonly name?: string;
  /** Total number of created organizations in the platform */
  readonly numberOfOrganizations?: number;
  /** Maximum storage capacity per account allowed on the platform */
  readonly quota?: number;
}

/**
 * Response for get platform
 */
export interface ZimbraPlatformResponseWithIAMOVH {
  /** Checksum hash in MD5 representation */
  readonly checksum?: string;
  /** Object representing platform */
  readonly currentState?: ZimbraPlatformCurrentStateOVH;
  /** An array containing tasks responses pending on resource extends AsyncResourceBase object */
  readonly currentTasks?: readonly CommonCurrentTaskOVH[];
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: ZimbraPlatformResponseWithIAMOVHIam;
  /** Resource identifier in UUID representation */
  readonly id?: string;
  /** Current resource status */
  readonly resourceStatus?: CommonResourceStatusEnumOVH;
  /** Object representing platform */
  readonly targetSpec?: ZimbraPlatformTargetSpecOVH;
}

/**
 * Response for get platform
 */
export interface ZimbraPlatformResponseOVH {
  /** Checksum hash in MD5 representation */
  readonly checksum?: string;
  /** Object representing platform */
  readonly currentState?: ZimbraPlatformCurrentStateOVH;
  /** An array containing tasks responses pending on resource extends AsyncResourceBase object */
  readonly currentTasks?: readonly CommonCurrentTaskOVH[];
  /** Resource identifier in UUID representation */
  readonly id?: string;
  /** Current resource status */
  readonly resourceStatus?: CommonResourceStatusEnumOVH;
  /** Object representing platform */
  readonly targetSpec?: ZimbraPlatformTargetSpecOVH;
}

/**
 * Object representing organization
 */
export interface ZimbraOrganizationPutTargetSpecOVH {
  /**
   * Description of the organization
   * @nullable
   */
  description?: string | null;
  /** Short name of the organization */
  label?: string;
  /** Name of the organization */
  name?: string;
}

/**
 * Response for get organization
 */
export interface ZimbraOrganizationResponseOVH {
  /** Checksum hash in MD5 representation */
  readonly checksum?: string;
  /** Object representing organization */
  readonly currentState?: ZimbraOrganizationCurrentStateOVH;
  /** An array containing tasks responses pending on resource extends AsyncResourceBase object */
  readonly currentTasks?: readonly CommonCurrentTaskOVH[];
  /** Resource identifier in UUID representation */
  readonly id?: string;
  /** Current resource status */
  readonly resourceStatus?: CommonResourceStatusEnumOVH;
  /** Object representing organization */
  readonly targetSpec?: ZimbraOrganizationPutTargetSpecOVH;
}

/**
 * Object representing PUT account route payload
 */
export interface ZimbraOrganizationPutPayloadOVH {
  /** Known checksum of the resource, allowing to prevent unwanted side effects */
  checksum?: string;
  /** Target organization specification */
  targetSpec: ZimbraOrganizationPutTargetSpecOVH;
}

/**
 * Object representing organization
 */
export interface ZimbraOrganizationPostTargetSpecOVH {
  /**
   * Description of the organization
   * @nullable
   */
  description?: string | null;
  /** Short name of the organization */
  label: string;
  /** Name of the organization */
  name: string;
}

/**
 * Object representing POST organization route payload
 */
export interface ZimbraOrganizationPostPayloadOVH {
  /** Target organization specification */
  targetSpec: ZimbraOrganizationPostTargetSpecOVH;
}

/**
 * Statistics per offer
 */
export interface ZimbraOfferStatisticsOVH {
  /** Total number of accounts on this offer that can be configured */
  readonly availableAccountsCount?: number;
  /** Number of accounts on the offer that are configured */
  readonly configuredAccountsCount?: number;
  /** Commercial name of the offer */
  readonly offer?: ZimbraOfferEnumOVH;
}

/**
 * Object representing organization
 */
export interface ZimbraOrganizationCurrentStateOVH {
  /** Statistics of accounts on the organization */
  readonly accountsStatistics?: readonly ZimbraOfferStatisticsOVH[];
  /** Date of creation */
  readonly createdAt?: string;
  /**
   * Description of the organization
   * @nullable
   */
  readonly description?: string | null;
  /** Short name of the organization */
  readonly label?: string;
  /** Name of the organization */
  readonly name?: string;
  /** Size of consumed storage by all accounts */
  readonly storageConsumed?: number;
  /**
   * Last update date
   * @nullable
   */
  readonly updatedAt?: string | null;
}

/**
 * Commercial name of the offer
 */
export type ZimbraOfferEnumOVH = typeof ZimbraOfferEnumOVH[keyof typeof ZimbraOfferEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ZimbraOfferEnumOVH = {
  BUSINESS: 'BUSINESS',
  STARTER: 'STARTER',
} as const;

/**
 * Response for get mailing list
 */
export interface ZimbraMailingListResponseOVH {
  /** Checksum hash in MD5 representation */
  readonly checksum?: string;
  /** Object representing mailing list */
  readonly currentState?: ZimbraMailingListOVH;
  /** An array containing tasks responses pending on resource extends AsyncResourceBase object */
  readonly currentTasks?: readonly CommonCurrentTaskOVH[];
  /** Resource identifier in UUID representation */
  readonly id?: string;
  /** Current resource status */
  readonly resourceStatus?: CommonResourceStatusEnumOVH;
  /** Object representing mailing list */
  readonly targetSpec?: ZimbraMailingListOVH;
}

/**
 * Base object of a mailing list
 */
export interface ZimbraMailingListBaseOVH {
  /** Configuration of the default ReplyTo */
  defaultReplyTo?: string;
  /** Email address of the mailing list */
  email?: string;
  /** Language used on the mailing list correspondence */
  language?: string;
  /** Members of the mailing list */
  members?: string[];
  /** What moderation option is picked. TBD : detail moderation options. */
  moderationOption?: string;
  /** Organization in which mailing list is */
  organizationId?: string;
  /** Id of the account that owns the mailing list */
  owner?: string;
}

/**
 * Object representing PUT mailing list route payload
 */
export interface ZimbraMailingListPutPayloadOVH {
  /** Known checksum of the resource, allowing to prevent unwanted side effects */
  checksum?: string;
  /** Target mailing list specification */
  targetSpec?: ZimbraMailingListBaseOVH;
}

/**
 * Object representing POST mailing list route payload
 */
export interface ZimbraMailingListPostPayloadOVH {
  /** Target organization specification */
  targetSpec: ZimbraMailingListBaseOVH;
}

/**
 * Object representing mailing list
 */
export interface ZimbraMailingListOVH {
  /** Configuration of the default ReplyTo */
  readonly defaultReplyTo?: string;
  /** Email address of the mailing list */
  readonly email?: string;
  /** Language used on the mailing list correspondence */
  readonly language?: string;
  /** Members of the mailing list */
  readonly members?: readonly string[];
  /** What moderation option is picked. TBD : detail moderation options. */
  readonly moderationOption?: string;
  /** ID of the organization to which the mailing list belongs */
  readonly organizationId?: string;
  /** Label of the organization to which the mailing list belongs */
  readonly organizationLabel?: string;
  /** ID of the account that owns the mailing list */
  readonly owner?: string;
}

/**
 * Object representing an MX record
 */
export interface ZimbraMXRecordOVH {
  /** Priority for that target server */
  readonly priority?: number;
  /** Target server */
  readonly target?: string;
}

/**
 * Error code of MX Diagnostics
 */
export type ZimbraMXErrorCodeEnumOVH = typeof ZimbraMXErrorCodeEnumOVH[keyof typeof ZimbraMXErrorCodeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ZimbraMXErrorCodeEnumOVH = {
  MISSING_VALID_MX_RECORD: 'MISSING_VALID_MX_RECORD',
} as const;

/**
 * Error code of the MX diagnostic
 * @nullable
 */
export type ZimbraMXDiagnosticOVHErrorCode = ZimbraMXErrorCodeEnumOVH | null;

/**
 * Object representing a MX diagnostic
 */
export interface ZimbraMXDiagnosticOVH {
  /**
   * Error code of the MX diagnostic
   * @nullable
   */
  readonly errorCode?: ZimbraMXDiagnosticOVHErrorCode;
  /**
   * Error message of the MX diagnostic
   * @nullable
   */
  readonly errorMessage?: string | null;
  /**
   * MX records found
   * @nullable
   */
  readonly recordsFound?: readonly ZimbraMXRecordOVH[] | null;
  /** Status of the MX diagnostic */
  readonly status?: ZimbraDiagnosticStatusEnumOVH;
}

/**
 * Global status of the diagnostic
 */
export type ZimbraGlobalDiagnosticStatusEnumOVH = typeof ZimbraGlobalDiagnosticStatusEnumOVH[keyof typeof ZimbraGlobalDiagnosticStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ZimbraGlobalDiagnosticStatusEnumOVH = {
  ERROR: 'ERROR',
  OK: 'OK',
  PARTIAL: 'PARTIAL',
} as const;

/**
 * Error code for glopbal diagnostic
 */
export type ZimbraGlobalDiagnosticErrorEnumOVH = typeof ZimbraGlobalDiagnosticErrorEnumOVH[keyof typeof ZimbraGlobalDiagnosticErrorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ZimbraGlobalDiagnosticErrorEnumOVH = {
  DNS_TIMEOUT: 'DNS_TIMEOUT',
} as const;

/**
 * Current domain status
 */
export type ZimbraDomainStatusEnumOVH = typeof ZimbraDomainStatusEnumOVH[keyof typeof ZimbraDomainStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ZimbraDomainStatusEnumOVH = {
  READY: 'READY',
} as const;

/**
 * Base object of a domain
 */
export interface ZimbraDomainPutTargetSpecOVH {
  /** ID of the organization to which the domain belongs */
  organizationId?: string;
}

/**
 * Response for get Domain
 */
export interface ZimbraDomainResponseOVH {
  /** Checksum hash in MD5 representation */
  readonly checksum?: string;
  /** Object representing domain */
  readonly currentState?: ZimbraDomainCurrentStateOVH;
  /** An array containing tasks responses pending on resource extends AsyncResourceBase object */
  readonly currentTasks?: readonly CommonCurrentTaskOVH[];
  /** Resource identifier in UUID representation */
  readonly id?: string;
  /** Current resource status */
  readonly resourceStatus?: CommonResourceStatusEnumOVH;
  /** Object representing domain */
  readonly targetSpec?: ZimbraDomainPutTargetSpecOVH;
}

/**
 * Object representing PUT domain route payload
 */
export interface ZimbraDomainPutPayloadOVH {
  /** Known checksum of the resource, allowing to prevent unwanted side effects */
  checksum?: string;
  /** Target domain specification */
  targetSpec: ZimbraDomainPutTargetSpecOVH;
}

/**
 * Object representing POST domain payload
 */
export interface ZimbraDomainPostTargetSpecOVH {
  /** Whether to automatically configure MX if the DNS zone is hosted by OVH */
  autoConfigureMX: boolean;
  /** Whether to automatically configure SPF if the DNS zone is hosted by OVH */
  autoConfigureSPF?: boolean;
  /** Name of the domain */
  name: string;
  /** Organization in which domain is */
  organizationId: string;
}

/**
 * Object representing POST domain route payload
 */
export interface ZimbraDomainPostPayloadOVH {
  /** Target organization specification */
  targetSpec: ZimbraDomainPostTargetSpecOVH;
}

/**
 * Object representing domain
 */
export interface ZimbraDomainCurrentStateOVH {
  /** Statistics of accounts on the domain */
  readonly accountsStatistics?: readonly ZimbraOfferStatisticsOVH[];
  /** Date of creation */
  readonly createdAt?: string;
  /** DNS configuration that should be applied */
  readonly expectedDNSConfig?: ZimbraExpectedDNSConfigOVH;
  /** Name of the domain */
  readonly name?: string;
  /** ID of the organization to which the domain belongs */
  readonly organizationId?: string;
  /** Label of the organization to which the domain belongs */
  readonly organizationLabel?: string;
  /** Current domain status */
  readonly status?: ZimbraDomainStatusEnumOVH;
  /**
   * Last update date
   * @nullable
   */
  readonly updatedAt?: string | null;
}

/**
 * Status of the diagnostic
 */
export type ZimbraDiagnosticStatusEnumOVH = typeof ZimbraDiagnosticStatusEnumOVH[keyof typeof ZimbraDiagnosticStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ZimbraDiagnosticStatusEnumOVH = {
  DISABLED: 'DISABLED',
  ERROR: 'ERROR',
  OK: 'OK',
  TO_CONFIGURE: 'TO_CONFIGURE',
  UPDATING: 'UPDATING',
} as const;

/**
 * Response to a diagnostic request
 */
export interface ZimbraDiagnosticResponseOVH {
  /** Diagnostic of the domain */
  readonly diagnostic?: ZimbraDiagnosticOVH;
  /** Id of the domain */
  readonly domainId?: string;
  /** Name of the domain */
  readonly domainName?: string;
  /** Id of the diagnostic */
  readonly id?: string;
}

/**
 * Diagnostic of SPF field
 * @nullable
 */
export type ZimbraDiagnosticOVHSpf = ZimbraSPFDiagnosticOVH | null;

/**
 * Diagnostic of MX fields
 * @nullable
 */
export type ZimbraDiagnosticOVHMx = ZimbraMXDiagnosticOVH | null;

/**
 * Error code of the global diagnostic
 * @nullable
 */
export type ZimbraDiagnosticOVHErrorCode = ZimbraGlobalDiagnosticErrorEnumOVH | null;

/**
 * Diagnostic of a domain
 */
export interface ZimbraDiagnosticOVH {
  /**
   * Diagnostic of DKIM fields
   * @nullable
   */
  readonly dkim?: ZimbraDiagnosticOVHDkim;
  /**
   * Error code of the global diagnostic
   * @nullable
   */
  readonly errorCode?: ZimbraDiagnosticOVHErrorCode;
  /**
   * Error message of the global diagnostic
   * @nullable
   */
  readonly errorMessage?: string | null;
  /**
   * Diagnostic of MX fields
   * @nullable
   */
  readonly mx?: ZimbraDiagnosticOVHMx;
  /**
   * Diagnostic of SPF field
   * @nullable
   */
  readonly spf?: ZimbraDiagnosticOVHSpf;
  /** Global status of the diagnostic */
  readonly status?: ZimbraGlobalDiagnosticStatusEnumOVH;
}

/**
 * Object representing a DNS configuration that should be applied to verify ownership
 */
export interface ZimbraDNSOwnershipOVH {
  /**
   * Identifier on zone of domain for verification
   * @nullable
   */
  readonly cname?: string | null;
}

/**
 * Error code of DKIM Diagnostics
 */
export type ZimbraDKIMErrorCodeEnumOVH = typeof ZimbraDKIMErrorCodeEnumOVH[keyof typeof ZimbraDKIMErrorCodeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ZimbraDKIMErrorCodeEnumOVH = {
  INCORRECT_CNAME_RECORD: 'INCORRECT_CNAME_RECORD',
  MISSING_ONE_SELECTOR: 'MISSING_ONE_SELECTOR',
  OVH_NOT_INCLUDED: 'OVH_NOT_INCLUDED',
  TASK_FAILED: 'TASK_FAILED',
} as const;

/**
 * Error code of the DKIM diagnostic
 * @nullable
 */
export type ZimbraDKIMDiagnosticOVHErrorCode = ZimbraDKIMErrorCodeEnumOVH | null;

/**
 * Object representing a diagnostic of DKIM
 */
export interface ZimbraDKIMDiagnosticOVH {
  /**
   * Error code of the DKIM diagnostic
   * @nullable
   */
  readonly errorCode?: ZimbraDKIMDiagnosticOVHErrorCode;
  /**
   * Error message of the DKIM diagnostic
   * @nullable
   */
  readonly errorMessage?: string | null;
  /**
   * Records found in DNS identified as DKIM
   * @nullable
   */
  readonly recordsFound?: readonly string[] | null;
  /** Status of the DKIM diagnostic */
  readonly status?: ZimbraDiagnosticStatusEnumOVH;
}

/**
 * Diagnostic of DKIM fields
 * @nullable
 */
export type ZimbraDiagnosticOVHDkim = ZimbraDKIMDiagnosticOVH | null;

/**
 * Object representing contact information which extends account object
 */
export interface ZimbraContactInformationOVH {
  /**
   * City of the account user
   * @nullable
   */
  city?: string | null;
  /**
   * Company name of the account user
   * @nullable
   */
  company?: string | null;
  /**
   * Company name of the account user
   * @nullable
   */
  country?: string | null;
  /**
   * Fax number of the account user
   * @nullable
   */
  faxNumber?: string | null;
  /**
   * Mobile number of the account user
   * @nullable
   */
  mobileNumber?: string | null;
  /**
   * Office location of the account user
   * @nullable
   */
  office?: string | null;
  /**
   * Phone number of the account user
   * @nullable
   */
  phoneNumber?: string | null;
  /**
   * Postal code of the account user
   * @nullable
   */
  postcode?: string | null;
  /**
   * Profession of the account user
   * @nullable
   */
  profession?: string | null;
  /**
   * Department of the account user
   * @nullable
   */
  service?: string | null;
  /**
   * Street name of the account user
   * @nullable
   */
  street?: string | null;
}

/**
 * Response for get Alias
 */
export interface ZimbraAliasResponseOVH {
  /** Checksum hash in MD5 representation */
  readonly checksum?: string;
  /** Object representing Alias */
  readonly currentState?: ZimbraAliasOVH;
  /** An array containing tasks responses pending on resource extends AsyncResourceBase object */
  readonly currentTasks?: readonly CommonCurrentTaskOVH[];
  /** Resource identifier in UUID representation */
  readonly id?: string;
  /** Current resource status */
  readonly resourceStatus?: CommonResourceStatusEnumOVH;
  /** Object representing Alias */
  readonly targetSpec?: ZimbraAliasOVH;
}

/**
 * Object representing Alias
 */
export interface ZimbraAliasBaseOVH {
  /** The alias */
  alias: string;
  /** The target mail to alias */
  aliasTargetId: string;
}

/**
 * Payload for creating new Zimbra alias
 */
export interface ZimbraAliasPostPayloadOVH {
  /** Target alias specification */
  targetSpec: ZimbraAliasBaseOVH;
}

/**
 * Object representing Alias
 */
export interface ZimbraAliasOVH {
  /** The alias */
  readonly alias?: string;
  /** The target mail to alias */
  readonly aliasTargetId?: string;
}

/**
 * Object representing contact information which extends account object
 * @nullable
 */
export type ZimbraAccountTargetSpecOVHContactInformation = ZimbraContactInformationOVH | null;

/**
 * Base object of the account
 */
export interface ZimbraAccountTargetSpecOVH {
  /**
   * Object representing contact information which extends account object
   * @nullable
   */
  readonly contactInformation?: ZimbraAccountTargetSpecOVHContactInformation;
  /**
   * Description of the account
   * @nullable
   */
  readonly description?: string | null;
  /**
   * Display name of the account
   * @nullable
   */
  readonly displayName?: string | null;
  /** Email address of the account */
  readonly email?: string;
  /**
   * First name of the account user
   * @nullable
   */
  readonly firstName?: string | null;
  /** Boolean value representing if email address should be hidden in GAL */
  readonly hideInGal?: boolean;
  /**
   * Last name of the account user
   * @nullable
   */
  readonly lastName?: string | null;
}

/**
 * Current account status
 */
export type ZimbraAccountStatusEnumOVH = typeof ZimbraAccountStatusEnumOVH[keyof typeof ZimbraAccountStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ZimbraAccountStatusEnumOVH = {
  BLOCKEDFORSPAM: 'BLOCKEDFORSPAM',
} as const;

/**
 * Number representation of account capacity
 * @nullable
 */
export type ZimbraAccountPutTargetSpecOVHQuota = ZimbraQuotaOVH | null;

/**
 * Object representing contact information which extends account object
 * @nullable
 */
export type ZimbraAccountPutTargetSpecOVHContactInformation = ZimbraContactInformationOVH | null;

/**
 * Base object of the account
 */
export interface ZimbraAccountPutTargetSpecOVH {
  /**
   * Object representing contact information which extends account object
   * @nullable
   */
  contactInformation?: ZimbraAccountPutTargetSpecOVHContactInformation;
  /**
   * Description of the account
   * @nullable
   */
  description?: string | null;
  /**
   * Display name of the account
   * @nullable
   */
  displayName?: string | null;
  /** Email address of the account */
  email?: string;
  /**
   * First name of the account user
   * @nullable
   */
  firstName?: string | null;
  /** Force a change password after user logs into webmail */
  forceChangePasswordAfterLogin?: boolean;
  /** Boolean value representing if email address should be hidden in GAL */
  hideInGal?: boolean;
  /**
   * Last name of the account user
   * @nullable
   */
  lastName?: string | null;
  /** Password of the account */
  password?: string;
  /**
   * Number representation of account capacity
   * @nullable
   */
  quota?: ZimbraAccountPutTargetSpecOVHQuota;
}

/**
 * Object representing PUT account route payload
 */
export interface ZimbraAccountPutPayloadOVH {
  /** Known checksum of the resource, allowing to prevent unwanted side effects */
  checksum?: string;
  /** Target account specification */
  targetSpec: ZimbraAccountPutTargetSpecOVH;
}

/**
 * Number representation of account capacity
 * @nullable
 */
export type ZimbraAccountPostTargetSpecOVHQuota = ZimbraQuotaOVH | null;

/**
 * Object representing POST account route payload
 */
export interface ZimbraAccountPostTargetSpecOVH {
  /** Object representing contact information which extends account object */
  contactInformation?: ZimbraContactInformationOVH;
  /** Description of the account */
  description?: string;
  /** Display name of the account */
  displayName?: string;
  /** Email address of the account */
  email: string;
  /** First name of the account user */
  firstName?: string;
  /** Force a change password after user logs into webmail */
  forceChangePasswordAfterLogin?: boolean;
  /** Boolean value representing if email address should be hidden in GAL */
  hideInGal?: boolean;
  /** Last name of the account user */
  lastName?: string;
  /** Offer type of the account */
  offer: ZimbraOfferEnumOVH;
  /** Password of the account */
  password: string;
  /**
   * Number representation of account capacity
   * @nullable
   */
  quota?: ZimbraAccountPostTargetSpecOVHQuota;
}

/**
 * Object representing POST account route payload
 */
export interface ZimbraAccountPostPayloadOVH {
  /** Target organization specification */
  targetSpec: ZimbraAccountPostTargetSpecOVH;
}

/**
 * Detailed Status of an Account
 */
export interface ZimbraAccountDetailedStatusOVH {
  /** Further details if the code is not sufficient */
  readonly details?: string;
  /** A link to a document that provides more information on the status */
  readonly link?: string;
  /** Current account status */
  readonly status?: ZimbraAccountStatusEnumOVH;
}

/**
 * Maximum account capacity
 * @nullable
 */
export type ZimbraAccountCurrentStateOVHQuota = ZimbraQuotaOVH | null;

/**
 * Object representing contact information which extends account object
 * @nullable
 */
export type ZimbraAccountCurrentStateOVHContactInformation = ZimbraContactInformationOVH | null;

/**
 * Object representing account
 */
export interface ZimbraAccountCurrentStateOVH {
  /**
   * Object representing contact information which extends account object
   * @nullable
   */
  readonly contactInformation?: ZimbraAccountCurrentStateOVHContactInformation;
  /** Date of creation */
  readonly createdAt?: string;
  /**
   * Description of the account
   * @nullable
   */
  readonly description?: string | null;
  readonly detailedStatus?: readonly ZimbraAccountDetailedStatusOVH[];
  /**
   * Display name of the account
   * @nullable
   */
  readonly displayName?: string | null;
  /** Domain ID related to the account */
  readonly domainId?: string;
  /** Email address of the account */
  readonly email?: string;
  /**
   * First name of the account user
   * @nullable
   */
  readonly firstName?: string | null;
  /** Whether to hide email address in GAL or not */
  readonly hideInGal?: boolean;
  /**
   * Last connection date
   * @nullable
   */
  readonly lastConnectionAt?: string | null;
  /**
   * Last name of the account user
   * @nullable
   */
  readonly lastName?: string | null;
  /** Offer of the account */
  readonly offer?: ZimbraOfferEnumOVH;
  /** ID of the organization to which the account belongs */
  readonly organizationId?: string;
  /** Label of the organization to which the account belongs */
  readonly organizationLabel?: string;
  /**
   * Maximum account capacity
   * @nullable
   */
  readonly quota?: ZimbraAccountCurrentStateOVHQuota;
  /**
   * Date of update
   * @nullable
   */
  readonly updatedAt?: string | null;
}

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * TaskStatusEnum
 */
export type CommonTaskStatusEnumOVH = typeof CommonTaskStatusEnumOVH[keyof typeof CommonTaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommonTaskStatusEnumOVH = {
  DONE: 'DONE',
  ERROR: 'ERROR',
  PENDING: 'PENDING',
  RUNNING: 'RUNNING',
  SCHEDULED: 'SCHEDULED',
} as const;

/**
 * Detailed information about an asynchronous operation progress steps
 */
export interface CommonTaskProgressOVH {
  /** Progress step name */
  readonly name?: string;
  /** Current status of the progress step */
  readonly status?: CommonTaskStatusEnumOVH;
}

/**
 * Errors that occured on the task
 */
export interface CommonTaskErrorOVH {
  /** Error description */
  readonly message?: string;
}

/**
 * Asynchronous operation
 */
export interface CommonTaskOVH {
  /** Creation date of the task */
  readonly createdAt?: string;
  /**
   * Errors that occured on the task
   * @nullable
   */
  readonly errors?: readonly CommonTaskErrorOVH[] | null;
  /**
   * Ending date of the task
   * @nullable
   */
  readonly finishedAt?: string | null;
  /** Identifier of the task */
  readonly id?: string;
  /** Link to the related resource */
  readonly link?: string;
  /** Description of the task */
  readonly message?: string;
  /** Progress steps of the asynchronous operation */
  readonly progress?: readonly CommonTaskProgressOVH[];
  /**
   * Starting date of the task
   * @nullable
   */
  readonly startedAt?: string | null;
  /** Current global status of the task */
  readonly status?: CommonTaskStatusEnumOVH;
  /** Type of the task */
  readonly type?: string;
  /** Last update of the task */
  readonly updatedAt?: string;
}

/**
 * ResourceStatusEnum
 */
export type CommonResourceStatusEnumOVH = typeof CommonResourceStatusEnumOVH[keyof typeof CommonResourceStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommonResourceStatusEnumOVH = {
  CREATING: 'CREATING',
  DELETING: 'DELETING',
  ERROR: 'ERROR',
  READY: 'READY',
  UPDATING: 'UPDATING',
} as const;

/**
 * List all defined values for an event type field
 */
export type CommonEventTypeEnumOVH = typeof CommonEventTypeEnumOVH[keyof typeof CommonEventTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommonEventTypeEnumOVH = {
  TARGET_SPEC_UPDATE: 'TARGET_SPEC_UPDATE',
  TASK_ERROR: 'TASK_ERROR',
  TASK_START: 'TASK_START',
  TASK_SUCCESS: 'TASK_SUCCESS',
} as const;

/**
 * Represents an event for an async envelope
 */
export interface CommonEventOVH {
  /** Creation date of the event */
  readonly createdAt?: string;
  /** Nature of the event */
  readonly kind?: string;
  /**
   * Link to the event related resource
   * @nullable
   */
  readonly link?: string | null;
  /** Description of what happened on the event */
  readonly message?: string;
  /** Type of the event */
  readonly type?: CommonEventTypeEnumOVH;
}

/**
 * Current status of a task. A task in ERROR cannot be retried without your inputs. PENDING tasks will be executed as soon as possible. A RUNNING task is currently executing your original request. SCHEDULED is used for tasks that will be executed in the future
 */
export type CommonCurrentTaskStatusEnumOVH = typeof CommonCurrentTaskStatusEnumOVH[keyof typeof CommonCurrentTaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommonCurrentTaskStatusEnumOVH = {
  ERROR: 'ERROR',
  PENDING: 'PENDING',
  RUNNING: 'RUNNING',
  SCHEDULED: 'SCHEDULED',
} as const;

/**
 * Current global status of the current task
 * @nullable
 */
export type CommonCurrentTaskOVHStatus = CommonCurrentTaskStatusEnumOVH | null;

/**
 * Asynchronous operation currently running
 */
export interface CommonCurrentTaskOVH {
  /** Identifier of the current task */
  readonly id?: string;
  /** Link to the task details */
  readonly link?: string;
  /**
   * Current global status of the current task
   * @nullable
   */
  readonly status?: CommonCurrentTaskOVHStatus;
  /** Type of the current task */
  readonly type?: string;
}

/**
 * Response for a Zimbra Account
 */
export interface ZimbraAccountResponseOVH {
  /** Checksum hash in MD5 representation */
  readonly checksum?: string;
  /** Object representing account */
  readonly currentState?: ZimbraAccountCurrentStateOVH;
  /** An array containing tasks responses pending on resource extends AsyncResourceBase object */
  readonly currentTasks?: readonly CommonCurrentTaskOVH[];
  /** Resource identifier in UUID representation */
  readonly id?: string;
  /** Current resource status */
  readonly resourceStatus?: CommonResourceStatusEnumOVH;
  /** Object representing account */
  readonly targetSpec?: ZimbraAccountTargetSpecOVH;
}

