/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type PostAbuseReportParams = {
/**
 * Language
 */
lang?: string;
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * Category of the abuse
 */
export type AbuseReportCategoryEnumOVH = typeof AbuseReportCategoryEnumOVH[keyof typeof AbuseReportCategoryEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AbuseReportCategoryEnumOVH = {
  copyright: 'copyright',
  illegal: 'illegal',
  intrusion: 'intrusion',
  malware: 'malware',
  networkAttack: 'networkAttack',
  other: 'other',
  phishing: 'phishing',
  spam: 'spam',
} as const;

/**
 * Describe all rules for a given field
 */
export interface AbuseRuleOVH {
  /**
   * Name of the field
   * @nullable
   */
  readonly fieldName?: string | null;
  /**
   * List of allowed values for the field
   * @nullable
   */
  readonly in?: readonly string[] | null;
  /** Whether the field is mandatory */
  readonly mandatory?: boolean;
  /**
   * Prefix of the field value
   * @nullable
   */
  readonly prefix?: string | null;
  /**
   * Regular expression to validate the field value
   * @nullable
   */
  readonly regularExpression?: string | null;
}

/**
 * An abuse report
 */
export interface AbuseReportOVH {
  /** Category of the abuse */
  category?: AbuseReportCategoryEnumOVH;
  /**
   * Name of the copyright holder
   * @nullable
   */
  copyrightHolder?: string | null;
  /**
   * Type of the copyright owner
   * @nullable
   */
  copyrightOwnerType?: string | null;
  /**
   * Choose this option to forward report to final customer directly
   * @nullable
   */
  customerContact?: boolean | null;
  /**
   * Additional information
   * @nullable
   */
  description?: string | null;
  /** Email of the plaintiff */
  email?: string;
  /**
   * Firstname of the plaintiff
   * @nullable
   */
  firstname?: string | null;
  /**
   * Full name of the plaintiff
   * @nullable
   */
  fullname?: string | null;
  /** Report UUID */
  readonly id?: string;
  /** IP address (e.g., 192.0.2.0) */
  ip?: IpOVH;
  /**
   * Lastname of the plaintiff
   * @nullable
   */
  lastname?: string | null;
  /**
   * Evidence of the abuse
   * @nullable
   */
  logs?: string | null;
  /**
   * Location of copyrighted work (where your original material is located)
   * @nullable
   */
  originalLocation?: string | null;
  /**
   * SMTP body of the spam email
   * @nullable
   */
  smtpBody?: string | null;
  /**
   * SMTP header of the spam email
   * @nullable
   */
  smtpHeader?: string | null;
  /**
   * Infringing URL
   * @nullable
   */
  url?: string | null;
}

/**
 * A response message
 */
export interface AbuseMessageOVH {
  /** A response message */
  readonly message?: string;
}

