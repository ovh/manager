/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetHostingPrivateDatabaseServiceNameWhitelistParams = {
/**
 * Filter the value of ip property (contains or equals)
 */
ip?: string;
/**
 * Filter the value of service property
 */
service?: boolean;
/**
 * Filter the value of sftp property
 */
sftp?: boolean;
};

export type GetHostingPrivateDatabaseServiceNameTasksParams = {
/**
 * Filter the value of function property
 */
function?: HostingPrivateDatabaseTaskFunctionEnumOVH;
/**
 * Filter the value of status property
 */
status?: HostingPrivateDatabaseTaskStatusEnumOVH;
};

export type GetHostingPrivateDatabaseServiceNameLogSubscriptionParams = {
/**
 * Filter on a specific kind
 */
kind?: string;
};

export type GetHostingPrivateDatabaseServiceNameDumpParams = {
/**
 * Filter the value of databaseName property (like)
 */
databaseName?: string;
/**
 * Filter the value of orphan property (=)
 */
orphan?: boolean;
};

export type GetHostingPrivateDatabaseServiceNameDatabaseDatabaseNameExtensionParams = {
/**
 * Filter results on extension name (like)
 */
extensionName?: string;
/**
 * Filter results on status (=)
 */
status?: HostingPrivateDatabaseExtensionStatusEnumOVH;
};

export type GetHostingPrivateDatabaseAvailableOrderCapacitiesParams = {
offer: HostingPrivateDatabaseOfferEnumOVH;
};

export type GetHostingPrivateDatabaseParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Service confirm termination payload
 */
export interface ServicesConfirmTerminationOVH {
  /** Commentary about your termination request */
  commentary?: string;
  /** All future uses you can provide for a service termination */
  futureUse?: ServiceTerminationFutureUseEnumOVH;
  /** All reasons you can provide for a service termination */
  reason?: ServiceTerminationReasonEnumOVH;
  /** The termination token sent by email to the admin contact */
  token: string;
}

/**
 * Service change contact payload
 */
export interface ServicesChangeContactOVH {
  /** The contact to set as admin contact */
  contactAdmin?: string;
  /** The contact to set as billing contact */
  contactBilling?: string;
  /** The contact to set as tech contact */
  contactTech?: string;
}

/**
 * Way of handling the renew
 * @nullable
 */
export type ServicesServiceOVHRenew = ServiceRenewTypeOVH | null;

/**
 * Details about a Service
 */
export interface ServicesServiceOVH {
  /** Indicates that the service can be set up to be deleted at expiration */
  readonly canDeleteAtExpiration?: boolean;
  readonly contactAdmin?: string;
  readonly contactBilling?: string;
  readonly contactTech?: string;
  readonly creation?: string;
  readonly domain?: string;
  /** @nullable */
  readonly engagedUpTo?: string | null;
  readonly expiration?: string;
  /**
   * All the possible renew period of your service in month
   * @nullable
   */
  readonly possibleRenewPeriod?: readonly number[] | null;
  /**
   * Way of handling the renew
   * @nullable
   */
  renew?: ServicesServiceOVHRenew;
  readonly renewalType?: ServiceRenewalTypeEnumOVH;
  readonly serviceId?: number;
  readonly status?: ServiceStateEnumOVH;
}

/**
 * All reasons you can provide for a service termination
 */
export type ServiceTerminationReasonEnumOVH = typeof ServiceTerminationReasonEnumOVH[keyof typeof ServiceTerminationReasonEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationReasonEnumOVH = {
  FEATURES_DONT_SUIT_ME: 'FEATURES_DONT_SUIT_ME',
  LACK_OF_PERFORMANCES: 'LACK_OF_PERFORMANCES',
  MIGRATED_TO_ANOTHER_OVH_PRODUCT: 'MIGRATED_TO_ANOTHER_OVH_PRODUCT',
  MIGRATED_TO_COMPETITOR: 'MIGRATED_TO_COMPETITOR',
  NOT_ENOUGH_RECOGNITION: 'NOT_ENOUGH_RECOGNITION',
  NOT_NEEDED_ANYMORE: 'NOT_NEEDED_ANYMORE',
  NOT_RELIABLE: 'NOT_RELIABLE',
  NO_ANSWER: 'NO_ANSWER',
  OTHER: 'OTHER',
  PRODUCT_DIMENSION_DONT_SUIT_ME: 'PRODUCT_DIMENSION_DONT_SUIT_ME',
  PRODUCT_TOOLS_DONT_SUIT_ME: 'PRODUCT_TOOLS_DONT_SUIT_ME',
  TOO_EXPENSIVE: 'TOO_EXPENSIVE',
  TOO_HARD_TO_USE: 'TOO_HARD_TO_USE',
  UNSATIFIED_BY_CUSTOMER_SUPPORT: 'UNSATIFIED_BY_CUSTOMER_SUPPORT',
} as const;

/**
 * All future uses you can provide for a service termination
 */
export type ServiceTerminationFutureUseEnumOVH = typeof ServiceTerminationFutureUseEnumOVH[keyof typeof ServiceTerminationFutureUseEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationFutureUseEnumOVH = {
  NOT_REPLACING_SERVICE: 'NOT_REPLACING_SERVICE',
  OTHER: 'OTHER',
  SUBSCRIBE_AN_OTHER_SERVICE: 'SUBSCRIBE_AN_OTHER_SERVICE',
  SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR',
  SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR',
} as const;

/**
 * service.StateEnum
 */
export type ServiceStateEnumOVH = typeof ServiceStateEnumOVH[keyof typeof ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceStateEnumOVH = {
  autorenewInProgress: 'autorenewInProgress',
  expired: 'expired',
  inCreation: 'inCreation',
  ok: 'ok',
  pendingDebt: 'pendingDebt',
  unPaid: 'unPaid',
} as const;

/**
 * Detailed renewal type of a service
 */
export type ServiceRenewalTypeEnumOVH = typeof ServiceRenewalTypeEnumOVH[keyof typeof ServiceRenewalTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewalTypeEnumOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Map a possible renew for a specific service
 */
export interface ServiceRenewTypeOVH {
  /** The service is automatically renewed */
  automatic?: boolean;
  /** The service will be deleted at expiration */
  deleteAtExpiration?: boolean;
  /** The service forced to be renewed */
  forced?: boolean;
  /**
   * The service needs to be manually renewed and paid
   * @nullable
   */
  manualPayment?: boolean | null;
  /**
   * period of renew in month
   * @nullable
   */
  period?: number | null;
}

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Whitelist status
 */
export type HostingPrivateDatabaseWhitelistStatusEnumOVH = typeof HostingPrivateDatabaseWhitelistStatusEnumOVH[keyof typeof HostingPrivateDatabaseWhitelistStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseWhitelistStatusEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  updating: 'updating',
} as const;

/**
 * Webhosting network status
 */
export type HostingPrivateDatabaseWebhostingNetworkStatusEnumOVH = typeof HostingPrivateDatabaseWebhostingNetworkStatusEnumOVH[keyof typeof HostingPrivateDatabaseWebhostingNetworkStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseWebhostingNetworkStatusEnumOVH = {
  disabled: 'disabled',
  disabling: 'disabling',
  enabled: 'enabled',
  enabling: 'enabling',
} as const;

/**
 * webhosting Network
 */
export interface HostingPrivateDatabaseWebhostingNetworkOVH {
  /** Webhosting network status */
  readonly status?: HostingPrivateDatabaseWebhostingNetworkStatusEnumOVH;
}

/**
 * Task's status
 */
export type HostingPrivateDatabaseTaskStatusEnumOVH = typeof HostingPrivateDatabaseTaskStatusEnumOVH[keyof typeof HostingPrivateDatabaseTaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseTaskStatusEnumOVH = {
  cancelled: 'cancelled',
  doing: 'doing',
  done: 'done',
  error: 'error',
  todo: 'todo',
} as const;

/**
 * Task's dunction
 */
export type HostingPrivateDatabaseTaskFunctionEnumOVH = typeof HostingPrivateDatabaseTaskFunctionEnumOVH[keyof typeof HostingPrivateDatabaseTaskFunctionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseTaskFunctionEnumOVH = {
  abuse: 'abuse',
  changeFtpPassword: 'changeFtpPassword',
  changeRam: 'changeRam',
  changeVersion: 'changeVersion',
  'configuration/update': 'configuration/update',
  create: 'create',
  'database/copy': 'database/copy',
  'database/copyRestore': 'database/copyRestore',
  'database/create': 'database/create',
  'database/delete': 'database/delete',
  'database/dump': 'database/dump',
  'database/dump/delete': 'database/dump/delete',
  'database/extension/create': 'database/extension/create',
  'database/extension/delete': 'database/extension/delete',
  'database/import': 'database/import',
  'database/restore': 'database/restore',
  'database/wizard': 'database/wizard',
  delete: 'delete',
  'grant/create': 'grant/create',
  'grant/delete': 'grant/delete',
  'grant/update': 'grant/update',
  install: 'install',
  'overquota/in': 'overquota/in',
  'overquota/out': 'overquota/out',
  quotaRefresh: 'quotaRefresh',
  refresh: 'refresh',
  reopen: 'reopen',
  restart: 'restart',
  start: 'start',
  stop: 'stop',
  suspend: 'suspend',
  'user/changePassword': 'user/changePassword',
  'user/create': 'user/create',
  'user/delete': 'user/delete',
  'webhostingNetwork/disable': 'webhostingNetwork/disable',
  'webhostingNetwork/enable': 'webhostingNetwork/enable',
  'whitelist/create': 'whitelist/create',
  'whitelist/delete': 'whitelist/delete',
  'whitelist/update': 'whitelist/update',
} as const;

/**
 * Grant on a database for a specific user
 */
export type HostingPrivateDatabaseGrantGrantEnumOVH = typeof HostingPrivateDatabaseGrantGrantEnumOVH[keyof typeof HostingPrivateDatabaseGrantGrantEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseGrantGrantEnumOVH = {
  admin: 'admin',
  none: 'none',
  ro: 'ro',
  rw: 'rw',
} as const;

/**
 * Extension status
 */
export type HostingPrivateDatabaseExtensionStatusEnumOVH = typeof HostingPrivateDatabaseExtensionStatusEnumOVH[keyof typeof HostingPrivateDatabaseExtensionStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseExtensionStatusEnumOVH = {
  disabled: 'disabled',
  disabling: 'disabling',
  enabled: 'enabled',
  enabling: 'enabling',
} as const;

/**
 * Database copy status
 */
export type HostingPrivateDatabaseDatabaseCopyStatusEnumOVH = typeof HostingPrivateDatabaseDatabaseCopyStatusEnumOVH[keyof typeof HostingPrivateDatabaseDatabaseCopyStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseDatabaseCopyStatusEnumOVH = {
  doing: 'doing',
  done: 'done',
  error: 'error',
  todo: 'todo',
} as const;

/**
 * Web Cloud Database config type
 */
export type HostingPrivateDatabaseConfigTypeEnumOVH = typeof HostingPrivateDatabaseConfigTypeEnumOVH[keyof typeof HostingPrivateDatabaseConfigTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseConfigTypeEnumOVH = {
  boolean: 'boolean',
  number: 'number',
  string: 'string',
} as const;

/**
 * Web Cloud Database config status
 */
export type HostingPrivateDatabaseConfigStatusEnumOVH = typeof HostingPrivateDatabaseConfigStatusEnumOVH[keyof typeof HostingPrivateDatabaseConfigStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseConfigStatusEnumOVH = {
  applied: 'applied',
  updating: 'updating',
} as const;

/**
 * Description for available order capacities following an offer
 */
export interface HostingPrivateDatabaseAvailableOrderCapacitiesOVH {
  /** A list of datacenter available for this offer */
  readonly datacenter?: readonly HostingPrivateDatabaseDatacenterEnumOVH[];
  /** Offer */
  readonly offer?: HostingPrivateDatabaseOfferEnumOVH;
  /** A list of ram size available for this offer */
  readonly ram?: readonly HostingPrivateDatabaseAvailableRamSizeEnumOVH[];
  /** A list of version available for this offer */
  readonly version?: readonly HostingPrivateDatabaseAvailableVersionEnumOVH[];
}

/**
 * Whitelist
 */
export interface HostingPrivateDatabaseWhitelistCreatePayloadOVH {
  /** The whitelisted IP in your Web Cloud Database */
  ip: string;
  /**
   * Custom name for your Whitelisted IP
   * @nullable
   */
  name?: string | null;
  /** Authorize this IP to access service port */
  service?: boolean;
  /** Authorize this IP to access sftp port */
  sftp?: boolean;
}

/**
 * Whitelist
 */
export interface HostingPrivateDatabaseWhitelistOVH {
  /** Creation date of this whitelist */
  readonly creationDate?: string;
  /** The whitelisted IP in your Web Cloud Database */
  readonly ip?: Ipv4BlockOVH;
  /** The last update date of this whitelist */
  readonly lastUpdate?: string;
  /**
   * Custom name for your Whitelisted IP
   * @nullable
   */
  name?: string | null;
  /** Authorize this IP to access service port */
  service?: boolean;
  /** Authorize this IP to access sftp port */
  sftp?: boolean;
  /** Whitelist status */
  readonly status?: HostingPrivateDatabaseWhitelistStatusEnumOVH;
  /**
   * The id of the task working on this object
   * @nullable
   */
  readonly taskId?: number | null;
}

/**
 * Private database version
 */
export type HostingPrivateDatabaseVersionEnumOVH = typeof HostingPrivateDatabaseVersionEnumOVH[keyof typeof HostingPrivateDatabaseVersionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseVersionEnumOVH = {
  mariadb_1011: 'mariadb_10.11',
  mariadb_105: 'mariadb_10.5',
  mariadb_106: 'mariadb_10.6',
  mysql_80: 'mysql_8.0',
  postgresql_12: 'postgresql_12',
  postgresql_13: 'postgresql_13',
  postgresql_14: 'postgresql_14',
  postgresql_15: 'postgresql_15',
  redis_60: 'redis_6.0',
  redis_70: 'redis_7.0',
} as const;

/**
 * Update user grant
 */
export interface HostingPrivateDatabaseUserGrantUpdateOVH {
  /** Grant on a database for a specific user */
  grant: HostingPrivateDatabaseGrantGrantEnumOVH;
}

/**
 * Grant
 */
export interface HostingPrivateDatabaseUserGrantCreateOVH {
  /** Database name where add grant */
  databaseName: string;
  /** Grant on a database for a specific user */
  grant: HostingPrivateDatabaseGrantGrantEnumOVH;
}

/**
 * Grant
 */
export interface HostingPrivateDatabaseUserGrantOVH {
  /** Automatic deletion date of the dump */
  readonly creationDate?: string;
  /** Dump of this database name */
  readonly databaseName?: string;
  /** Grant set */
  readonly grant?: HostingPrivateDatabaseGrantGrantEnumOVH;
}

/**
 * Users
 */
export interface HostingPrivateDatabaseUserDatabaseOVH {
  /** Database granted for this user */
  readonly databaseName?: string;
  /** The grantId associated for this databaseName and this userName */
  readonly grantId?: number;
  /** User's rights on this database */
  readonly grantType?: HostingPrivateDatabaseGrantGrantEnumOVH;
}

/**
 * Payload used to create a user on a Web Cloud Database
 */
export interface HostingPrivateDatabaseUserCreatePayloadOVH {
  /** Password for the new user ( alphanumeric and 8 characters minimum ) */
  password: string;
  /** User name used to connect on your databases */
  userName: string;
}

/**
 * Payload used to change the password of a user on a Web Cloud Database
 */
export interface HostingPrivateDatabaseUserChangePasswordPayloadOVH {
  /** Password for the new user ( alphanumeric and 8 characters minimum ) */
  password: string;
}

/**
 * Users
 */
export interface HostingPrivateDatabaseUserOVH {
  /** Creation date of the user */
  readonly creationDate?: string;
  /** Databases granted for this user */
  readonly databases?: readonly HostingPrivateDatabaseUserDatabaseOVH[];
  /** User name used to connect to your databases */
  readonly userName?: string;
}

/**
 * Private database type
 */
export type HostingPrivateDatabaseTypeEnumOVH = typeof HostingPrivateDatabaseTypeEnumOVH[keyof typeof HostingPrivateDatabaseTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseTypeEnumOVH = {
  mariadb: 'mariadb',
  mysql: 'mysql',
  postgresql: 'postgresql',
  redis: 'redis',
} as const;

/**
 *  Temporary url information
 */
export interface HostingPrivateDatabaseTemporaryUrlInformationsOVH {
  /** Temporary url expiration date */
  readonly expirationDate?: string;
  /** Temporary url */
  readonly url?: string;
}

/**
 * Web Cloud Database task
 */
export interface HostingPrivateDatabaseTaskOVH {
  /**
   * Database name on which the task is working
   * @nullable
   */
  readonly databaseName?: string | null;
  /**
   * Completion date
   * @nullable
   */
  readonly doneDate?: string | null;
  /**
   * DumpId on which the task is working
   * @nullable
   */
  readonly dumpId?: number | null;
  /** Function name */
  readonly function?: HostingPrivateDatabaseTaskFunctionEnumOVH;
  /** The id of the task */
  readonly id?: number;
  /**
   * Last update
   * @nullable
   */
  readonly lastUpdate?: string | null;
  /** Task creation date */
  readonly startDate?: string;
  /** Task status */
  readonly status?: HostingPrivateDatabaseTaskStatusEnumOVH;
  /**
   * User name on which the task is working
   * @nullable
   */
  readonly userName?: string | null;
}

/**
 * Private database state
 */
export type HostingPrivateDatabaseStateEnumOVH = typeof HostingPrivateDatabaseStateEnumOVH[keyof typeof HostingPrivateDatabaseStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseStateEnumOVH = {
  detached: 'detached',
  restartPending: 'restartPending',
  startPending: 'startPending',
  started: 'started',
  stopPending: 'stopPending',
  stopped: 'stopped',
} as const;

/**
 * Private database ip
 * @nullable
 */
export type HostingPrivateDatabaseServiceWithIAMOVHIp = Ipv4OVH | null;

/**
 * IAM resource metadata
 * @nullable
 */
export type HostingPrivateDatabaseServiceWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * Parameters required to query metrics from OpenTSDB
 * @nullable
 */
export type HostingPrivateDatabaseServiceWithIAMOVHGraphEndpoint = HostingPrivateDatabaseGraphEndpointOVH | null;

/**
 * Private database ip
 * @nullable
 */
export type HostingPrivateDatabaseServiceOVHIp = Ipv4OVH | null;

/**
 * Parameters required to query metrics from OpenTSDB
 * @nullable
 */
export type HostingPrivateDatabaseServiceOVHGraphEndpoint = HostingPrivateDatabaseGraphEndpointOVH | null;

/**
 * List of privatesql OOM kill
 */
export interface HostingPrivateDatabaseOomOVH {
  /** Date of the OOM kill */
  readonly date?: string;
  /** Memory size reached */
  readonly sizeReached?: number;
}

/**
 * Available offers
 */
export type HostingPrivateDatabaseOfferEnumOVH = typeof HostingPrivateDatabaseOfferEnumOVH[keyof typeof HostingPrivateDatabaseOfferEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseOfferEnumOVH = {
  classic: 'classic',
  public: 'public',
} as const;

/**
 * Metrics token
 */
export interface HostingPrivateDatabaseMetricsTokenOVH {
  /** Backend url */
  readonly endpoint?: string;
  /** Generated token */
  readonly token?: string;
}

/**
 * Private database infrastructure
 */
export type HostingPrivateDatabaseInfrastructureEnumOVH = typeof HostingPrivateDatabaseInfrastructureEnumOVH[keyof typeof HostingPrivateDatabaseInfrastructureEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseInfrastructureEnumOVH = {
  docker: 'docker',
} as const;

/**
 * Web Cloud Database
 */
export interface HostingPrivateDatabaseServiceWithIAMOVH {
  /** Private database capabilities */
  readonly capabilities?: readonly HostingPrivateDatabaseCapabilityOVH[];
  /** Number of cpu on your private database */
  readonly cpu?: number;
  /** Datacenter where this private database is located */
  readonly datacenter?: HostingPrivateDatabaseDatacenterEnumOVH;
  /**
   * Set the name displayed in customer panel for your private database (max 50 chars)
   * @nullable
   */
  displayName?: string | null;
  /**
   * Parameters required to query metrics from OpenTSDB
   * @nullable
   */
  readonly graphEndpoint?: HostingPrivateDatabaseServiceWithIAMOVHGraphEndpoint;
  /**
   * URL for the graphical user interface
   * @nullable
   */
  readonly guiURL?: string | null;
  /** Private database hostname */
  readonly hostname?: string;
  /**
   * Private database ftp hostname
   * @nullable
   */
  readonly hostnameFtp?: string | null;
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: HostingPrivateDatabaseServiceWithIAMOVHIam;
  /** Infrastructure where service was stored */
  readonly infrastructure?: HostingPrivateDatabaseInfrastructureEnumOVH;
  /**
   * Private database ip
   * @nullable
   */
  readonly ip?: HostingPrivateDatabaseServiceWithIAMOVHIp;
  /** Date of the last data synchronization */
  readonly lastCheck?: string;
  /** Type of the private database offer */
  readonly offer?: HostingPrivateDatabaseOfferEnumOVH;
  /** Private database service port */
  readonly port?: number;
  /**
   * Private database ftp port
   * @nullable
   */
  readonly portFtp?: number | null;
  /** Space allowed on your private database */
  readonly quotaSize?: ComplexTypeUnitAndValueLongOVH;
  /** Total space used on your private database */
  readonly quotaUsed?: ComplexTypeUnitAndValueLongOVH;
  /** Amount of ram on your private database */
  readonly ram?: ComplexTypeUnitAndValueLongOVH;
  /** Private database server name */
  readonly server?: string;
  /** Service name */
  readonly serviceName?: string;
  /** Private database state */
  readonly state?: HostingPrivateDatabaseStateEnumOVH;
  /**
   * Return the TLS certificate authority used by the private database
   * @nullable
   */
  readonly tlsCa?: string | null;
  /** Private database type */
  readonly type?: HostingPrivateDatabaseTypeEnumOVH;
  /** Private database version */
  readonly version?: HostingPrivateDatabaseVersionEnumOVH;
  /** Private database version label */
  readonly versionLabel?: string;
  /** Private database version number */
  readonly versionNumber?: number;
}

/**
 * Web Cloud Database
 */
export interface HostingPrivateDatabaseServiceOVH {
  /** Private database capabilities */
  readonly capabilities?: readonly HostingPrivateDatabaseCapabilityOVH[];
  /** Number of cpu on your private database */
  readonly cpu?: number;
  /** Datacenter where this private database is located */
  readonly datacenter?: HostingPrivateDatabaseDatacenterEnumOVH;
  /**
   * Set the name displayed in customer panel for your private database (max 50 chars)
   * @nullable
   */
  displayName?: string | null;
  /**
   * Parameters required to query metrics from OpenTSDB
   * @nullable
   */
  readonly graphEndpoint?: HostingPrivateDatabaseServiceOVHGraphEndpoint;
  /**
   * URL for the graphical user interface
   * @nullable
   */
  readonly guiURL?: string | null;
  /** Private database hostname */
  readonly hostname?: string;
  /**
   * Private database ftp hostname
   * @nullable
   */
  readonly hostnameFtp?: string | null;
  /** Infrastructure where service was stored */
  readonly infrastructure?: HostingPrivateDatabaseInfrastructureEnumOVH;
  /**
   * Private database ip
   * @nullable
   */
  readonly ip?: HostingPrivateDatabaseServiceOVHIp;
  /** Date of the last data synchronization */
  readonly lastCheck?: string;
  /** Type of the private database offer */
  readonly offer?: HostingPrivateDatabaseOfferEnumOVH;
  /** Private database service port */
  readonly port?: number;
  /**
   * Private database ftp port
   * @nullable
   */
  readonly portFtp?: number | null;
  /** Space allowed on your private database */
  readonly quotaSize?: ComplexTypeUnitAndValueLongOVH;
  /** Total space used on your private database */
  readonly quotaUsed?: ComplexTypeUnitAndValueLongOVH;
  /** Amount of ram on your private database */
  readonly ram?: ComplexTypeUnitAndValueLongOVH;
  /** Private database server name */
  readonly server?: string;
  /** Service name */
  readonly serviceName?: string;
  /** Private database state */
  readonly state?: HostingPrivateDatabaseStateEnumOVH;
  /**
   * Return the TLS certificate authority used by the private database
   * @nullable
   */
  readonly tlsCa?: string | null;
  /** Private database type */
  readonly type?: HostingPrivateDatabaseTypeEnumOVH;
  /** Private database version */
  readonly version?: HostingPrivateDatabaseVersionEnumOVH;
  /** Private database version label */
  readonly versionLabel?: string;
  /** Private database version number */
  readonly versionNumber?: number;
}

/**
 * Parameters required to query metrics from OpenTSDB
 */
export interface HostingPrivateDatabaseGraphEndpointOVH {
  /** The OpenTSDB host */
  readonly host?: string;
  /** A read-only token */
  readonly readToken?: string;
  /** A read-only token ID */
  readonly readTokenId?: string;
}

/**
 * Webcloud Database extension
 */
export interface HostingPrivateDatabaseExtensionOVH {
  /** Extension details */
  readonly description?: string;
  /** Extension name */
  readonly extensionName?: string;
  /** Required extensions */
  readonly requiredExtensions?: readonly string[];
  /** Extension status */
  readonly status?: HostingPrivateDatabaseExtensionStatusEnumOVH;
}

/**
 * Restore a database dump into a Web Cloud Database
 */
export interface HostingPrivateDatabaseDumpRestoreOVH {
  /** Database name */
  databaseName?: string;
}

/**
 * Dumps
 */
export interface HostingPrivateDatabaseDumpOVH {
  /** Creation date of the dump */
  readonly creationDate?: string;
  /** Dump of this database name */
  readonly databaseName?: string;
  /** Automatic deletion date of the dump */
  readonly deletionDate?: string;
  /** Dump id */
  readonly dumpId?: number;
  /** Dump orphan flag (true if database does not exists) */
  readonly orphan?: boolean;
  /** Dump URL access */
  readonly url?: string;
}

/**
 * Private database datacenter
 */
export type HostingPrivateDatabaseDatacenterEnumOVH = typeof HostingPrivateDatabaseDatacenterEnumOVH[keyof typeof HostingPrivateDatabaseDatacenterEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseDatacenterEnumOVH = {
  bhs1: 'bhs1',
  gra1: 'gra1',
  gra2: 'gra2',
  gra3: 'gra3',
} as const;

/**
 * Payload used to create user and grant and apply it on a new database on a Web Cloud Database
 */
export interface HostingPrivateDatabaseDatabaseWizardPayloadOVH {
  /** Name of your new database */
  databaseName: string;
  /** Grant of the user on this database */
  grant: HostingPrivateDatabaseGrantGrantEnumOVH;
  /** Password for the new user (alphanumeric and 8 characters minimum) */
  password: string;
  /** New user name used to connect on your database */
  userName: string;
}

/**
 * Users
 */
export interface HostingPrivateDatabaseDatabaseUserOVH {
  /** The grantId associated for this databaseName and this userName */
  readonly grantId?: number;
  /** User's rights on this database */
  readonly grantType?: HostingPrivateDatabaseGrantGrantEnumOVH;
  /** User's name granted on this database */
  readonly userName?: string;
}

/**
 * Payload used to import a dump in a database on a Web Cloud Database
 */
export interface HostingPrivateDatabaseDatabaseImportPayloadOVH {
  /** Documents ID of the dump from /me/documents */
  documentId: string;
  /** Whether to flush the database before importing the dump (default to false) */
  flushDatabase?: boolean;
  /** Whether to receive an email when the import is complete (default to false) */
  sendEmail?: boolean;
}

/**
 * Dumps
 */
export interface HostingPrivateDatabaseDatabaseDumpOVH {
  /** Creation date of the dump */
  readonly creationDate?: string;
  /** Dump of this database name */
  readonly databaseName?: string;
  /** Automatic deletion date of the dump */
  readonly deletionDate?: string;
  /** Dump id */
  readonly id?: number;
  /** Dump URL access */
  readonly url?: string;
}

/**
 * Payload used to create a database on a Web Cloud Database
 */
export interface HostingPrivateDatabaseDatabaseCreatePayloadOVH {
  /** Name of your new database */
  databaseName: string;
}

/**
 * Dumps
 */
export interface HostingPrivateDatabaseDatabaseCreateDumpOVH {
  /** Whether to receive an email when the import is complete (default to false) */
  sendEmail?: boolean;
}

/**
 * Payload used to restore a copy in a database on a Web Cloud Database
 */
export interface HostingPrivateDatabaseDatabaseCopyRestorePayloadOVH {
  /** Copy ID */
  copyId: string;
  /** Whether to flush the database before restoring the copy (default to false) */
  flushDatabase?: boolean;
}

/**
 * Database copy
 */
export interface HostingPrivateDatabaseDatabaseCopyOVH {
  /** Creation date of the database copy */
  readonly creationDate?: string;
  /**
   * Expiration date of the database copy
   * @nullable
   */
  readonly expirationDate?: string | null;
  /** Database copy ID */
  readonly id?: string;
  /** Last update of the database copy */
  readonly lastUpdate?: string;
  /** Database copy status */
  readonly status?: HostingPrivateDatabaseDatabaseCopyStatusEnumOVH;
}

/**
 * Time of the next backup (every day)
 * @nullable
 */
export type HostingPrivateDatabaseDatabaseOVHBackupTime = TimeOVH | null;

/**
 * Databases
 */
export interface HostingPrivateDatabaseDatabaseOVH {
  /**
   * Time of the next backup (every day)
   * @nullable
   */
  readonly backupTime?: HostingPrivateDatabaseDatabaseOVHBackupTime;
  /** Creation date of the database */
  readonly creationDate?: string;
  /** Database name */
  readonly databaseName?: string;
  /** Space used by the database */
  readonly quotaUsed?: ComplexTypeUnitAndValueLongOVH;
  /** Users granted to this database */
  readonly users?: readonly HostingPrivateDatabaseDatabaseUserOVH[];
}

/**
 * CPU throttle informations
 */
export interface HostingPrivateDatabaseCpuThrottleOVH {
  /**
   * End date of the CPU throttle
   * @nullable
   */
  readonly endDate?: string | null;
  /** Start date of the CPU throttle */
  readonly startDate?: string;
}

/**
 * Configs
 */
export interface HostingPrivateDatabaseConfigsOVH {
  /** Configuration details */
  readonly details?: readonly HostingPrivateDatabaseConfigDetailOVH[];
  /** Configuration last update */
  readonly lastUpdate?: string;
  /** Configuration status */
  readonly status?: HostingPrivateDatabaseConfigStatusEnumOVH;
  /**
   * Configuration linked task id
   * @nullable
   */
  readonly taskId?: number | null;
}

/**
 * ConfigKeyValue
 */
export interface HostingPrivateDatabaseConfigKeyValueOVH {
  /** Web Cloud Database configuration key */
  key: string;
  /** Web Cloud Database configuration value */
  value: string;
}

/**
 * ConfigUpdatePayload
 */
export interface HostingPrivateDatabaseConfigUpdatePayloadOVH {
  /** Web Cloud Database configurations */
  parameters: HostingPrivateDatabaseConfigKeyValueOVH[];
}

/**
 * Config detail
 */
export interface HostingPrivateDatabaseConfigDetailOVH {
  /** Configuration available values */
  readonly availableValues?: readonly string[];
  /** Configuration default value */
  readonly defaultValue?: string;
  /** Configuration description */
  readonly description?: string;
  /** Configuration key name */
  readonly key?: string;
  /** Configuration last update */
  readonly lastUpdate?: string;
  /** Configuration value type */
  readonly type?: HostingPrivateDatabaseConfigTypeEnumOVH;
  /**
   * Configuration unit type
   * @nullable
   */
  readonly unit?: string | null;
  /** Configuration current value */
  readonly value?: string;
}

/**
 * Payload used to change the DBMS version of a Web Cloud Database
 */
export interface HostingPrivateDatabaseChangeVersionPayloadOVH {
  /** Change the private database engine version */
  version: HostingPrivateDatabaseAvailableVersionEnumOVH;
}

/**
 * Payload used to change the FTP password of a Web Cloud Database
 */
export interface HostingPrivateDatabaseChangeFtpPasswordPayloadOVH {
  /** New ftp admin password (alphanumeric and 8 characters minimum) */
  password: string;
}

/**
 * Private database capability
 */
export interface HostingPrivateDatabaseCapabilityOVH {
  /** Can the object be created */
  readonly create?: boolean;
  /** Can the object be deleted */
  readonly delete?: boolean;
  /** Object name */
  readonly object?: string;
  /** Can the object be updated */
  readonly update?: boolean;
}

/**
 * Private database available version
 */
export type HostingPrivateDatabaseAvailableVersionEnumOVH = typeof HostingPrivateDatabaseAvailableVersionEnumOVH[keyof typeof HostingPrivateDatabaseAvailableVersionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseAvailableVersionEnumOVH = {
  mariadb_1011: 'mariadb_10.11',
  mariadb_105: 'mariadb_10.5',
  mariadb_106: 'mariadb_10.6',
  mysql_80: 'mysql_8.0',
  postgresql_12: 'postgresql_12',
  postgresql_13: 'postgresql_13',
  postgresql_14: 'postgresql_14',
  postgresql_15: 'postgresql_15',
  redis_60: 'redis_6.0',
  redis_70: 'redis_7.0',
} as const;

/**
 * Private database available ram sizes
 */
export type HostingPrivateDatabaseAvailableRamSizeEnumOVH = typeof HostingPrivateDatabaseAvailableRamSizeEnumOVH[keyof typeof HostingPrivateDatabaseAvailableRamSizeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseAvailableRamSizeEnumOVH = {
  NUMBER_1024: '1024',
  NUMBER_2048: '2048',
  NUMBER_4096: '4096',
  NUMBER_512: '512',
} as const;

/**
 * Private database type
 */
export type HostingPrivateDatabaseTypeEnumOVH = typeof HostingPrivateDatabaseTypeEnumOVH[keyof typeof HostingPrivateDatabaseTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseTypeEnumOVH = {
  mariadb: 'mariadb',
  mysql: 'mysql',
  postgresql: 'postgresql',
  redis: 'redis',
} as const;

/**
 * Private database state
 */
export type HostingPrivateDatabaseStateEnumOVH = typeof HostingPrivateDatabaseStateEnumOVH[keyof typeof HostingPrivateDatabaseStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseStateEnumOVH = {
  detached: 'detached',
  restartPending: 'restartPending',
  startPending: 'startPending',
  started: 'started',
  stopPending: 'stopPending',
  stopped: 'stopped',
} as const;

/**
 * Available offers
 */
export type HostingPrivateDatabaseOfferEnumOVH = typeof HostingPrivateDatabaseOfferEnumOVH[keyof typeof HostingPrivateDatabaseOfferEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseOfferEnumOVH = {
  classic: 'classic',
  public: 'public',
} as const;

/**
 * Parameters required to query metrics from OpenTSDB
 */
export interface HostingPrivateDatabaseGraphEndpointOVH {
  /** The OpenTSDB host */
  host?: string;
  /** A read-only token */
  readToken?: string;
  /** A read-only token ID */
  readTokenId?: string;
}

/**
 * Available datacenters
 */
export type HostingPrivateDatabaseDatacenterEnumOVH = typeof HostingPrivateDatabaseDatacenterEnumOVH[keyof typeof HostingPrivateDatabaseDatacenterEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseDatacenterEnumOVH = {
  bhs1: 'bhs1',
  gra1: 'gra1',
  gra2: 'gra2',
  gra3: 'gra3',
  p19: 'p19',
} as const;

/**
 * Private database capability
 */
export interface HostingPrivateDatabaseCapabilityOVH {
  /** Can the object be created */
  create?: boolean;
  /** Can the object be deleted */
  delete?: boolean;
  /** Object name */
  object?: string;
  /** Can the object be updated */
  update?: boolean;
}

/**
 * Private database available versions
 */
export type HostingPrivateDatabaseAvailableVersionEnumOVH = typeof HostingPrivateDatabaseAvailableVersionEnumOVH[keyof typeof HostingPrivateDatabaseAvailableVersionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingPrivateDatabaseAvailableVersionEnumOVH = {
  mariadb_1011: 'mariadb_10.11',
  mariadb_104: 'mariadb_10.4',
  mariadb_105: 'mariadb_10.5',
  mariadb_106: 'mariadb_10.6',
  mysql_57: 'mysql_5.7',
  mysql_80: 'mysql_8.0',
  postgresql_12: 'postgresql_12',
  postgresql_13: 'postgresql_13',
  postgresql_14: 'postgresql_14',
  postgresql_15: 'postgresql_15',
  redis_60: 'redis_6.0',
  redis_70: 'redis_7.0',
} as const;

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * Temporary url information
 */
export interface DbaasLogsTemporaryLogsLinkOVH {
  /** Temporary url expiration date */
  readonly expirationDate?: string;
  /** Temporary url */
  readonly url?: string;
}

/**
 * Log temporary URL creation payload
 */
export interface DbaasLogsLogUrlCreationOVH {
  /** Log kind name */
  kind: string;
}

/**
 * Asynchronous operation after subscribing or unsubscribing to a resource logs
 */
export interface DbaasLogsLogSubscriptionResponseOVH {
  /** Identifier of the operation */
  readonly operationId?: string;
  /** Operation owner's service name */
  readonly serviceName?: string;
}

/**
 * Log subscription resource
 */
export interface DbaasLogsLogSubscriptionResourceOVH {
  /** Name of subscribed resource */
  readonly name?: string;
  /** Type of subscribed resource */
  readonly type?: string;
}

/**
 * Log subscription creation payload
 */
export interface DbaasLogsLogSubscriptionCreationOVH {
  /** Log kind name to subscribe to */
  kind: string;
  /** Customer log stream ID */
  streamId: string;
}

/**
 * Log subscription
 */
export interface DbaasLogsLogSubscriptionOVH {
  /** Creation date of the subscription */
  readonly createdAt?: string;
  /** Log kind name of this subscription */
  readonly kind?: string;
  /** Subscribed resource, where the logs come from */
  readonly resource?: DbaasLogsLogSubscriptionResourceOVH;
  /** Name of the destination log service */
  readonly serviceName?: string;
  /** Id of the destination log stream */
  readonly streamId?: string;
  /** Subscription ID */
  readonly subscriptionId?: string;
  /** Last update date of the subscription */
  readonly updatedAt?: string;
}

/**
 * Log kind
 */
export interface DbaasLogsLogKindOVH {
  /** List of additional log fields managed in this log kind */
  readonly additionalReturnedFields?: readonly string[];
  /** Creation date of the log kind */
  readonly createdAt?: string;
  /** Log kind display name */
  readonly displayName?: string;
  /** Log kind ID */
  readonly kindId?: string;
  /** Log kind name */
  readonly name?: string;
  /** Last update date of the log kind */
  readonly updatedAt?: string;
}

/**
 * A numeric value tagged with its unit
 */
export interface ComplexTypeUnitAndValueLongOVH {
  /** Unit of the value */
  readonly unit?: string;
  value?: number;
}

