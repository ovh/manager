/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
/**
 * Common error model
 */
export type PutOkmsResourceOkmsIdServiceKeyKeyId400 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetOkmsResourceOkmsIdServiceKeyKeyIdParams = {
/**
 * Optional additional output format of the key
 */
format?: OkmsKeyFormatEnumOVH;
};

/**
 * Common error model
 */
export type PostOkmsResourceOkmsIdServiceKey400 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetOkmsResourceOkmsIdServiceKey400 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetOkmsResourceOkmsIdServiceKeyParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

export type GetOkmsResourceOkmsIdLogSubscriptionParams = {
/**
 * Filter on a specific kind (e.g., audit)
 */
kind?: string;
};

/**
 * Common error model
 */
export type DeleteOkmsResourceOkmsIdCredentialCredentialId400 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PostOkmsResourceOkmsIdCredential400 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetOkmsResourceOkmsIdCredential400 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetOkmsResourceOkmsIdParams = {
/**
 * Add KMS public CA (Certificate Authority) in the output
 */
publicCA?: boolean;
};

export type GetOkmsResourceParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

export type GetOkmsReferenceServiceKeyParams = {
/**
 * OKMS Region
 */
region: OkmsRegionEnumOVH;
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * Key desired state for activation, deactivation and compromise (specific case of deactivation)
 * @nullable
 */
export type OkmsServiceKeyUpdateOVHState = OkmsKeyStateUpdateEnumOVH | null;

/**
 * Key deactivation reason
 * @nullable
 */
export type OkmsServiceKeyUpdateOVHDeactivationReason = OkmsKeyDeactivationReasonEnumOVH | null;

/**
 * Update an OKMS service key
 */
export interface OkmsServiceKeyUpdateOVH {
  /**
   * Key deactivation reason
   * @nullable
   */
  deactivationReason?: OkmsServiceKeyUpdateOVHDeactivationReason;
  /**
   * Key Name
   * @nullable
   */
  name?: string | null;
  /**
   * Key desired state for activation, deactivation and compromise (specific case of deactivation)
   * @nullable
   */
  state?: OkmsServiceKeyUpdateOVHState;
}

/**
 * Size of the key
 * @nullable
 */
export type OkmsServiceKeyResponseWithIAMOVHSize = OkmsKeySizeEnumOVH | null;

/**
 * IAM resource metadata
 * @nullable
 */
export type OkmsServiceKeyResponseWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * Curve type for Elliptic Curve (EC) keys
 * @nullable
 */
export type OkmsServiceKeyResponseWithIAMOVHCurve = OkmsKeyCurveEnumOVH | null;

/**
 * Size of the key
 * @nullable
 */
export type OkmsServiceKeyResponseOVHSize = OkmsKeySizeEnumOVH | null;

/**
 * Curve type for Elliptic Curve (EC) keys
 * @nullable
 */
export type OkmsServiceKeyResponseOVHCurve = OkmsKeyCurveEnumOVH | null;

/**
 * A PEM (Privacy-Enhanced Mail) object
 */
export interface OkmsServiceKeyPEMOVH {
  /** Data in PEM format */
  readonly pem?: string;
}

/**
 * An OKMS service key
 */
export interface OkmsServiceKeyResponseOVH {
  /** Creation time of the key */
  readonly createdAt?: string;
  /**
   * Curve type for Elliptic Curve (EC) keys
   * @nullable
   */
  readonly curve?: OkmsServiceKeyResponseOVHCurve;
  /** Key ID */
  readonly id?: string;
  /**
   * The key in JWK format
   * @nullable
   */
  readonly keys?: readonly OkmsServiceKeyJsonWebKeyOVH[] | null;
  /**
   * The key in PEM format
   * @nullable
   */
  readonly keysPEM?: readonly OkmsServiceKeyPEMOVH[] | null;
  /** Key name */
  readonly name?: string;
  /**
   * The operations for which the key is intended to be used
   * @nullable
   */
  readonly operations?: readonly OkmsKeyOpsEnumOVH[] | null;
  /**
   * Size of the key
   * @nullable
   */
  readonly size?: OkmsServiceKeyResponseOVHSize;
  /** State of the key */
  readonly state?: OkmsKeyStateEnumOVH;
  /** Key type */
  readonly type?: OkmsKeyTypeEnumOVH;
}

/**
 * The intended use of the public key
 * @nullable
 */
export type OkmsServiceKeyJsonWebKeyOVHUse = OkmsKeyUseEnumOVH | null;

/**
 * The cryptographic curve used with the key
 * @nullable
 */
export type OkmsServiceKeyJsonWebKeyOVHCrv = OkmsKeyCurveEnumOVH | null;

/**
 * The algorithm intended to be used with the key
 * @nullable
 */
export type OkmsServiceKeyJsonWebKeyOVHAlg = OkmsKeyAlgEnumOVH | null;

/**
 * A JSON Web Key (JWK) object
 */
export interface OkmsServiceKeyJsonWebKeyOVH {
  /**
   * The algorithm intended to be used with the key
   * @nullable
   */
  alg?: OkmsServiceKeyJsonWebKeyOVHAlg;
  /**
   * The cryptographic curve used with the key
   * @nullable
   */
  crv?: OkmsServiceKeyJsonWebKeyOVHCrv;
  /**
   * The RSA or EC private exponent
   * @nullable
   */
  d?: string | null;
  /**
   * The RSA private key's first factor CRT exponent
   * @nullable
   */
  dp?: string | null;
  /**
   * The RSA private key's second factor CRT exponent
   * @nullable
   */
  dq?: string | null;
  /**
   * The exponent value for the RSA public key
   * @nullable
   */
  e?: string | null;
  /**
   * The value of the symmetric (or other single-valued) key
   * @nullable
   */
  k?: string | null;
  /**
   * The operation for which the key is intended to be used
   * @nullable
   */
  key_ops?: OkmsKeyOpsEnumOVH[] | null;
  /** key ID parameter used to match a specific key */
  kid: string;
  /** Key type parameter identifies the cryptographic algorithm family used with the key, such as RSA or EC */
  kty: OkmsKeyTypeEnumOVH;
  /**
   * The modulus value for the RSA public key
   * @nullable
   */
  n?: string | null;
  /**
   * The first prime factor of the RSA private key
   * @nullable
   */
  p?: string | null;
  /**
   * The second prime factor of the RSA private key
   * @nullable
   */
  q?: string | null;
  /**
   * The CRT coefficient of the second factor of the RSA private key
   * @nullable
   */
  qi?: string | null;
  /**
   * The intended use of the public key
   * @nullable
   */
  use?: OkmsServiceKeyJsonWebKeyOVHUse;
  /**
   * The x coordinate for the Elliptic Curve point
   * @nullable
   */
  x?: string | null;
  /**
   * The y coordinate for the Elliptic Curve point
   * @nullable
   */
  y?: string | null;
}

/**
 * An OKMS service key
 */
export interface OkmsServiceKeyResponseWithIAMOVH {
  /** Creation time of the key */
  readonly createdAt?: string;
  /**
   * Curve type for Elliptic Curve (EC) keys
   * @nullable
   */
  readonly curve?: OkmsServiceKeyResponseWithIAMOVHCurve;
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: OkmsServiceKeyResponseWithIAMOVHIam;
  /** Key ID */
  readonly id?: string;
  /**
   * The key in JWK format
   * @nullable
   */
  readonly keys?: readonly OkmsServiceKeyJsonWebKeyOVH[] | null;
  /**
   * The key in PEM format
   * @nullable
   */
  readonly keysPEM?: readonly OkmsServiceKeyPEMOVH[] | null;
  /** Key name */
  readonly name?: string;
  /**
   * The operations for which the key is intended to be used
   * @nullable
   */
  readonly operations?: readonly OkmsKeyOpsEnumOVH[] | null;
  /**
   * Size of the key
   * @nullable
   */
  readonly size?: OkmsServiceKeyResponseWithIAMOVHSize;
  /** State of the key */
  readonly state?: OkmsKeyStateEnumOVH;
  /** Key type */
  readonly type?: OkmsKeyTypeEnumOVH;
}

/**
 * Type of the key to be created
 * @nullable
 */
export type OkmsServiceKeyCreationOVHType = OkmsKeyTypeEnumOVH | null;

/**
 * Size of the key to be created
 * @nullable
 */
export type OkmsServiceKeyCreationOVHSize = OkmsKeySizeEnumOVH | null;

/**
 * Curve type for Elliptic Curve (EC) keys
 * @nullable
 */
export type OkmsServiceKeyCreationOVHCurve = OkmsKeyCurveEnumOVH | null;

/**
 * Create an OKMS service key
 */
export interface OkmsServiceKeyCreationOVH {
  /**
   * Context of the key
   * @nullable
   */
  context?: string | null;
  /**
   * Curve type for Elliptic Curve (EC) keys
   * @nullable
   */
  curve?: OkmsServiceKeyCreationOVHCurve;
  /**
   * Set of JSON Web Keys in case of import, incompatible with type,size,curve and operations
   * @nullable
   */
  keys?: OkmsServiceKeyJsonWebKeyOVH[] | null;
  /** Key name */
  name?: string;
  /**
   * The operations for which the key is intended to be used
   * @nullable
   */
  operations?: OkmsKeyOpsEnumOVH[] | null;
  /**
   * Size of the key to be created
   * @nullable
   */
  size?: OkmsServiceKeyCreationOVHSize;
  /**
   * Type of the key to be created
   * @nullable
   */
  type?: OkmsServiceKeyCreationOVHType;
}

/**
 * IAM resource metadata
 * @nullable
 */
export type OkmsResourceResponseWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * An OKMS service
 */
export interface OkmsResourceResponseWithIAMOVH {
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: OkmsResourceResponseWithIAMOVHIam;
  /** OKMS ID */
  readonly id?: string;
  /** KMS kmip API endpoint */
  readonly kmipEndpoint?: string;
  /** Number of KMIP objects (non destroyed) */
  readonly kmipObjectCount?: number;
  /**
   * KMS kmip RSA API endpoint
   * @nullable
   */
  readonly kmipRsaEndpoint?: string | null;
  /**
   * KMS public CA (Certificate Authority)
   * @nullable
   */
  readonly publicCA?: string | null;
  /** Region */
  readonly region?: OkmsRegionEnumOVH;
  /** KMS rest API endpoint */
  readonly restEndpoint?: string;
  /** Number of service keys */
  readonly serviceKeyCount?: number;
  /** KMS rest API swagger UI */
  readonly swaggerEndpoint?: string;
}

/**
 * An OKMS service
 */
export interface OkmsResourceResponseOVH {
  /** OKMS ID */
  readonly id?: string;
  /** KMS kmip API endpoint */
  readonly kmipEndpoint?: string;
  /** Number of KMIP objects (non destroyed) */
  readonly kmipObjectCount?: number;
  /**
   * KMS kmip RSA API endpoint
   * @nullable
   */
  readonly kmipRsaEndpoint?: string | null;
  /**
   * KMS public CA (Certificate Authority)
   * @nullable
   */
  readonly publicCA?: string | null;
  /** Region */
  readonly region?: OkmsRegionEnumOVH;
  /** KMS rest API endpoint */
  readonly restEndpoint?: string;
  /** Number of service keys */
  readonly serviceKeyCount?: number;
  /** KMS rest API swagger UI */
  readonly swaggerEndpoint?: string;
}

/**
 * Service key size reference
 */
export interface OkmsReferenceServiceKeySizeOVH {
  /** Is default service key size for type? */
  readonly default?: boolean;
  /** Service key size for type */
  readonly value?: OkmsKeySizeEnumOVH;
}

/**
 * Service key operations reference
 */
export interface OkmsReferenceServiceKeyOperationsOVH {
  /** Is default service key operations for type? */
  readonly default?: boolean;
  /** Service key operations for type */
  readonly value?: readonly OkmsKeyOpsEnumOVH[];
}

/**
 * Service key curve reference
 */
export interface OkmsReferenceServiceKeyCurveOVH {
  /** Is default service key curve for type? */
  readonly default?: boolean;
  /** Service key curve for type */
  readonly value?: OkmsKeyCurveEnumOVH;
}

/**
 * Service key type, size, curve and operations combination
 */
export interface OkmsReferenceServiceKeyResponseOVH {
  /** Allowed service key curves for type */
  readonly curves?: readonly OkmsReferenceServiceKeyCurveOVH[];
  /** Is default service key type? */
  readonly default?: boolean;
  /** Allowed service key operations for type */
  readonly operations?: readonly OkmsReferenceServiceKeyOperationsOVH[];
  /** Allowed service key sizes for type */
  readonly sizes?: readonly OkmsReferenceServiceKeySizeOVH[];
  /** Service key type */
  readonly type?: OkmsKeyTypeEnumOVH;
}

/**
 * An OKMS service access credential
 */
export interface OkmsCredentialGetResponseOVH {
  /**
   * Certificate PEM of the credential
   * @nullable
   */
  readonly certificatePEM?: string | null;
  /** Creation time of the credential */
  readonly createdAt?: string;
  /**
   * Description of the credential
   * @nullable
   */
  readonly description?: string | null;
  /** Expiration time of the credential */
  readonly expiredAt?: string;
  /** Is the credential generated from CSR */
  readonly fromCSR?: boolean;
  /** ID of the credential */
  readonly id?: string;
  /** List of identity URNs associated with the credential */
  readonly identityURNs?: readonly string[];
  /** Name of the credential */
  readonly name?: string;
  /** Status of the credential */
  readonly status?: OkmsCredentialStatusEnumOVH;
}

/**
 * An OKMS service access credential
 */
export interface OkmsCredentialCreationResponseOVH {
  /** Creation time of the credential */
  readonly createdAt?: string;
  /**
   * Description of the credential
   * @nullable
   */
  readonly description?: string | null;
  /** Expiration time of the credential */
  readonly expiredAt?: string;
  /** Is the credential generated from CSR */
  readonly fromCSR?: boolean;
  /** ID of the credential */
  readonly id?: string;
  /** List of identity URNs associated with the credential */
  readonly identityURNs?: readonly string[];
  /** Name of the credential */
  readonly name?: string;
  /**
   * Private Key PEM of the credential if no CSR is provided (cannot be retrieve later)
   * @nullable
   */
  readonly privateKeyPEM?: string | null;
  /** Status of the credential */
  readonly status?: OkmsCredentialStatusEnumOVH;
}

/**
 * Request an OKMS service access credential
 */
export interface OkmsCredentialCreationOVH {
  /**
   * Valid Certificate Signing Request
   * @nullable
   */
  csr?: string | null;
  /**
   * Description of the credential (max 200)
   * @nullable
   */
  description?: string | null;
  /** List of identity URNs associated with the credential (max 25) */
  identityURNs: string[];
  /** Name of the credential (max 50) */
  name: string;
  /**
   * Validity in days (default 365, max 365)
   * @nullable
   */
  validity?: number | null;
}

/**
 * Region
 */
export type OkmsRegionEnumOVH = typeof OkmsRegionEnumOVH[keyof typeof OkmsRegionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OkmsRegionEnumOVH = {
  'eu-west-par': 'eu-west-par',
  'eu-west-rbx': 'eu-west-rbx',
  'eu-west-sbg': 'eu-west-sbg',
  'us-east-vin': 'us-east-vin',
  'us-west-hil': 'us-west-hil',
} as const;

/**
 * Key usage
 */
export type OkmsKeyUseEnumOVH = typeof OkmsKeyUseEnumOVH[keyof typeof OkmsKeyUseEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OkmsKeyUseEnumOVH = {
  enc: 'enc',
  sig: 'sig',
} as const;

/**
 * Cryptographic algorithm family used with the key
 */
export type OkmsKeyTypeEnumOVH = typeof OkmsKeyTypeEnumOVH[keyof typeof OkmsKeyTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OkmsKeyTypeEnumOVH = {
  EC: 'EC',
  RSA: 'RSA',
  oct: 'oct',
} as const;

/**
 * The desired state of a key
 */
export type OkmsKeyStateUpdateEnumOVH = typeof OkmsKeyStateUpdateEnumOVH[keyof typeof OkmsKeyStateUpdateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OkmsKeyStateUpdateEnumOVH = {
  ACTIVE: 'ACTIVE',
  COMPROMISED: 'COMPROMISED',
  DEACTIVATED: 'DEACTIVATED',
} as const;

/**
 * The state of a key
 */
export type OkmsKeyStateEnumOVH = typeof OkmsKeyStateEnumOVH[keyof typeof OkmsKeyStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OkmsKeyStateEnumOVH = {
  ACTIVE: 'ACTIVE',
  ALL: 'ALL',
  COMPROMISED: 'COMPROMISED',
  DEACTIVATED: 'DEACTIVATED',
  DESTROYED: 'DESTROYED',
  DESTROYED_COMPROMISED: 'DESTROYED_COMPROMISED',
  PRE_ACTIVE: 'PRE_ACTIVE',
} as const;

/**
 * The size of a key
 */
export type OkmsKeySizeEnumOVH = typeof OkmsKeySizeEnumOVH[keyof typeof OkmsKeySizeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OkmsKeySizeEnumOVH = {
  NUMBER_128: 128,
  NUMBER_192: 192,
  NUMBER_256: 256,
  NUMBER_2048: 2048,
  NUMBER_3072: 3072,
  NUMBER_4096: 4096,
} as const;

/**
 * Key operations
 */
export type OkmsKeyOpsEnumOVH = typeof OkmsKeyOpsEnumOVH[keyof typeof OkmsKeyOpsEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OkmsKeyOpsEnumOVH = {
  decrypt: 'decrypt',
  encrypt: 'encrypt',
  sign: 'sign',
  unwrapKey: 'unwrapKey',
  verify: 'verify',
  wrapKey: 'wrapKey',
} as const;

/**
 * Key format
 */
export type OkmsKeyFormatEnumOVH = typeof OkmsKeyFormatEnumOVH[keyof typeof OkmsKeyFormatEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OkmsKeyFormatEnumOVH = {
  JWK: 'JWK',
  PEM: 'PEM',
} as const;

/**
 * Key deactivation reason
 */
export type OkmsKeyDeactivationReasonEnumOVH = typeof OkmsKeyDeactivationReasonEnumOVH[keyof typeof OkmsKeyDeactivationReasonEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OkmsKeyDeactivationReasonEnumOVH = {
  AFFILIATION_CHANGED: 'AFFILIATION_CHANGED',
  CA_COMPROMISE: 'CA_COMPROMISE',
  CESSATION_OF_OPERATION: 'CESSATION_OF_OPERATION',
  KEY_COMPROMISE: 'KEY_COMPROMISE',
  PRIVILEGE_WITHDRAWN: 'PRIVILEGE_WITHDRAWN',
  SUPERSEDED: 'SUPERSEDED',
  UNSPECIFIED: 'UNSPECIFIED',
} as const;

/**
 * Key curve
 */
export type OkmsKeyCurveEnumOVH = typeof OkmsKeyCurveEnumOVH[keyof typeof OkmsKeyCurveEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OkmsKeyCurveEnumOVH = {
  'P-256': 'P-256',
  'P-384': 'P-384',
  'P-521': 'P-521',
} as const;

/**
 * Key algorithm
 */
export type OkmsKeyAlgEnumOVH = typeof OkmsKeyAlgEnumOVH[keyof typeof OkmsKeyAlgEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OkmsKeyAlgEnumOVH = {
  ES256: 'ES256',
  ES384: 'ES384',
  ES512: 'ES512',
  PS256: 'PS256',
  PS384: 'PS384',
  PS512: 'PS512',
  RS256: 'RS256',
  RS384: 'RS384',
  RS512: 'RS512',
} as const;

/**
 * Valid states of credential
 */
export type OkmsCredentialStatusEnumOVH = typeof OkmsCredentialStatusEnumOVH[keyof typeof OkmsCredentialStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OkmsCredentialStatusEnumOVH = {
  CREATING: 'CREATING',
  DELETING: 'DELETING',
  ERROR: 'ERROR',
  EXPIRED: 'EXPIRED',
  READY: 'READY',
} as const;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * Temporary url information
 */
export interface DbaasLogsTemporaryLogsLinkOVH {
  /** Temporary url expiration date */
  readonly expirationDate?: string;
  /** Temporary url */
  readonly url?: string;
}

/**
 * Log temporary URL creation payload
 */
export interface DbaasLogsLogUrlCreationOVH {
  /** Log kind name */
  kind: string;
}

/**
 * Asynchronous operation after subscribing or unsubscribing to a resource logs
 */
export interface DbaasLogsLogSubscriptionResponseOVH {
  /** Identifier of the operation */
  readonly operationId?: string;
  /** Operation owner's service name */
  readonly serviceName?: string;
}

/**
 * Log subscription resource
 */
export interface DbaasLogsLogSubscriptionResourceOVH {
  /** Name of subscribed resource */
  readonly name?: string;
  /** Type of subscribed resource */
  readonly type?: string;
}

/**
 * Log subscription creation payload
 */
export interface DbaasLogsLogSubscriptionCreationOVH {
  /** Log kind name to subscribe to */
  kind: string;
  /** Customer log stream ID */
  streamId: string;
}

/**
 * Log subscription
 */
export interface DbaasLogsLogSubscriptionOVH {
  /** Creation date of the subscription */
  readonly createdAt?: string;
  /** Log kind name of this subscription */
  readonly kind?: string;
  /** Subscribed resource, where the logs come from */
  readonly resource?: DbaasLogsLogSubscriptionResourceOVH;
  /** Name of the destination log service */
  readonly serviceName?: string;
  /** Id of the destination log stream */
  readonly streamId?: string;
  /** Subscription ID */
  readonly subscriptionId?: string;
  /** Last update date of the subscription */
  readonly updatedAt?: string;
}

/**
 * Log kind
 */
export interface DbaasLogsLogKindOVH {
  /** List of additional log fields managed in this log kind */
  readonly additionalReturnedFields?: readonly string[];
  /** Creation date of the log kind */
  readonly createdAt?: string;
  /** Log kind display name */
  readonly displayName?: string;
  /** Log kind ID */
  readonly kindId?: string;
  /** Log kind name */
  readonly name?: string;
  /** Last update date of the log kind */
  readonly updatedAt?: string;
}

