/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetOvhCloudConnectServiceNameInterfaceIdStatisticsParams = {
/**
 * The period the statistics are fetched for
 */
period: OvhcloudconnectInterfaceMetricsPeriodEnumOVH;
/**
 * The type of statistic to be fetched
 */
type: OvhcloudconnectInterfaceMetricsTypeEnumOVH;
};

export type GetOvhCloudConnectParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Service change contact payload
 */
export interface ServicesChangeContactOVH {
  /** The contact to set as admin contact */
  contactAdmin?: string;
  /** The contact to set as billing contact */
  contactBilling?: string;
  /** The contact to set as tech contact */
  contactTech?: string;
}

/**
 * All reasons you can provide for a service termination
 */
export type ServiceTerminationReasonEnumOVH = typeof ServiceTerminationReasonEnumOVH[keyof typeof ServiceTerminationReasonEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationReasonEnumOVH = {
  FEATURES_DONT_SUIT_ME: 'FEATURES_DONT_SUIT_ME',
  LACK_OF_PERFORMANCES: 'LACK_OF_PERFORMANCES',
  MIGRATED_TO_ANOTHER_OVH_PRODUCT: 'MIGRATED_TO_ANOTHER_OVH_PRODUCT',
  MIGRATED_TO_COMPETITOR: 'MIGRATED_TO_COMPETITOR',
  NOT_ENOUGH_RECOGNITION: 'NOT_ENOUGH_RECOGNITION',
  NOT_NEEDED_ANYMORE: 'NOT_NEEDED_ANYMORE',
  NOT_RELIABLE: 'NOT_RELIABLE',
  NO_ANSWER: 'NO_ANSWER',
  OTHER: 'OTHER',
  PRODUCT_DIMENSION_DONT_SUIT_ME: 'PRODUCT_DIMENSION_DONT_SUIT_ME',
  PRODUCT_TOOLS_DONT_SUIT_ME: 'PRODUCT_TOOLS_DONT_SUIT_ME',
  TOO_EXPENSIVE: 'TOO_EXPENSIVE',
  TOO_HARD_TO_USE: 'TOO_HARD_TO_USE',
  UNSATIFIED_BY_CUSTOMER_SUPPORT: 'UNSATIFIED_BY_CUSTOMER_SUPPORT',
} as const;

/**
 * All future uses you can provide for a service termination
 */
export type ServiceTerminationFutureUseEnumOVH = typeof ServiceTerminationFutureUseEnumOVH[keyof typeof ServiceTerminationFutureUseEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationFutureUseEnumOVH = {
  NOT_REPLACING_SERVICE: 'NOT_REPLACING_SERVICE',
  OTHER: 'OTHER',
  SUBSCRIBE_AN_OTHER_SERVICE: 'SUBSCRIBE_AN_OTHER_SERVICE',
  SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR',
  SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR',
} as const;

/**
 * Service confirm termination payload
 */
export interface ServicesConfirmTerminationOVH {
  /** Commentary about your termination request */
  commentary?: string;
  /** All future uses you can provide for a service termination */
  futureUse?: ServiceTerminationFutureUseEnumOVH;
  /** All reasons you can provide for a service termination */
  reason?: ServiceTerminationReasonEnumOVH;
  /** The termination token sent by email to the admin contact */
  token: string;
}

/**
 * service.StateEnum
 */
export type ServiceStateEnumOVH = typeof ServiceStateEnumOVH[keyof typeof ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceStateEnumOVH = {
  autorenewInProgress: 'autorenewInProgress',
  expired: 'expired',
  inCreation: 'inCreation',
  ok: 'ok',
  pendingDebt: 'pendingDebt',
  unPaid: 'unPaid',
} as const;

/**
 * Detailed renewal type of a service
 */
export type ServiceRenewalTypeEnumOVH = typeof ServiceRenewalTypeEnumOVH[keyof typeof ServiceRenewalTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewalTypeEnumOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Details about a Service
 */
export interface ServicesServiceOVH {
  /** Indicates that the service can be set up to be deleted at expiration */
  readonly canDeleteAtExpiration?: boolean;
  readonly contactAdmin?: string;
  readonly contactBilling?: string;
  readonly contactTech?: string;
  readonly creation?: string;
  readonly domain?: string;
  /** @nullable */
  readonly engagedUpTo?: string | null;
  readonly expiration?: string;
  /**
   * All the possible renew period of your service in month
   * @nullable
   */
  readonly possibleRenewPeriod?: readonly number[] | null;
  /**
   * Way of handling the renew
   * @nullable
   */
  renew?: ServicesServiceOVHRenew;
  readonly renewalType?: ServiceRenewalTypeEnumOVH;
  readonly serviceId?: number;
  readonly status?: ServiceStateEnumOVH;
}

/**
 * Map a possible renew for a specific service
 */
export interface ServiceRenewTypeOVH {
  /** The service is automatically renewed */
  automatic?: boolean;
  /** The service will be deleted at expiration */
  deleteAtExpiration?: boolean;
  /** The service forced to be renewed */
  forced?: boolean;
  /**
   * The service needs to be manually renewed and paid
   * @nullable
   */
  manualPayment?: boolean | null;
  /**
   * period of renew in month
   * @nullable
   */
  period?: number | null;
}

/**
 * Way of handling the renew
 * @nullable
 */
export type ServicesServiceOVHRenew = ServiceRenewTypeOVH | null;

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * Enum values for Task status
 */
export type OvhcloudconnectTaskStatusEnumOVH = typeof OvhcloudconnectTaskStatusEnumOVH[keyof typeof OvhcloudconnectTaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectTaskStatusEnumOVH = {
  denied: 'denied',
  doing: 'doing',
  done: 'done',
  error: 'error',
  pause: 'pause',
  todo: 'todo',
} as const;

/**
 * Enum values for Task function
 */
export type OvhcloudconnectTaskFunctionEnumOVH = typeof OvhcloudconnectTaskFunctionEnumOVH[keyof typeof OvhcloudconnectTaskFunctionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectTaskFunctionEnumOVH = {
  addDatacenterConfiguration: 'addDatacenterConfiguration',
  addDatacenterExtraConfiguration: 'addDatacenterExtraConfiguration',
  addPopConfiguration: 'addPopConfiguration',
  addVrack: 'addVrack',
  delDatacenterConfiguration: 'delDatacenterConfiguration',
  delDatacenterExtraConfiguration: 'delDatacenterExtraConfiguration',
  delPopConfiguration: 'delPopConfiguration',
  lockInterface: 'lockInterface',
  removeVrack: 'removeVrack',
  unlockInterface: 'unlockInterface',
} as const;

/**
 * Enum values for the Service
 */
export type OvhcloudconnectServiceStatusEnumOVH = typeof OvhcloudconnectServiceStatusEnumOVH[keyof typeof OvhcloudconnectServiceStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectServiceStatusEnumOVH = {
  active: 'active',
  closed: 'closed',
} as const;

/**
 * Enum values for service provider
 */
export type OvhcloudconnectServiceProviderEnumOVH = typeof OvhcloudconnectServiceProviderEnumOVH[keyof typeof OvhcloudconnectServiceProviderEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectServiceProviderEnumOVH = {
  OVHcloud: 'OVHcloud',
  RISQ: 'RISQ',
  consoleconnect: 'consoleconnect',
  digitalrealty: 'digitalrealty',
  equinix: 'equinix',
  fibrenoire: 'fibrenoire',
  intercloud: 'intercloud',
  internal: 'internal',
  interxion: 'interxion',
  megaport: 'megaport',
  orange: 'orange',
} as const;

/**
 * Enum values for port quantity
 */
export type OvhcloudconnectServicePortEnumOVH = typeof OvhcloudconnectServicePortEnumOVH[keyof typeof OvhcloudconnectServicePortEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectServicePortEnumOVH = {
  NUMBER_1: '1',
  NUMBER_2: '2',
} as const;

/**
 * Enum values for bandwidth
 */
export type OvhcloudconnectServiceBandwidthEnumOVH = typeof OvhcloudconnectServiceBandwidthEnumOVH[keyof typeof OvhcloudconnectServiceBandwidthEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectServiceBandwidthEnumOVH = {
  '100g': '100g',
  '100m': '100m',
  '10g': '10g',
  '1g': '1g',
  '200m': '200m',
  '2g': '2g',
  '500m': '500m',
  '5g': '5g',
} as const;

/**
 * Enum values for Pop Configuration Type
 */
export type OvhcloudconnectPopConfigTypeEnumOVH = typeof OvhcloudconnectPopConfigTypeEnumOVH[keyof typeof OvhcloudconnectPopConfigTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectPopConfigTypeEnumOVH = {
  l2: 'l2',
  l3: 'l3',
} as const;

/**
 * Enum values for Pop Configuration Status
 */
export type OvhcloudconnectPopConfigStatusEnumOVH = typeof OvhcloudconnectPopConfigStatusEnumOVH[keyof typeof OvhcloudconnectPopConfigStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectPopConfigStatusEnumOVH = {
  active: 'active',
  init: 'init',
  toDelete: 'toDelete',
} as const;

/**
 * Enum values for order step name
 */
export type OvhcloudconnectOrderStepNameEnumOVH = typeof OvhcloudconnectOrderStepNameEnumOVH[keyof typeof OvhcloudconnectOrderStepNameEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectOrderStepNameEnumOVH = {
  BOOK_RESSOURCES: 'BOOK_RESSOURCES',
  CHECK_LIGHT: 'CHECK_LIGHT',
  CREATE_SERVICE_KEY: 'CREATE_SERVICE_KEY',
  FINALIZING: 'FINALIZING',
  SEND_LOA: 'SEND_LOA',
  SEND_SERVICE_KEY: 'SEND_SERVICE_KEY',
  WAITING_PROVIDER: 'WAITING_PROVIDER',
} as const;

/**
 * Enum values for order status
 */
export type OvhcloudconnectOrderStatusEnumOVH = typeof OvhcloudconnectOrderStatusEnumOVH[keyof typeof OvhcloudconnectOrderStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectOrderStatusEnumOVH = {
  doing: 'doing',
  done: 'done',
  todo: 'todo',
} as const;

/**
 * Enum values for messageCode
 */
export type OvhcloudconnectMessageCodeEnumOVH = typeof OvhcloudconnectMessageCodeEnumOVH[keyof typeof OvhcloudconnectMessageCodeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectMessageCodeEnumOVH = {
  mailSent: 'mailSent',
} as const;

/**
 * Enum values for service key status
 */
export type OvhcloudconnectKeyStatusEnumOVH = typeof OvhcloudconnectKeyStatusEnumOVH[keyof typeof OvhcloudconnectKeyStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectKeyStatusEnumOVH = {
  active: 'active',
  cancelled: 'cancelled',
  doing: 'doing',
  terminated: 'terminated',
  toCheck: 'toCheck',
} as const;

/**
 * Enum values for the termination type
 */
export type OvhcloudconnectInterfaceTerminationTypeEnumOVH = typeof OvhcloudconnectInterfaceTerminationTypeEnumOVH[keyof typeof OvhcloudconnectInterfaceTerminationTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectInterfaceTerminationTypeEnumOVH = {
  'LC/PC': 'LC/PC',
  'SC/PC': 'SC/PC',
} as const;

/**
 * Enum values for interface status
 */
export type OvhcloudconnectInterfaceStatusEnumOVH = typeof OvhcloudconnectInterfaceStatusEnumOVH[keyof typeof OvhcloudconnectInterfaceStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectInterfaceStatusEnumOVH = {
  disabled: 'disabled',
  enabled: 'enabled',
  reserved: 'reserved',
} as const;

/**
 * Enum values for the unit of the statistics
 */
export type OvhcloudconnectInterfaceMetricsUnitEnumOVH = typeof OvhcloudconnectInterfaceMetricsUnitEnumOVH[keyof typeof OvhcloudconnectInterfaceMetricsUnitEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectInterfaceMetricsUnitEnumOVH = {
  'bytes/s': 'bytes/s',
  dbm: 'dbm',
  'error/s': 'error/s',
} as const;

/**
 * Enum values for the type of the statistics
 */
export type OvhcloudconnectInterfaceMetricsTypeEnumOVH = typeof OvhcloudconnectInterfaceMetricsTypeEnumOVH[keyof typeof OvhcloudconnectInterfaceMetricsTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectInterfaceMetricsTypeEnumOVH = {
  'error:download': 'error:download',
  'error:upload': 'error:upload',
  'light:in': 'light:in',
  'light:out': 'light:out',
  'traffic:download': 'traffic:download',
  'traffic:upload': 'traffic:upload',
} as const;

/**
 * Enum values for the period of the statistics
 */
export type OvhcloudconnectInterfaceMetricsPeriodEnumOVH = typeof OvhcloudconnectInterfaceMetricsPeriodEnumOVH[keyof typeof OvhcloudconnectInterfaceMetricsPeriodEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectInterfaceMetricsPeriodEnumOVH = {
  daily: 'daily',
  hourly: 'hourly',
  weekly: 'weekly',
} as const;

/**
 * Enum values for the light status
 */
export type OvhcloudconnectInterfaceLightStatusEnumOVH = typeof OvhcloudconnectInterfaceLightStatusEnumOVH[keyof typeof OvhcloudconnectInterfaceLightStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectInterfaceLightStatusEnumOVH = {
  down: 'down',
  unknown: 'unknown',
  up: 'up',
} as const;

/**
 * Enum values for incident type status
 */
export type OvhcloudconnectIncidentTypeEnumOVH = typeof OvhcloudconnectIncidentTypeEnumOVH[keyof typeof OvhcloudconnectIncidentTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectIncidentTypeEnumOVH = {
  incident: 'incident',
  maintenance: 'maintenance',
} as const;

/**
 * Enum values for Diagnostic type
 */
export type OvhcloudconnectDiagnosticTypeEnumOVH = typeof OvhcloudconnectDiagnosticTypeEnumOVH[keyof typeof OvhcloudconnectDiagnosticTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectDiagnosticTypeEnumOVH = {
  'advertised-routes': 'advertised-routes',
  default: 'default',
  routes: 'routes',
} as const;

/**
 * Enum values for Diagnostic function
 */
export type OvhcloudconnectDiagnosticFunctionEnumOVH = typeof OvhcloudconnectDiagnosticFunctionEnumOVH[keyof typeof OvhcloudconnectDiagnosticFunctionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectDiagnosticFunctionEnumOVH = {
  diagMacs: 'diagMacs',
  diagPeering: 'diagPeering',
  diagPeeringExtra: 'diagPeeringExtra',
  diagRoutes: 'diagRoutes',
} as const;

/**
 * Enum values for Datacenter Extra Configuration Type
 */
export type OvhcloudconnectDatacenterExtraConfigTypeEnumOVH = typeof OvhcloudconnectDatacenterExtraConfigTypeEnumOVH[keyof typeof OvhcloudconnectDatacenterExtraConfigTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OvhcloudconnectDatacenterExtraConfigTypeEnumOVH = {
  bgp: 'bgp',
  network: 'network',
} as const;

/**
 * Missing description
 */
export interface OvhcloudconnectUpdateOVH {
  /**
   * New description for your service
   * @nullable
   */
  description?: string | null;
}

/**
 * OVHcloud Connect email
 */
export interface OvhcloudconnectToOVH {
  /** Email address to send the key */
  email: string;
}

/**
 * OVHcloud Connect Task
 */
export interface OvhcloudconnectTaskOVH {
  /** Task function */
  readonly function?: OvhcloudconnectTaskFunctionEnumOVH;
  /** Task id */
  readonly id?: number;
  /** Reference of the created resource */
  readonly resourceId?: number;
  /** Task status */
  readonly status?: OvhcloudconnectTaskStatusEnumOVH;
}

/**
 * OVHcloud Connect Subscriptions
 */
export interface OvhcloudconnectSubscriptionsOVH {
  /** List of subscriptions alerts. */
  subscriptions?: string[];
}

/**
 * IAM resource metadata
 * @nullable
 */
export type OvhcloudconnectServiceWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * OVHcloud Connect Service
 */
export interface OvhcloudconnectServiceWithIAMOVH {
  /** Service bandwidth */
  readonly bandwidth?: OvhcloudconnectServiceBandwidthEnumOVH;
  /** Service description */
  readonly description?: string;
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: OvhcloudconnectServiceWithIAMOVHIam;
  /** List of interfaces linked to a service */
  readonly interfaceList?: readonly number[];
  /** Pop reference where the service is delivered */
  readonly pop?: string;
  /** Port quantity */
  readonly portQuantity?: OvhcloudconnectServicePortEnumOVH;
  /** Product name of the service */
  readonly product?: string;
  /** Service provider */
  readonly provider?: OvhcloudconnectServiceProviderEnumOVH;
  /** Service status */
  readonly status?: OvhcloudconnectServiceStatusEnumOVH;
  /** Service UUID */
  readonly uuid?: string;
  /**
   * vrack linked to the service
   * @nullable
   */
  readonly vrack?: string | null;
}

/**
 * OVHcloud Connect Service
 */
export interface OvhcloudconnectServiceOVH {
  /** Service bandwidth */
  readonly bandwidth?: OvhcloudconnectServiceBandwidthEnumOVH;
  /** Service description */
  readonly description?: string;
  /** List of interfaces linked to a service */
  readonly interfaceList?: readonly number[];
  /** Pop reference where the service is delivered */
  readonly pop?: string;
  /** Port quantity */
  readonly portQuantity?: OvhcloudconnectServicePortEnumOVH;
  /** Product name of the service */
  readonly product?: string;
  /** Service provider */
  readonly provider?: OvhcloudconnectServiceProviderEnumOVH;
  /** Service status */
  readonly status?: OvhcloudconnectServiceStatusEnumOVH;
  /** Service UUID */
  readonly uuid?: string;
  /**
   * vrack linked to the service
   * @nullable
   */
  readonly vrack?: string | null;
}

/**
 * OVHcloud Connect send key answer
 */
export interface OvhcloudconnectSendKeyAnswerOVH {
  /** message code for UX to display appropriate text */
  readonly messageCode?: OvhcloudconnectMessageCodeEnumOVH;
}

/**
 * Subnet should be a /30, first IP for OVH, second IP for customer
 * @nullable
 */
export type OvhcloudconnectPopConfigOVHSubnet = Ipv4BlockOVH | null;

/**
 * OVHcloud Connect Service Pop Configuration
 */
export interface OvhcloudconnectPopConfigOVH {
  /**
   * Customer Private AS
   * @nullable
   */
  customerBgpArea?: number | null;
  /** ID of the Pop Configuration */
  readonly id?: number;
  /** ID of the interface */
  interfaceId: number;
  /**
   * OVH Private AS
   * @nullable
   */
  ovhBgpArea?: number | null;
  /** Status of the pop configuration */
  readonly status?: OvhcloudconnectPopConfigStatusEnumOVH;
  /**
   * Subnet should be a /30, first IP for OVH, second IP for customer
   * @nullable
   */
  subnet?: OvhcloudconnectPopConfigOVHSubnet;
  /** Type of the pop configuration */
  type: OvhcloudconnectPopConfigTypeEnumOVH;
}

/**
 * OVHcloud Connect Order Step
 */
export interface OvhcloudconnectOrderStepOVH {
  /**
   * Date when the step was realised
   * @nullable
   */
  readonly date?: string | null;
  /** Step Name */
  readonly name?: OvhcloudconnectOrderStepNameEnumOVH;
  /** Step Status */
  readonly status?: OvhcloudconnectOrderStatusEnumOVH;
}

/**
 * OVHcloud Connect Order
 */
export interface OvhcloudconnectOrderOVH {
  /** Service bandwidth */
  readonly bandwidth?: OvhcloudconnectServiceBandwidthEnumOVH;
  /**
   * Link of the Letter of Authorization
   * @nullable
   */
  readonly loa?: string | null;
  /** Order ID */
  readonly orderId?: number;
  /** Pop reference where the service is delivered */
  readonly pop?: string;
  /** Service provider */
  readonly provider?: OvhcloudconnectServiceProviderEnumOVH;
  /** Service UUID */
  readonly service?: string;
  /** Order steps */
  readonly steps?: readonly OvhcloudconnectOrderStepOVH[];
}

/**
 * OVHcloud Connect Monitoring
 */
export interface OvhcloudconnectMonitoringOVH {
  /** Whether alert is activated */
  readonly activated?: boolean;
  /** Description of the monitoring alert */
  readonly description?: string;
  /** Name of the monitoring alert */
  readonly name?: string;
  /** Type of the monitoring alert */
  readonly type?: string;
}

/**
 * OVHcloud Connect Metrics value
 */
export interface OvhcloudconnectMetricsValueOVH {
  /** Unit in which the value is expressed */
  readonly unit?: OvhcloudconnectInterfaceMetricsUnitEnumOVH;
  readonly value?: number;
}

/**
 * OVHcloud Connect Metrics
 */
export interface OvhcloudconnectMetricsOVH {
  /** timestamp corresponding to the value */
  readonly timestamp?: number;
  readonly value?: OvhcloudconnectMetricsValueOVH;
}

/**
 * OVHcloud Connect Service Key
 */
export interface OvhcloudconnectKeyOVH {
  /** Service Key id */
  readonly id?: number;
  /** Reference of the service */
  readonly key?: string;
  /** Service Key provider */
  readonly provider?: OvhcloudconnectServiceProviderEnumOVH;
  /** Service Key status */
  readonly status?: OvhcloudconnectKeyStatusEnumOVH;
}

/**
 * Fiber termination type
 * @nullable
 */
export type OvhcloudconnectInterfaceOVHInterfaceTerminationType = OvhcloudconnectInterfaceTerminationTypeEnumOVH | null;

/**
 * OVHcloud Connect Interface
 */
export interface OvhcloudconnectInterfaceOVH {
  /**
   * Patch panel name
   * @nullable
   */
  readonly deviceDisplayName?: string | null;
  /**
   * Equipment name in the rack
   * @nullable
   */
  readonly deviceRackDisplayName?: string | null;
  /** Interface reference */
  readonly id?: number;
  /** Status of the light received on the port (checked every 5 min) */
  readonly incomingLightStatus?: OvhcloudconnectInterfaceLightStatusEnumOVH;
  /**
   * Value of the light received on the port (checked every 5 min)
   * @nullable
   */
  readonly incomingLightValue?: number | null;
  /**
   * Port location
   * @nullable
   */
  readonly interfaceName?: string | null;
  /** Status of the interface */
  readonly interfaceStatus?: OvhcloudconnectInterfaceLightStatusEnumOVH;
  /** Date of the last interface status change detected */
  readonly interfaceStatusLastUpdate?: string;
  /**
   * Fiber termination type
   * @nullable
   */
  readonly interfaceTerminationType?: OvhcloudconnectInterfaceOVHInterfaceTerminationType;
  /** Date of the last light change detected */
  readonly lightLastUpdate?: string;
  /** Status of the light emitted on the port (checked every 5 min) */
  readonly outgoingLightStatus?: OvhcloudconnectInterfaceLightStatusEnumOVH;
  /**
   * Value of the light emitted on the port (checked every 5 min)
   * @nullable
   */
  readonly outgoingLightValue?: number | null;
  /** Status of the port */
  readonly status?: OvhcloudconnectInterfaceStatusEnumOVH;
}

/**
 * OVHcloud Connect Incident
 */
export interface OvhcloudconnectIncidentOVH {
  /**
   * Ending date of the incident
   * @nullable
   */
  readonly endDate?: string | null;
  /** Incident reference */
  readonly id?: number;
  /** Starting date of the incident */
  readonly startDate?: string;
  /** Type of incident */
  readonly type?: OvhcloudconnectIncidentTypeEnumOVH;
}

/**
 * Prefix for routes
 * @nullable
 */
export type OvhcloudconnectDiagnosticResultOVHPrefix = IpBlockOVH | null;

/**
 * Mac address
 * @nullable
 */
export type OvhcloudconnectDiagnosticResultOVHMac = MacAddressOVH | null;

/**
 * OVHcloud Connect Diagnostic Result
 */
export interface OvhcloudconnectDiagnosticResultOVH {
  /**
   * As-path for routes
   * @nullable
   */
  readonly aspath?: string | null;
  /**
   * Command sent to equipment
   * @nullable
   */
  readonly cmd?: string | null;
  /**
   * Local prefix used for routes
   * @nullable
   */
  readonly localprefix?: number | null;
  /**
   * Mac address
   * @nullable
   */
  readonly mac?: OvhcloudconnectDiagnosticResultOVHMac;
  /**
   * BGP Med (Metric)
   * @nullable
   */
  readonly med?: number | null;
  /**
   * Output of command sent to equipment
   * @nullable
   */
  readonly output?: string | null;
  /**
   * Prefix for routes
   * @nullable
   */
  readonly prefix?: OvhcloudconnectDiagnosticResultOVHPrefix;
  /**
   * eVPN router mac
   * @nullable
   */
  readonly routermac?: string | null;
  /**
   * Local date when route/mac was declared
   * @nullable
   */
  readonly timestamp?: string | null;
}

/**
 * OVHcloud Connect Service Diagnostic Configuration
 */
export interface OvhcloudconnectDiagnosticConfigurationOVH {
  /** ID of the Datacenter configuration */
  dcConfigId?: number;
  /** Name of the diagnostic */
  diagnosticName: OvhcloudconnectDiagnosticFunctionEnumOVH;
  /** Type of the diagnostic */
  diagnosticType?: OvhcloudconnectDiagnosticTypeEnumOVH;
  /** ID of the extra configuration  */
  extraConfigId?: number;
  /** ID of the Pop Configuration */
  popConfigId: number;
}

/**
 * OVHcloud Connect Diagnostic
 */
export interface OvhcloudconnectDiagnosticOVH {
  /**
   * Date of the diagnostic
   * @nullable
   */
  readonly date?: string | null;
  /**
   * Description of the diagnostic
   * @nullable
   */
  readonly description?: string | null;
  /** Diagnostic function */
  readonly function?: OvhcloudconnectDiagnosticFunctionEnumOVH;
  /** Diagnostic id */
  readonly id?: number;
  /**
   * Diagnostic result
   * @nullable
   */
  readonly result?: readonly OvhcloudconnectDiagnosticResultOVH[] | null;
  /**
   * Source where the diagnostic was run
   * @nullable
   */
  readonly source?: string | null;
  /** Diagnostic status */
  readonly status?: OvhcloudconnectTaskStatusEnumOVH;
}

/**
 * Static route ip
 * @nullable
 */
export type OvhcloudconnectDatacenterExtraConfigOVHSubnet = Ipv4BlockOVH | null;

/**
 * Static route next hop
 * @nullable
 */
export type OvhcloudconnectDatacenterExtraConfigOVHNextHop = Ipv4OVH | null;

/**
 * Router IP for BGP
 * @nullable
 */
export type OvhcloudconnectDatacenterExtraConfigOVHBgpNeighborIp = Ipv4OVH | null;

/**
 * OVHcloud Connect Service Datacenter Extra Configuration
 */
export interface OvhcloudconnectDatacenterExtraConfigOVH {
  /**
   * BGP AS number
   * @nullable
   */
  bgpNeighborArea?: number | null;
  /**
   * Router IP for BGP
   * @nullable
   */
  bgpNeighborIp?: OvhcloudconnectDatacenterExtraConfigOVHBgpNeighborIp;
  /** ID of the extra configuration  */
  readonly id?: number;
  /**
   * Static route next hop
   * @nullable
   */
  nextHop?: OvhcloudconnectDatacenterExtraConfigOVHNextHop;
  /** Status of the pop configuration */
  readonly status?: OvhcloudconnectPopConfigStatusEnumOVH;
  /**
   * Static route ip
   * @nullable
   */
  subnet?: OvhcloudconnectDatacenterExtraConfigOVHSubnet;
  /** Type of the configuration */
  type: OvhcloudconnectDatacenterExtraConfigTypeEnumOVH;
}

/**
 * OVHcloud Connect Service Datacenter Configuration
 */
export interface OvhcloudconnectDatacenterConfigOVH {
  /** ID of the datacenter linked */
  datacenterId: number;
  /** ID of the Datacenter configuration */
  readonly id?: number;
  /**
   * OVH Private AS
   * @nullable
   */
  ovhBgpArea?: number | null;
  /** Status of the pop configuration */
  readonly status?: OvhcloudconnectPopConfigStatusEnumOVH;
  /**
   * Subnet should be a /28 min
   * @nullable
   */
  subnet?: OvhcloudconnectDatacenterConfigOVHSubnet;
}

/**
 * OVHcloud Connect Datacenter
 */
export interface OvhcloudconnectDatacenterOVH {
  /** Get availability to add new configuration on it */
  readonly available?: boolean;
  /** ID of the datacenter */
  readonly id?: number;
  /** name of the datacenter */
  readonly name?: string;
}

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * Subnet should be a /28 min
 * @nullable
 */
export type OvhcloudconnectDatacenterConfigOVHSubnet = Ipv4BlockOVH | null;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

