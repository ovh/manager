/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetDedicatedClusterAvailabilitiesRawParams = {
/**
 * If true, all regions are returned except those listed in regions parameter
 */
excludeRegions?: boolean;
/**
 * The name of the memory hardware part
 */
memory?: string;
/**
 * The plan code in which the hardware is involved
 */
planCode?: string;
/**
 * Node quantity
 */
quantity: number;
/**
 * The names of regions separated by commas
 */
regions?: DedicatedServerAvailabilityRegionalizationEnumOVH;
/**
 * The name of the base hardware
 */
server?: string;
/**
 * The name of the storage hardware part
 */
storage?: string;
/**
 * The name of the system storage hardware part
 */
systemStorage?: string;
};

export type GetDedicatedClusterAvailabilitiesParams = {
/**
 * The name of the memory hardware part
 */
memory?: string;
/**
 * The plan code in which the hardware is involved
 */
planCode?: string;
/**
 * Cluster quantity
 */
quantity: number;
/**
 * The name of the base hardware
 */
server?: string;
/**
 * The name of the storage hardware part
 */
storage?: string;
/**
 * The name of the system storage hardware part
 */
systemStorage?: string;
};

export type GetDedicatedClusterParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Service change contact payload
 */
export interface ServicesChangeContactOVH {
  /** The contact to set as admin contact */
  contactAdmin?: string;
  /** The contact to set as billing contact */
  contactBilling?: string;
  /** The contact to set as tech contact */
  contactTech?: string;
}

/**
 * All reasons you can provide for a service termination
 */
export type ServiceTerminationReasonEnumOVH = typeof ServiceTerminationReasonEnumOVH[keyof typeof ServiceTerminationReasonEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationReasonEnumOVH = {
  FEATURES_DONT_SUIT_ME: 'FEATURES_DONT_SUIT_ME',
  LACK_OF_PERFORMANCES: 'LACK_OF_PERFORMANCES',
  MIGRATED_TO_ANOTHER_OVH_PRODUCT: 'MIGRATED_TO_ANOTHER_OVH_PRODUCT',
  MIGRATED_TO_COMPETITOR: 'MIGRATED_TO_COMPETITOR',
  NOT_ENOUGH_RECOGNITION: 'NOT_ENOUGH_RECOGNITION',
  NOT_NEEDED_ANYMORE: 'NOT_NEEDED_ANYMORE',
  NOT_RELIABLE: 'NOT_RELIABLE',
  NO_ANSWER: 'NO_ANSWER',
  OTHER: 'OTHER',
  PRODUCT_DIMENSION_DONT_SUIT_ME: 'PRODUCT_DIMENSION_DONT_SUIT_ME',
  PRODUCT_TOOLS_DONT_SUIT_ME: 'PRODUCT_TOOLS_DONT_SUIT_ME',
  TOO_EXPENSIVE: 'TOO_EXPENSIVE',
  TOO_HARD_TO_USE: 'TOO_HARD_TO_USE',
  UNSATIFIED_BY_CUSTOMER_SUPPORT: 'UNSATIFIED_BY_CUSTOMER_SUPPORT',
} as const;

/**
 * All future uses you can provide for a service termination
 */
export type ServiceTerminationFutureUseEnumOVH = typeof ServiceTerminationFutureUseEnumOVH[keyof typeof ServiceTerminationFutureUseEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationFutureUseEnumOVH = {
  NOT_REPLACING_SERVICE: 'NOT_REPLACING_SERVICE',
  OTHER: 'OTHER',
  SUBSCRIBE_AN_OTHER_SERVICE: 'SUBSCRIBE_AN_OTHER_SERVICE',
  SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR',
  SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR',
} as const;

/**
 * Service confirm termination payload
 */
export interface ServicesConfirmTerminationOVH {
  /** Commentary about your termination request */
  commentary?: string;
  /** All future uses you can provide for a service termination */
  futureUse?: ServiceTerminationFutureUseEnumOVH;
  /** All reasons you can provide for a service termination */
  reason?: ServiceTerminationReasonEnumOVH;
  /** The termination token sent by email to the admin contact */
  token: string;
}

/**
 * service.StateEnum
 */
export type ServiceStateEnumOVH = typeof ServiceStateEnumOVH[keyof typeof ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceStateEnumOVH = {
  autorenewInProgress: 'autorenewInProgress',
  expired: 'expired',
  inCreation: 'inCreation',
  ok: 'ok',
  pendingDebt: 'pendingDebt',
  unPaid: 'unPaid',
} as const;

/**
 * Detailed renewal type of a service
 */
export type ServiceRenewalTypeEnumOVH = typeof ServiceRenewalTypeEnumOVH[keyof typeof ServiceRenewalTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewalTypeEnumOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Details about a Service
 */
export interface ServicesServiceOVH {
  /** Indicates that the service can be set up to be deleted at expiration */
  readonly canDeleteAtExpiration?: boolean;
  readonly contactAdmin?: string;
  readonly contactBilling?: string;
  readonly contactTech?: string;
  readonly creation?: string;
  readonly domain?: string;
  /** @nullable */
  readonly engagedUpTo?: string | null;
  readonly expiration?: string;
  /**
   * All the possible renew period of your service in month
   * @nullable
   */
  readonly possibleRenewPeriod?: readonly number[] | null;
  /**
   * Way of handling the renew
   * @nullable
   */
  renew?: ServicesServiceOVHRenew;
  readonly renewalType?: ServiceRenewalTypeEnumOVH;
  readonly serviceId?: number;
  readonly status?: ServiceStateEnumOVH;
}

/**
 * Map a possible renew for a specific service
 */
export interface ServiceRenewTypeOVH {
  /** The service is automatically renewed */
  automatic?: boolean;
  /** The service will be deleted at expiration */
  deleteAtExpiration?: boolean;
  /** The service forced to be renewed */
  forced?: boolean;
  /**
   * The service needs to be manually renewed and paid
   * @nullable
   */
  manualPayment?: boolean | null;
  /**
   * period of renew in month
   * @nullable
   */
  period?: number | null;
}

/**
 * Way of handling the renew
 * @nullable
 */
export type ServicesServiceOVHRenew = ServiceRenewTypeOVH | null;

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * The region
 */
export type DedicatedServerAvailabilityRegionalizationEnumOVH = typeof DedicatedServerAvailabilityRegionalizationEnumOVH[keyof typeof DedicatedServerAvailabilityRegionalizationEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerAvailabilityRegionalizationEnumOVH = {
  'ap-south-1': 'ap-south-1',
  'ap-southeast-sgp': 'ap-southeast-sgp',
  'ap-southeast-syd': 'ap-southeast-syd',
  'ca-east-1': 'ca-east-1',
  'ca-east-bhs': 'ca-east-bhs',
  'eu-central-waw': 'eu-central-waw',
  'eu-west-eri': 'eu-west-eri',
  'eu-west-gra': 'eu-west-gra',
  'eu-west-lim': 'eu-west-lim',
  'eu-west-par': 'eu-west-par',
  'eu-west-rbx': 'eu-west-rbx',
  'eu-west-sbg': 'eu-west-sbg',
  'us-east-vin': 'us-east-vin',
  'us-west-hil': 'us-west-hil',
} as const;

/**
 * The availability
 */
export type DedicatedServerAvailabilityEnumOVH = typeof DedicatedServerAvailabilityEnumOVH[keyof typeof DedicatedServerAvailabilityEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerAvailabilityEnumOVH = {
  '120H': '120H',
  '1440H': '1440H',
  '1H-high': '1H-high',
  '1H-low': '1H-low',
  '2160H': '2160H',
  '240H': '240H',
  '24H': '24H',
  '480H': '480H',
  '720H': '720H',
  '72H': '72H',
  comingSoon: 'comingSoon',
  unavailable: 'unavailable',
  unknown: 'unknown',
} as const;

/**
 * A structure describing the availabilities of dedicated server
 */
export interface DedicatedClusterRegionAvailabilityOVH {
  /** The availability */
  readonly availability?: DedicatedServerAvailabilityEnumOVH;
  /** The region */
  readonly region?: DedicatedServerAvailabilityRegionalizationEnumOVH;
}

/**
 * Cluster availability
 */
export interface DedicatedClusterAvailabilityOVH {
  /** Plan code in which the hardware is involved */
  readonly clusterPlanCode?: string;
  /** Fully qualified name and unique name of the hardware */
  readonly fqn?: string;
  /** Name of the memory hardware part */
  readonly memory?: string;
  /** Plan code in which the hardware is involved */
  readonly planCode?: string;
  /** A structure describing the hardware availability for each datacenter */
  readonly regions?: readonly DedicatedClusterRegionAvailabilityOVH[];
  /** Name of the base hardware */
  readonly server?: string;
  /** Name of the storage hardware part */
  readonly storage?: string;
  /**
   * Name of the system storage hardware part
   * @nullable
   */
  readonly systemStorage?: string | null;
}

/**
 * A structure describing the nodes of the cluster
 */
export interface DedicatedClusterNodeOVH {
  /** ID of the node */
  readonly id?: string;
  /** ID of the server */
  readonly serverId?: number;
  /** Name of the server */
  readonly serverName?: string;
}

/**
 * IAM resource metadata
 * @nullable
 */
export type DedicatedClusterClusterWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * A structure describing the dedicated cluster
 */
export interface DedicatedClusterClusterWithIAMOVH {
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: DedicatedClusterClusterWithIAMOVHIam;
  /** Cluster's ID */
  readonly id?: string;
  /** Model of the cluster */
  readonly model?: string;
  /** Cluster's nodes */
  readonly nodes?: readonly DedicatedClusterNodeOVH[];
  /** Region where cluster is located */
  readonly region?: string;
  /** Cluster status */
  readonly status?: string;
}

/**
 * A structure describing the dedicated cluster
 */
export interface DedicatedClusterClusterOVH {
  /** Cluster's ID */
  readonly id?: string;
  /** Model of the cluster */
  readonly model?: string;
  /** Cluster's nodes */
  readonly nodes?: readonly DedicatedClusterNodeOVH[];
  /** Region where cluster is located */
  readonly region?: string;
  /** Cluster status */
  readonly status?: string;
}

/**
 * A structure describing the hardware raw availability for each region
 */
export interface DedicatedClusterAvailabilitiesRawRegionOVH {
  /** The availability */
  readonly availability?: DedicatedServerAvailabilityEnumOVH;
  /**
   * Last availability rule applied
   * @nullable
   */
  readonly lastRule?: string | null;
  /** Real stock including parent references */
  readonly parentAvailable?: number;
  /** The region code */
  readonly region?: DedicatedServerAvailabilityEnumOVH;
  /** Real stock */
  readonly trueAvailable?: number;
}

/**
 * Cluster availability
 */
export interface DedicatedClusterAvailabilitiesRawOVH {
  /** Plan code in which the hardware is involved */
  readonly clusterPlanCode?: string;
  /** Fully qualified name and unique name of the hardware */
  readonly fqn?: string;
  /** Name of the memory hardware part */
  readonly memory?: string;
  /** Plan code in which the hardware is involved */
  readonly planCode?: string;
  /** A structure describing the hardware availability for each region */
  readonly regions?: readonly DedicatedClusterAvailabilitiesRawRegionOVH[];
  /** Name of the base hardware */
  readonly server?: string;
  /** Name of the storage hardware part */
  readonly storage?: string;
  /**
   * Name of the system storage hardware part
   * @nullable
   */
  readonly systemStorage?: string | null;
}

