/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetCommercialCatalogOffersParams = {
/**
 * Offer merchant
 */
merchants?: CommercialCatalogMerchantEnumOVH[];
/**
 * Offer nature
 */
nature?: CommercialCatalogOfferNatureEnumOVH;
/**
 * Commercial product code
 */
productCode?: string;
/**
 * Offer state
 */
state?: CommercialCatalogOfferStateEnumOVH[];
/**
 * Offer type
 */
type?: CommercialCatalogOfferTypeEnumOVH;
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * List of all values to define a language
 */
export type CommonLanguageEnumOVH = typeof CommonLanguageEnumOVH[keyof typeof CommonLanguageEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommonLanguageEnumOVH = {
  cs_CZ: 'cs_CZ',
  de_DE: 'de_DE',
  en_AS: 'en_AS',
  en_AU: 'en_AU',
  en_CA: 'en_CA',
  en_GB: 'en_GB',
  en_IE: 'en_IE',
  en_IN: 'en_IN',
  en_SG: 'en_SG',
  en_US: 'en_US',
  en_WW: 'en_WW',
  es_ES: 'es_ES',
  es_SA: 'es_SA',
  fi_FI: 'fi_FI',
  fr_CA: 'fr_CA',
  fr_FR: 'fr_FR',
  fr_MA: 'fr_MA',
  fr_SN: 'fr_SN',
  fr_TN: 'fr_TN',
  it_IT: 'it_IT',
  lt_LT: 'lt_LT',
  nl_NL: 'nl_NL',
  pl_PL: 'pl_PL',
  pt_PT: 'pt_PT',
} as const;

/**
 * Describes offer validity
 */
export interface CommercialCatalogValidityOVH {
  /**
   * End-of-life datetime of the offer upon which nor offer or service is active
   * @nullable
   */
  readonly eolDate?: string | null;
  /**
   * End-of-sale datetime of the offer upon which offer is not sold anymore but associated service stays active
   * @nullable
   */
  readonly eosDate?: string | null;
  /** Start datetime of the offer upon which offer and service is available */
  readonly startDate?: string;
}

/**
 * Rating value type
 */
export type CommercialCatalogRatingValueTypeEnumOVH = typeof CommercialCatalogRatingValueTypeEnumOVH[keyof typeof CommercialCatalogRatingValueTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommercialCatalogRatingValueTypeEnumOVH = {
  PRICE: 'PRICE',
} as const;

/**
 * Price to apply on billing computation
 */
export interface CommercialCatalogPriceOVH {
  /** Price amount in microcentimes */
  readonly amount?: number;
  /** Price currency */
  readonly currencyCode?: CommercialCatalogCurrencyCodeEnumOVH;
}

/**
 * Price or percentage to apply
 */
export interface CommercialCatalogRatingValueOVH {
  /**
   * Price list
   * @nullable
   */
  readonly prices?: readonly CommercialCatalogPriceOVH[] | null;
  /** Type of type rating value */
  readonly type?: CommercialCatalogRatingValueTypeEnumOVH;
}

/**
 * Type of a commercial catalog offer. An atomic offer is a basic commercial offer (e.g.: C3-8 instance offer with 1 month commitment). A composite offer is a kind of offer composed by multiple atomic offers.
 */
export type CommercialCatalogOfferTypeEnumOVH = typeof CommercialCatalogOfferTypeEnumOVH[keyof typeof CommercialCatalogOfferTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommercialCatalogOfferTypeEnumOVH = {
  ATOMIC: 'ATOMIC',
  COMPOSITE: 'COMPOSITE',
} as const;

/**
 * Offer state. DEPRECATED means that offer is not sold anymore but services are still active
 */
export type CommercialCatalogOfferStateEnumOVH = typeof CommercialCatalogOfferStateEnumOVH[keyof typeof CommercialCatalogOfferStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommercialCatalogOfferStateEnumOVH = {
  ACTIVE: 'ACTIVE',
  DEPRECATED: 'DEPRECATED',
} as const;

/**
 * Nature of a commercial catalog offer. It represents the commercial purpose of the offer. REGULAR represents an offer with standard pricing on product consumption. BILLING_PLAN represents an offer which allows savings on product consumption. STRUCTURAL represents an offer to hold a list of offers and information to share across them, which can't be purchased by itself.
 */
export type CommercialCatalogOfferNatureEnumOVH = typeof CommercialCatalogOfferNatureEnumOVH[keyof typeof CommercialCatalogOfferNatureEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommercialCatalogOfferNatureEnumOVH = {
  BILLING_PLAN: 'BILLING_PLAN',
  REGULAR: 'REGULAR',
  STRUCTURAL: 'STRUCTURAL',
} as const;

/**
 * Object to link a commercial product to an commercial offer
 */
export interface CommercialCatalogOfferCommercialProductOVH {
  /** Commercial product to be linked */
  readonly commercialProduct?: CommercialCatalogCommercialProductOVH;
  /**
   * Maximum number of product to be included in the offer
   * @nullable
   */
  readonly max?: number | null;
  /** Minimum number of product to be included in the offer */
  readonly min?: number;
}

/**
 * Product linked to the offer
 * @nullable
 */
export type CommercialCatalogOfferOVHProduct = CommercialCatalogOfferCommercialProductOVH | null;

/**
 * Defines a commercial catalog offer
 */
export interface CommercialCatalogOfferOVH {
  /** Unique code for the offer */
  readonly code?: string;
  /** Applicable commercial rating values */
  readonly commercialRatingValues?: readonly CommercialCatalogCommercialRatingValueOVH[];
  /** Offer description */
  readonly descriptions?: readonly CommercialCatalogDescriptionOVH[];
  /** List of engagements available to subscribe the offer to */
  readonly engagements?: readonly CommercialCatalogEngagementOVH[];
  /** Offer identifier */
  readonly id?: string;
  /**
   * Offer information based on previous model used for migration to the new model
   * @nullable
   */
  readonly legacy?: CommercialCatalogOfferOVHLegacy;
  /** Offer nature */
  readonly nature?: CommercialCatalogOfferNatureEnumOVH;
  /**
   * Sub offers when type is composite
   * @nullable
   */
  readonly offers?: readonly CommercialCatalogCompositeOfferCommercialOfferOVH[] | null;
  /**
   * Product linked to the offer
   * @nullable
   */
  readonly product?: CommercialCatalogOfferOVHProduct;
  /** Offer type */
  readonly type?: CommercialCatalogOfferTypeEnumOVH;
  /** Offer validity information */
  readonly validity?: CommercialCatalogValidityOVH;
  /** Offer version, increase on update */
  readonly version?: number;
}

/**
 * Merchants where offers are available
 */
export type CommercialCatalogMerchantEnumOVH = typeof CommercialCatalogMerchantEnumOVH[keyof typeof CommercialCatalogMerchantEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommercialCatalogMerchantEnumOVH = {
  ASIA: 'ASIA',
  AU: 'AU',
  CA: 'CA',
  DE: 'DE',
  ES: 'ES',
  FR: 'FR',
  GB: 'GB',
  IE: 'IE',
  IN: 'IN',
  IT: 'IT',
  MA: 'MA',
  NL: 'NL',
  PL: 'PL',
  PT: 'PT',
  QC: 'QC',
  SG: 'SG',
  SN: 'SN',
  TN: 'TN',
  WE: 'WE',
  WS: 'WS',
} as const;

/**
 * Contains content from previous model
 * @nullable
 */
export type CommercialCatalogLegacyOVHBlobs = CommercialCatalogBlobOVH | null;

/**
 * Describes legacy information, used for transition between offer models
 */
export interface CommercialCatalogLegacyOVH {
  /**
   * Contains content from previous model
   * @nullable
   */
  readonly blobs?: CommercialCatalogLegacyOVHBlobs;
  /** Previous model identifier */
  readonly plan?: string;
}

/**
 * Offer information based on previous model used for migration to the new model
 * @nullable
 */
export type CommercialCatalogOfferOVHLegacy = CommercialCatalogLegacyOVH | null;

/**
 * Translated invoice label
 */
export interface CommercialCatalogInvoiceLabelOVH {
  /** Invoice label */
  readonly label?: string;
  /** Label language */
  readonly language?: CommonLanguageEnumOVH;
}

/**
 * Describes engagement information
 */
export interface CommercialCatalogEngagementOVH {
  /** Whether the engagement reactivates itself */
  readonly autoReactivation?: boolean;
  /** Engagement duration following ISO8601 format */
  readonly validDuration?: string;
}

/**
 * Translated description
 */
export interface CommercialCatalogDescriptionOVH {
  /** Language of the description */
  readonly language?: CommonLanguageEnumOVH;
  /** Long label */
  readonly longLabel?: string;
  /** Short label */
  readonly shortLabel?: string;
}

/**
 * Currency code following ISO4217 format
 */
export type CommercialCatalogCurrencyCodeEnumOVH = typeof CommercialCatalogCurrencyCodeEnumOVH[keyof typeof CommercialCatalogCurrencyCodeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommercialCatalogCurrencyCodeEnumOVH = {
  AUD: 'AUD',
  CAD: 'CAD',
  CZK: 'CZK',
  EUR: 'EUR',
  GBP: 'GBP',
  INR: 'INR',
  LTL: 'LTL',
  MAD: 'MAD',
  PLN: 'PLN',
  SGD: 'SGD',
  TND: 'TND',
  USD: 'USD',
  XOF: 'XOF',
} as const;

/**
 * Describes offers composition
 */
export interface CommercialCatalogCompositeOfferCommercialOfferOVH {
  /** Offer embedded in the composite offer, represented by its id */
  readonly commercialOffer?: string;
  /**
   * Maximum number of commercial offers which may compose the composite offer. min = max means the quantity is forced
   * @nullable
   */
  readonly max?: number | null;
  /** Minimum number of commercial offers which may compose the composite offer */
  readonly min?: number;
}

/**
 * Defines the applicable rating values
 */
export interface CommercialCatalogCommercialRatingValueOVH {
  /** Label of the invoice */
  readonly invoiceLabels?: readonly CommercialCatalogInvoiceLabelOVH[];
  /** Rating value to link the offer to */
  readonly ratingValue?: CommercialCatalogRatingValueOVH;
}

/**
 * Product sold by the offer it is attached to
 */
export interface CommercialCatalogCommercialProductOVH {
  /** Product code */
  readonly code?: string;
  /** Description of the commercial product */
  readonly descriptions?: readonly CommercialCatalogDescriptionOVH[];
}

/**
 * Describes volume IOPS information
 */
export interface CommercialCatalogBlobContentTechnicalVolumeIopsOVH {
  /** Whether level is guaranteed */
  readonly guaranteed?: boolean;
  /** Level */
  readonly level?: number;
  /**
   * Maximum value
   * @nullable
   */
  readonly max?: number | null;
  /**
   * Unit of maximum value
   * @nullable
   */
  readonly maxUnit?: string | null;
  /**
   * Unit
   * @nullable
   */
  readonly unit?: string | null;
}

/**
 * Describes volume capacity
 */
export interface CommercialCatalogBlobContentTechnicalVolumeCapacityOVH {
  /** Maximum volume capacity in GB */
  readonly max?: number;
}

/**
 * Describes volume information
 */
export interface CommercialCatalogBlobContentTechnicalVolumeOVH {
  /** Disk capacity details */
  readonly capacity?: CommercialCatalogBlobContentTechnicalVolumeCapacityOVH;
  /** Input/Output operations per second details */
  readonly iops?: CommercialCatalogBlobContentTechnicalVolumeIopsOVH;
}

/**
 * Describes throughput information
 */
export interface CommercialCatalogBlobContentTechnicalThroughputOVH {
  /** Level */
  readonly level?: number;
}

/**
 * Describes a connection or request per seconds for a technical blob
 */
export interface CommercialCatalogBlobContentTechnicalPerSecondsOVH {
  /** Total */
  readonly total?: number;
  /**
   * Unit
   * @nullable
   */
  readonly unit?: string | null;
}

/**
 * Describes operating system information
 */
export interface CommercialCatalogBlobContentTechnicalOSOVH {
  /** Family */
  readonly family?: string;
}

/**
 * Describes NVME storage information
 */
export interface CommercialCatalogBlobContentTechnicalNvmeOVH {
  /** Disk properties */
  readonly disks?: readonly CommercialCatalogBlobContentTechnicalDiskOVH[];
}

/**
 * Describes node information
 */
export interface CommercialCatalogBlobContentTechnicalNodesOVH {
  /** Number of nodes */
  readonly number?: number;
}

/**
 * Describes network information
 */
export interface CommercialCatalogBlobContentTechnicalNetworkOVH {
  /**
   * Guaranteed Network
   * @nullable
   */
  readonly guaranteed?: boolean | null;
  /**
   * Whether it is the maximum value
   * @nullable
   */
  readonly isMax?: boolean | null;
  /**
   * Network level
   * @nullable
   */
  readonly level?: number | null;
  /**
   * Maximum bandwidth
   * @nullable
   */
  readonly max?: number | null;
  /**
   * Unit of max field
   * @nullable
   */
  readonly maxUnit?: string | null;
  /**
   * Unit
   * @nullable
   */
  readonly unit?: string | null;
  /**
   * Whether usage is unlimited
   * @nullable
   */
  readonly unlimited?: boolean | null;
}

/**
 * Describes memory information
 */
export interface CommercialCatalogBlobContentTechnicalMemoryOVH {
  /**
   * Interface type
   * @nullable
   */
  readonly interface?: string | null;
  /** Size of the RAM (GB if sizeUnit not defined) */
  readonly size?: number;
  /**
   * Size unit
   * @nullable
   */
  readonly sizeUnit?: string | null;
}

/**
 * Describes GPU information
 */
export interface CommercialCatalogBlobContentTechnicalGPUOVH {
  /** GPU memory size */
  readonly memory?: CommercialCatalogBlobContentTechnicalMemoryOVH;
  /** GPU model */
  readonly model?: string;
  /** GPU number */
  readonly number?: number;
  /**
   * GPU performance
   * @nullable
   */
  readonly performance?: number | null;
}

/**
 * Describes disk technical details
 */
export interface CommercialCatalogBlobContentTechnicalDiskOVH {
  /** Disk capacity in Gb */
  readonly capacity?: number;
  /**
   * Disk interface
   * @nullable
   */
  readonly interface?: string | null;
  /**
   * Input/Output operations per second
   * @nullable
   */
  readonly iops?: number | null;
  /**
   * Maximum disk capacity (GB if sizeUnit not defined)
   * @nullable
   */
  readonly maximumCapacity?: number | null;
  /**
   * Number of disks
   * @nullable
   */
  readonly number?: number | null;
  /**
   * Size unit
   * @nullable
   */
  readonly sizeUnit?: string | null;
  /**
   * Disk technology
   * @nullable
   */
  readonly technology?: string | null;
}

/**
 * Describes storage information
 */
export interface CommercialCatalogBlobContentTechnicalStorageOVH {
  /** Disk properties */
  readonly disks?: readonly CommercialCatalogBlobContentTechnicalDiskOVH[];
  /**
   * Raid
   * @nullable
   */
  readonly raid?: string | null;
}

/**
 * Describes ephemeral storage information
 */
export interface CommercialCatalogBlobContentTechnicalEphemeralStorageOVH {
  /** Disk properties */
  readonly disks?: readonly CommercialCatalogBlobContentTechnicalDiskOVH[];
}

/**
 * Describes connection information for concurrent clients
 */
export interface CommercialCatalogBlobContentTechnicalConnectionClientsOVH {
  /** Number of allowed concurrent clients */
  readonly concurrency?: number;
  /** Number of allowed concurrent connections per client */
  readonly number?: number;
}

/**
 * Describes connection information
 */
export interface CommercialCatalogBlobContentTechnicalConnectionOVH {
  /** Connection information per client */
  readonly clients?: CommercialCatalogBlobContentTechnicalConnectionClientsOVH;
  /** Total of allowed connections */
  readonly total?: number;
}

/**
 * Describes a CPU technical details
 */
export interface CommercialCatalogBlobContentTechnicalCPUOVH {
  /**
   * CPU Brand
   * @nullable
   */
  readonly brand?: string | null;
  /** Number of cores */
  readonly cores?: number;
  /**
   * Frequency of CPU in GHz
   * @nullable
   */
  readonly frequency?: number | null;
  /**
   * Maximum frequency of CPU in GHz
   * @nullable
   */
  readonly maxFrequency?: number | null;
  /**
   * Displayable name
   * @nullable
   */
  readonly model?: string | null;
  /**
   * Number of threads
   * @nullable
   */
  readonly threads?: number | null;
  /**
   * Type of CPU
   * @nullable
   */
  readonly type?: string | null;
}

/**
 * vRack information
 * @nullable
 */
export type CommercialCatalogBlobContentTechnicalOVHVrack = CommercialCatalogBlobContentTechnicalNetworkOVH | null;

/**
 * Volume
 * @nullable
 */
export type CommercialCatalogBlobContentTechnicalOVHVolume = CommercialCatalogBlobContentTechnicalVolumeOVH | null;

/**
 * Throughput
 * @nullable
 */
export type CommercialCatalogBlobContentTechnicalOVHThroughput = CommercialCatalogBlobContentTechnicalThroughputOVH | null;

/**
 * Disks information
 * @nullable
 */
export type CommercialCatalogBlobContentTechnicalOVHStorage = CommercialCatalogBlobContentTechnicalStorageOVH | null;

/**
 * Connection per seconds
 * @nullable
 */
export type CommercialCatalogBlobContentTechnicalOVHRequestPerSeconds = CommercialCatalogBlobContentTechnicalPerSecondsOVH | null;

/**
 * OS
 * @nullable
 */
export type CommercialCatalogBlobContentTechnicalOVHOs = CommercialCatalogBlobContentTechnicalOSOVH | null;

/**
 * NVME
 * @nullable
 */
export type CommercialCatalogBlobContentTechnicalOVHNvme = CommercialCatalogBlobContentTechnicalNvmeOVH | null;

/**
 * Nodes
 * @nullable
 */
export type CommercialCatalogBlobContentTechnicalOVHNodes = CommercialCatalogBlobContentTechnicalNodesOVH | null;

/**
 * Memory information
 * @nullable
 */
export type CommercialCatalogBlobContentTechnicalOVHMemory = CommercialCatalogBlobContentTechnicalMemoryOVH | null;

/**
 * GPU information
 * @nullable
 */
export type CommercialCatalogBlobContentTechnicalOVHGpu = CommercialCatalogBlobContentTechnicalGPUOVH | null;

/**
 * Ephemeral local storage
 * @nullable
 */
export type CommercialCatalogBlobContentTechnicalOVHEphemeralLocalStorage = CommercialCatalogBlobContentTechnicalEphemeralStorageOVH | null;

/**
 * CPU information
 * @nullable
 */
export type CommercialCatalogBlobContentTechnicalOVHCpu = CommercialCatalogBlobContentTechnicalCPUOVH | null;

/**
 * Connection per seconds
 * @nullable
 */
export type CommercialCatalogBlobContentTechnicalOVHConnectionPerSeconds = CommercialCatalogBlobContentTechnicalPerSecondsOVH | null;

/**
 * Connection information
 * @nullable
 */
export type CommercialCatalogBlobContentTechnicalOVHConnection = CommercialCatalogBlobContentTechnicalConnectionOVH | null;

/**
 * Bandwidth information
 * @nullable
 */
export type CommercialCatalogBlobContentTechnicalOVHBandwidth = CommercialCatalogBlobContentTechnicalNetworkOVH | null;

/**
 * Describes offer technical information
 */
export interface CommercialCatalogBlobContentTechnicalOVH {
  /**
   * Bandwidth information
   * @nullable
   */
  readonly bandwidth?: CommercialCatalogBlobContentTechnicalOVHBandwidth;
  /**
   * Connection information
   * @nullable
   */
  readonly connection?: CommercialCatalogBlobContentTechnicalOVHConnection;
  /**
   * Connection per seconds
   * @nullable
   */
  readonly connectionPerSeconds?: CommercialCatalogBlobContentTechnicalOVHConnectionPerSeconds;
  /**
   * CPU information
   * @nullable
   */
  readonly cpu?: CommercialCatalogBlobContentTechnicalOVHCpu;
  /**
   * Ephemeral local storage
   * @nullable
   */
  readonly ephemeralLocalStorage?: CommercialCatalogBlobContentTechnicalOVHEphemeralLocalStorage;
  /**
   * GPU information
   * @nullable
   */
  readonly gpu?: CommercialCatalogBlobContentTechnicalOVHGpu;
  /**
   * Memory information
   * @nullable
   */
  readonly memory?: CommercialCatalogBlobContentTechnicalOVHMemory;
  /**
   * Name
   * @nullable
   */
  readonly name?: string | null;
  /**
   * Nodes
   * @nullable
   */
  readonly nodes?: CommercialCatalogBlobContentTechnicalOVHNodes;
  /**
   * NVME
   * @nullable
   */
  readonly nvme?: CommercialCatalogBlobContentTechnicalOVHNvme;
  /**
   * OS
   * @nullable
   */
  readonly os?: CommercialCatalogBlobContentTechnicalOVHOs;
  /**
   * Connection per seconds
   * @nullable
   */
  readonly requestPerSeconds?: CommercialCatalogBlobContentTechnicalOVHRequestPerSeconds;
  /**
   * Disks information
   * @nullable
   */
  readonly storage?: CommercialCatalogBlobContentTechnicalOVHStorage;
  /**
   * Throughput
   * @nullable
   */
  readonly throughput?: CommercialCatalogBlobContentTechnicalOVHThroughput;
  /**
   * Volume
   * @nullable
   */
  readonly volume?: CommercialCatalogBlobContentTechnicalOVHVolume;
  /**
   * vRack information
   * @nullable
   */
  readonly vrack?: CommercialCatalogBlobContentTechnicalOVHVrack;
}

/**
 * Describes blob content
 */
export interface CommercialCatalogBlobContentOVH {
  /** Technical information */
  readonly technical?: CommercialCatalogBlobContentTechnicalOVH;
}

/**
 * Describes additional information of an offer, kept for transition from legacy model
 */
export interface CommercialCatalogBlobOVH {
  /** Blob content */
  readonly content?: CommercialCatalogBlobContentOVH;
}

