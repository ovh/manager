/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetDedicatedNashaServiceNameUseParams = {
/**
 * The type of statistic to be fetched
 */
type: DedicatedStorageNasUsageTypeEnumOVH;
};

export type GetDedicatedNashaServiceNameTaskParams = {
/**
 * Filter the value of operation property (=)
 */
operation?: DedicatedStorageTaskFunctionEnumOVH;
/**
 * Filter the value of status property (=)
 */
status?: DedicatedTaskStatusEnumOVH;
};

export type GetDedicatedNashaServiceNamePartitionPartitionNameUseParams = {
/**
 * The type of statistic to be fetched
 */
type: DedicatedStoragePartitionUsageTypeEnumOVH;
};

export type PostDedicatedNashaServiceNamePartitionPartitionNameSnapshotBody = {
  /** Snapshot interval to add */
  snapshotType: DedicatedStorageSnapshotEnumOVH;
};

export type PostDedicatedNashaServiceNamePartitionPartitionNameQuotaBody = {
  /** the size to set in MB */
  size: number;
  /** the uid to set quota on */
  uid: number;
};

export type PostDedicatedNashaServiceNamePartitionPartitionNameOptionsBody = {
  /** atime setting */
  atime?: DedicatedStorageAtimeEnumOVH;
  /** ZFS recordsize */
  recordsize?: DedicatedStorageRecordSizeEnumOVH;
  /** sync setting */
  sync?: DedicatedStorageSyncEnumOVH;
};

export type PostDedicatedNashaServiceNamePartitionPartitionNameCustomSnapshotBody = {
  /** optional expiration date/time, in iso8601 format */
  expiration?: string;
  /** the name of the snapshot */
  name: string;
};

export type PostDedicatedNashaServiceNamePartitionPartitionNameAccessBody = {
  /** ACL description */
  aclDescription?: string;
  /** Ip or block to add */
  ip: IpBlockOVH;
  /** ACL type */
  type?: DedicatedStorageAclTypeEnumOVH;
};

export type PostDedicatedNashaServiceNamePartitionBody = {
  /** Partition description */
  partitionDescription?: string;
  /** Partition name */
  partitionName: string;
  /** NFS|CIFS|NFS_CIFS */
  protocol: DedicatedStorageProtocolEnumOVH;
  /** Partition size */
  size: number;
};

export type PostDedicatedNashaServiceNameConfirmTerminationBody = {
  /** Commentary about your termination request */
  commentary?: string;
  /** What next after your termination request */
  futureUse?: ServiceTerminationFutureUseEnumOVH;
  /** Reason of your termination request */
  reason?: ServiceTerminationReasonEnumOVH;
  /** The termination token sent by email to the admin contact */
  token: string;
};

export type PostDedicatedNashaServiceNameChangeContactBody = {
  /** The contact to set as admin contact */
  contactAdmin?: string;
  /** The contact to set as billing contact */
  contactBilling?: string;
  /** The contact to set as tech contact */
  contactTech?: string;
};

export type GetDedicatedNashaParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Way of handling the renew
 * @nullable
 */
export type ServicesServiceOVHRenew = ServiceRenewTypeOVH | null;

/**
 * All reasons you can provide for a service termination
 */
export type ServiceTerminationReasonEnumOVH = typeof ServiceTerminationReasonEnumOVH[keyof typeof ServiceTerminationReasonEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationReasonEnumOVH = {
  FEATURES_DONT_SUIT_ME: 'FEATURES_DONT_SUIT_ME',
  LACK_OF_PERFORMANCES: 'LACK_OF_PERFORMANCES',
  MIGRATED_TO_ANOTHER_OVH_PRODUCT: 'MIGRATED_TO_ANOTHER_OVH_PRODUCT',
  MIGRATED_TO_COMPETITOR: 'MIGRATED_TO_COMPETITOR',
  NOT_ENOUGH_RECOGNITION: 'NOT_ENOUGH_RECOGNITION',
  NOT_NEEDED_ANYMORE: 'NOT_NEEDED_ANYMORE',
  NOT_RELIABLE: 'NOT_RELIABLE',
  NO_ANSWER: 'NO_ANSWER',
  OTHER: 'OTHER',
  PRODUCT_DIMENSION_DONT_SUIT_ME: 'PRODUCT_DIMENSION_DONT_SUIT_ME',
  PRODUCT_TOOLS_DONT_SUIT_ME: 'PRODUCT_TOOLS_DONT_SUIT_ME',
  TOO_EXPENSIVE: 'TOO_EXPENSIVE',
  TOO_HARD_TO_USE: 'TOO_HARD_TO_USE',
  UNSATIFIED_BY_CUSTOMER_SUPPORT: 'UNSATIFIED_BY_CUSTOMER_SUPPORT',
} as const;

/**
 * All future uses you can provide for a service termination
 */
export type ServiceTerminationFutureUseEnumOVH = typeof ServiceTerminationFutureUseEnumOVH[keyof typeof ServiceTerminationFutureUseEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationFutureUseEnumOVH = {
  NOT_REPLACING_SERVICE: 'NOT_REPLACING_SERVICE',
  OTHER: 'OTHER',
  SUBSCRIBE_AN_OTHER_SERVICE: 'SUBSCRIBE_AN_OTHER_SERVICE',
  SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR',
  SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR',
} as const;

export type ServiceStateEnumOVH = typeof ServiceStateEnumOVH[keyof typeof ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceStateEnumOVH = {
  autorenewInProgress: 'autorenewInProgress',
  expired: 'expired',
  inCreation: 'inCreation',
  ok: 'ok',
  pendingDebt: 'pendingDebt',
  unPaid: 'unPaid',
} as const;

/**
 * Detailed renewal type of a service
 */
export type ServiceRenewalTypeEnumOVH = typeof ServiceRenewalTypeEnumOVH[keyof typeof ServiceRenewalTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewalTypeEnumOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  automaticV2024: 'automaticV2024',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Details about a Service
 */
export interface ServicesServiceOVH {
  /** Indicates that the service can be set up to be deleted at expiration */
  readonly canDeleteAtExpiration?: boolean;
  readonly contactAdmin?: string;
  readonly contactBilling?: string;
  readonly contactTech?: string;
  readonly creation?: string;
  readonly domain?: string;
  /** @nullable */
  readonly engagedUpTo?: string | null;
  readonly expiration?: string;
  /**
   * All the possible renew period of your service in month
   * @nullable
   */
  readonly possibleRenewPeriod?: readonly number[] | null;
  /**
   * Way of handling the renew
   * @nullable
   */
  renew?: ServicesServiceOVHRenew;
  readonly renewalType?: ServiceRenewalTypeEnumOVH;
  readonly serviceId?: number;
  readonly status?: ServiceStateEnumOVH;
}

/**
 * Map a possible renew for a specific service
 */
export interface ServiceRenewTypeOVH {
  /** The service is automatically renewed */
  automatic?: boolean;
  /** The service will be deleted at expiration */
  deleteAtExpiration?: boolean;
  /** The service forced to be renewed */
  forced?: boolean;
  /**
   * The service needs to be manually renewed and paid
   * @nullable
   */
  manualPayment?: boolean | null;
  /**
   * period of renew in month
   * @nullable
   */
  period?: number | null;
}

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * Distincts task
 */
export type DedicatedStorageTaskFunctionEnumOVH = typeof DedicatedStorageTaskFunctionEnumOVH[keyof typeof DedicatedStorageTaskFunctionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedStorageTaskFunctionEnumOVH = {
  backupRecursiveDestroy: 'backupRecursiveDestroy',
  clusterLeclercAclUpdate: 'clusterLeclercAclUpdate',
  clusterLeclercChangeServiceIp: 'clusterLeclercChangeServiceIp',
  clusterLeclercCustomSnapCreate: 'clusterLeclercCustomSnapCreate',
  clusterLeclercCustomSnapDelete: 'clusterLeclercCustomSnapDelete',
  clusterLeclercDeleteSnapshotDirectory: 'clusterLeclercDeleteSnapshotDirectory',
  clusterLeclercDestroyNasContainer: 'clusterLeclercDestroyNasContainer',
  clusterLeclercPartitionAdd: 'clusterLeclercPartitionAdd',
  clusterLeclercPartitionDelete: 'clusterLeclercPartitionDelete',
  clusterLeclercPartitionUpdate: 'clusterLeclercPartitionUpdate',
  clusterLeclercQuotaUpdate: 'clusterLeclercQuotaUpdate',
  clusterLeclercSetupNasContainer: 'clusterLeclercSetupNasContainer',
  clusterLeclercSnapshotUpdate: 'clusterLeclercSnapshotUpdate',
  clusterLeclercZfsOptions: 'clusterLeclercZfsOptions',
  nasAclUpdate: 'nasAclUpdate',
  nasDeleteSnapshotDirectory: 'nasDeleteSnapshotDirectory',
  nasPartitionAdd: 'nasPartitionAdd',
  nasPartitionDelete: 'nasPartitionDelete',
  nasPartitionUpdate: 'nasPartitionUpdate',
  nasQuotaUpdate: 'nasQuotaUpdate',
  remoteBackupRecursiveDestroy: 'remoteBackupRecursiveDestroy',
} as const;

/**
 * Sync values
 */
export type DedicatedStorageSyncEnumOVH = typeof DedicatedStorageSyncEnumOVH[keyof typeof DedicatedStorageSyncEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedStorageSyncEnumOVH = {
  always: 'always',
  disabled: 'disabled',
  standard: 'standard',
} as const;

/**
 * Partition snapshot allowed 
 */
export type DedicatedStorageSnapshotEnumOVH = typeof DedicatedStorageSnapshotEnumOVH[keyof typeof DedicatedStorageSnapshotEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedStorageSnapshotEnumOVH = {
  'day-1': 'day-1',
  'day-2': 'day-2',
  'day-3': 'day-3',
  'day-7': 'day-7',
  'hour-1': 'hour-1',
  'hour-6': 'hour-6',
} as const;

/**
 * Recordsize values
 */
export type DedicatedStorageRecordSizeEnumOVH = typeof DedicatedStorageRecordSizeEnumOVH[keyof typeof DedicatedStorageRecordSizeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedStorageRecordSizeEnumOVH = {
  NUMBER_131072: '131072',
  NUMBER_16384: '16384',
  NUMBER_32768: '32768',
  NUMBER_4096: '4096',
  NUMBER_65536: '65536',
  NUMBER_8192: '8192',
} as const;

/**
 * Partition Protocol
 */
export type DedicatedStorageProtocolEnumOVH = typeof DedicatedStorageProtocolEnumOVH[keyof typeof DedicatedStorageProtocolEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedStorageProtocolEnumOVH = {
  CIFS: 'CIFS',
  NFS: 'NFS',
  NFS_CIFS: 'NFS_CIFS',
} as const;

/**
 * Available types for NAS partition usage
 */
export type DedicatedStoragePartitionUsageTypeEnumOVH = typeof DedicatedStoragePartitionUsageTypeEnumOVH[keyof typeof DedicatedStoragePartitionUsageTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedStoragePartitionUsageTypeEnumOVH = {
  size: 'size',
  used: 'used',
  usedbysnapshots: 'usedbysnapshots',
} as const;

/**
 * Available types for NAS usage
 */
export type DedicatedStorageNasUsageTypeEnumOVH = typeof DedicatedStorageNasUsageTypeEnumOVH[keyof typeof DedicatedStorageNasUsageTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedStorageNasUsageTypeEnumOVH = {
  size: 'size',
  used: 'used',
  usedbysnapshots: 'usedbysnapshots',
} as const;

/**
 * A structure describing the metrics token result
 */
export interface DedicatedStorageMetricsTokenResultOVH {
  /** The url of the endpoint */
  endpoint?: string;
  /** The token value */
  token?: string;
}

/**
 * the disk type of the nasHa
 */
export type DedicatedStorageDiskTypeEnumOVH = typeof DedicatedStorageDiskTypeEnumOVH[keyof typeof DedicatedStorageDiskTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedStorageDiskTypeEnumOVH = {
  hdd: 'hdd',
  nvme: 'nvme',
  ssd: 'ssd',
} as const;

/**
 * Atime values
 */
export type DedicatedStorageAtimeEnumOVH = typeof DedicatedStorageAtimeEnumOVH[keyof typeof DedicatedStorageAtimeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedStorageAtimeEnumOVH = {
  off: 'off',
  on: 'on',
} as const;

/**
 * Acl Type
 */
export type DedicatedStorageAclTypeEnumOVH = typeof DedicatedStorageAclTypeEnumOVH[keyof typeof DedicatedStorageAclTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedStorageAclTypeEnumOVH = {
  readonly: 'readonly',
  readwrite: 'readwrite',
} as const;

/**
 * Partition options
 */
export interface DedicatedNashaOptionsOVH {
  /** atime setting */
  readonly atime?: string;
  /** ID */
  readonly id?: number;
  /** ZFS recordsize */
  readonly recordsize?: string;
  /** sync setting */
  readonly sync?: string;
}

/**
 * Custom Snapshot
 */
export interface DedicatedNashaCustomSnapOVH {
  /**
   * date and time at which snapshot will be automatically destroyed
   * @nullable
   */
  readonly expiration?: string | null;
  /** name of the snapshot */
  readonly name?: string;
}

/**
 * Access ip of nas
 * @nullable
 */
export type DedicatedNashaStorageWithIAMOVHIp = IpOVH | null;

/**
 * IAM resource metadata
 * @nullable
 */
export type DedicatedNashaStorageWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * Storage nas HA
 */
export interface DedicatedNashaStorageWithIAMOVH {
  /** True, if partition creation is allowed on this nas HA */
  readonly canCreatePartition?: boolean;
  /**
   * The name you give to the nas
   * @nullable
   */
  customName?: string | null;
  /**
   * area of nas
   * @nullable
   */
  readonly datacenter?: string | null;
  /** the disk type of the nasHa */
  readonly diskType?: DedicatedStorageDiskTypeEnumOVH;
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: DedicatedNashaStorageWithIAMOVHIam;
  /**
   * Access ip of nas
   * @nullable
   */
  readonly ip?: DedicatedNashaStorageWithIAMOVHIp;
  /** Send an email to customer if any issue is detected */
  monitored?: boolean;
  /** The storage service name */
  readonly serviceName?: string;
  /** percentage of nas space used in % */
  readonly zpoolCapacity?: number;
  /** the size of the nas */
  readonly zpoolSize?: number;
}

/**
 * Access ip of nas
 * @nullable
 */
export type DedicatedNashaStorageOVHIp = IpOVH | null;

/**
 * Storage nas HA
 */
export interface DedicatedNashaStorageOVH {
  /** True, if partition creation is allowed on this nas HA */
  readonly canCreatePartition?: boolean;
  /**
   * The name you give to the nas
   * @nullable
   */
  customName?: string | null;
  /**
   * area of nas
   * @nullable
   */
  readonly datacenter?: string | null;
  /** the disk type of the nasHa */
  readonly diskType?: DedicatedStorageDiskTypeEnumOVH;
  /**
   * Access ip of nas
   * @nullable
   */
  readonly ip?: DedicatedNashaStorageOVHIp;
  /** Send an email to customer if any issue is detected */
  monitored?: boolean;
  /** The storage service name */
  readonly serviceName?: string;
  /** percentage of nas space used in % */
  readonly zpoolCapacity?: number;
  /** the size of the nas */
  readonly zpoolSize?: number;
}

/**
 * Partition Snapshot
 */
export interface DedicatedNashaSnapshotOVH {
  /** the interval of snapshot */
  readonly snapshotType?: DedicatedStorageSnapshotEnumOVH;
}

/**
 * Partition Quota
 */
export interface DedicatedNashaQuotaOVH {
  /** the size to set in MB */
  readonly size?: number;
  /** the uid to set quota on */
  readonly uid?: number;
}

/**
 * Storage zpool partition
 */
export interface DedicatedNashaPartitionOVH {
  /**
   * percentage of partition space used in %
   * @nullable
   */
  readonly partitionCapacity?: number | null;
  /**
   * a brief description of the partition
   * @nullable
   */
  partitionDescription?: string | null;
  /** the given name of partition */
  readonly partitionName?: string;
  /** must be nfs cifs or both */
  readonly protocol?: DedicatedStorageProtocolEnumOVH;
  /** Partition size */
  size?: number;
  /**
   * percentage of partition space used by snapshots, in %
   * @nullable
   */
  readonly usedBySnapshots?: number | null;
}

/**
 * Define Acl for partition
 */
export interface DedicatedNashaAccessOVH {
  /** the id of the access */
  readonly accessId?: number;
  /**
   * a brief description of the acl
   * @nullable
   */
  readonly aclDescription?: string | null;
  /** the ip in root on storage */
  readonly ip?: IpBlockOVH;
  /** ACL type */
  readonly type?: DedicatedStorageAclTypeEnumOVH;
}

/**
 * different task status
 */
export type DedicatedTaskStatusEnumOVH = typeof DedicatedTaskStatusEnumOVH[keyof typeof DedicatedTaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedTaskStatusEnumOVH = {
  cancelled: 'cancelled',
  customerError: 'customerError',
  doing: 'doing',
  done: 'done',
  init: 'init',
  ovhError: 'ovhError',
  todo: 'todo',
} as const;

/**
 * Storage task
 */
export interface DedicatedNasTaskTaskOVH {
  /**
   * information about operation
   * @nullable
   */
  readonly details?: string | null;
  /**
   * the date when the task finished
   * @nullable
   */
  readonly doneDate?: string | null;
  /**
   * last modification of task
   * @nullable
   */
  readonly lastUpdate?: string | null;
  /** Task type of operation */
  readonly operation?: DedicatedStorageTaskFunctionEnumOVH;
  /**
   * name of the partition
   * @nullable
   */
  readonly partitionName?: string | null;
  /** The actual state of the task */
  readonly status?: DedicatedTaskStatusEnumOVH;
  /**
   * the name of your service
   * @nullable
   */
  readonly storageName?: string | null;
  /** id of the task */
  readonly taskId?: number;
  /**
   * Insertion of task in the todo
   * @nullable
   */
  readonly todoDate?: string | null;
}

/**
 * A numeric value tagged with its unit
 */
export interface ComplexTypeUnitAndValueDoubleOVH {
  unit?: string;
  value?: number;
}

