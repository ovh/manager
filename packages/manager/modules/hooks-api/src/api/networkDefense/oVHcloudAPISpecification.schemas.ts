/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetNetworkDefenseVacTrafficParams = {
/**
 * Query statistics after the given date
 */
after: string;
/**
 * Query statistics before the given date
 */
before?: string;
/**
 * Query statistics for the given subnet (currently, only IPv4/32 or IPv6/64 are supported)
 */
subnet: IpBlockOVH;
};

export type GetNetworkDefenseVacEventParams = {
/**
 * Query events which started after the given date
 */
after?: string;
/**
 * Query events which ended before the given date
 */
before?: string;
/**
 * Query for ongoing events only. If this is set, 'after' and 'before' parameters are ignored
 */
ongoingOnly?: boolean;
/**
 * Query events for the given region
 */
region?: NetworkDefenseRegionEnumOVH;
/**
 * Query events for the given subnets
 */
subnets?: IpBlockOVH[];
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * Network Defense DDoS attack vectors
 */
export type NetworkDefenseVectorsEnumOVH = typeof NetworkDefenseVectorsEnumOVH[keyof typeof NetworkDefenseVectorsEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const NetworkDefenseVectorsEnumOVH = {
  CHARGEN: 'CHARGEN',
  DNS: 'DNS',
  DNS_TO_OVH: 'DNS_TO_OVH',
  FRAGMENT: 'FRAGMENT',
  ICMP: 'ICMP',
  IP_NULL: 'IP_NULL',
  NTP: 'NTP',
  OTHER: 'OTHER',
  TCP_ACK: 'TCP_ACK',
  TCP_FIN: 'TCP_FIN',
  TCP_NULL: 'TCP_NULL',
  TCP_PSH: 'TCP_PSH',
  TCP_RST: 'TCP_RST',
  TCP_SYN: 'TCP_SYN',
  UDP: 'UDP',
  VECTOR_TYPE_UNSPECIFIED: 'VECTOR_TYPE_UNSPECIFIED',
} as const;

/**
 * DDoS mitigation traffic statistics
 */
export interface NetworkDefenseVacTrafficResponseDataOVH {
  /** Volume of traffic dropped by the VAC (DDoS protection) */
  readonly dropped?: readonly string[];
  /** Volume of traffic which was not dropped by the VAC (DDoS protection) */
  readonly passed?: readonly string[];
}

/**
 * DDoS mitigation traffic statistics. All arrays have the same length. The Nth item of the dropped or passed arrays matches the Nth timestamp
 */
export interface NetworkDefenseVacTrafficResponseOVH {
  /** Bits per seconds statistics */
  readonly bps?: NetworkDefenseVacTrafficResponseDataOVH;
  /** Packets per seconds statistics */
  readonly pps?: NetworkDefenseVacTrafficResponseDataOVH;
  /** Timestamps of the statistics points */
  readonly timestamps?: readonly string[];
}

/**
 * DDoS mitigation event. It typically starts when the DDoS detection system sends an alert, and the traffic of the subnet is routed through the mitigation system (VAC)
 */
export interface NetworkDefenseVacEventOVH {
  /**
   * End date of the event. It can be null if the event is ongoing.
   * @nullable
   */
  readonly endedAt?: string | null;
  /** Start date of the event */
  readonly startedAt?: string;
  /** IP subnet affected by the event */
  readonly subnet?: IpBlockOVH;
  /** Attack vector */
  readonly vectors?: readonly NetworkDefenseVectorsEnumOVH[];
}

/**
 * List of DDoS mitigation events.
 */
export interface NetworkDefenseVacEventsResponseOVH {
  /**
   * List of events
   * @nullable
   */
  readonly events?: readonly NetworkDefenseVacEventOVH[] | null;
}

/**
 * Representation of a Region
 */
export type NetworkDefenseRegionEnumOVH = typeof NetworkDefenseRegionEnumOVH[keyof typeof NetworkDefenseRegionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const NetworkDefenseRegionEnumOVH = {
  CA: 'CA',
  EU: 'EU',
  US: 'US',
} as const;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

