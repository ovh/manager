/**
 * Generated by orval v7.3.0 🍺
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type DeleteHostingWebServiceNameWebsiteIdParams = {
/**
 * Whether the website path should be emptied or not
 */
deleteFiles: boolean;
};

export type GetHostingWebServiceNameWebsiteParams = {
/**
 * Filter the value of path property
 */
path?: string;
};

export type GetHostingWebServiceNameVcsWebhooksParams = {
/**
 * Filter on hosting path
 */
path: string;
/**
 * Filter on VCS platform
 */
vcs: HostingWebSupportedVcsEnumOVH;
};

export type GetHostingWebServiceNameUserLogsTokenParams = {
/**
 * Specific attached domain to be included in the scope of your token
 */
attachedDomain?: string;
/**
 * Whether to limit the use of the token to the remote IPv4 of API caller
 */
remoteCheck?: boolean;
/**
 * Expiration of your token (in seconds)
 */
ttl?: number;
};

export type PostHostingWebServiceNameUserLoginChangePasswordBody = {
  /** The user's new password */
  password: string;
};

export type PostHostingWebServiceNameUserBody = {
  /** Home directory */
  home: string;
  /** Login use for your new user */
  login: string;
  /** Password */
  password: string;
  /** Ssh state for this user. Default: none */
  sshState?: HostingWebUserSshStateEnumOVH;
};

export type GetHostingWebServiceNameUserParams = {
/**
 * Filter the value of home property (like)
 */
home?: string;
/**
 * Filter the value of login property (like)
 */
login?: string;
};

export type GetHostingWebServiceNameTasksParams = {
/**
 * Filter tasks by function (like)
 */
function?: string;
/**
 * Filter tasks by status (like)
 */
status?: HostingWebTaskStatusEnumOVH;
};

export type GetHostingWebServiceNameStatisticsParams = {
period: HostingWebStatisticsPeriodEnumOVH;
type: HostingWebStatisticsTypeEnumOVH;
};

export type GetHostingWebServiceNameRuntimeAvailableTypesParams = {
/**
 * Specific programming language to filter
 */
language?: string;
};

export type PostHostingWebServiceNameRuntimeBody = {
  /** The client application bootstrap script */
  appBootstrap?: string;
  /** The client application environment */
  appEnv?: HostingWebRuntimeEnvEnumOVH;
  /** The attached domains fqdn to link to this runtime configuration */
  attachedDomains?: string[];
  /** Set if the runtime configuration is the one by default for the hosting */
  isDefault?: boolean;
  /** The custom display name of the runtime configuration */
  name?: string;
  /** The client application public directory */
  publicDir?: string;
  /** The backend type of a runtime configuration */
  type?: HostingWebRuntimeTypeEnumOVH;
};

export type GetHostingWebServiceNameRuntimeParams = {
/**
 * Filter the value of name property (like)
 */
name?: string;
/**
 * Filter the value of type property (=)
 */
type?: HostingWebRuntimeTypeEnumOVH;
};

export type PostHostingWebServiceNameRestoreSnapshotBody = {
  /** The backup you want to restore */
  backup: HostingWebBackupTypeEnumOVH;
};

export type PostHostingWebServiceNameRequestBody = {
  /** Action you want to request */
  action: HostingWebRequestActionEnumOVH;
};

export type PostHostingWebServiceNameOwnLogsIdUserLogsLoginChangePasswordBody = {
  /** The new userLogs password */
  password: string;
};

export type PostHostingWebServiceNameOwnLogsIdUserLogsBody = {
  /** Description field for you */
  description: string;
  /** The userLogs login used to connect to logs.ovh.net */
  login: string;
  /** OwnLogs where this userLogs will be enable. Default : main domain ownlogs */
  ownLogsId?: number;
  /** The new userLogs password */
  password: string;
};

export type GetHostingWebServiceNameOwnLogsIdUserLogsParams = {
/**
 * Filter the value of login property (like)
 */
login?: string;
};

export type GetHostingWebServiceNameOwnLogsParams = {
/**
 * Filter the value of fqdn property (like)
 */
fqdn?: string;
};

export type PostHostingWebServiceNameOvhConfigIdRollbackBody = {
  /** The configuration's id you want to rollback */
  rollbackId: number;
};

export type PostHostingWebServiceNameOvhConfigIdChangeConfigurationBody = {
  /** Container to run this website */
  container?: HostingWebOvhconfigContainerEnumOVH;
  /** Version of engine you want */
  engineName?: HostingWebOvhConfigEngineNameEnumOVH;
  /** Name of engine you want */
  engineVersion?: HostingWebOvhConfigAvailableEngineVersionEnumOVH;
  /** Environment configuration you want */
  environment?: HostingWebOvhConfigEnvironmentEnumOVH;
  /** Configuration you want for http firewall */
  httpFirewall?: HostingWebOvhConfigHttpFirewallEnumOVH;
};

export type GetHostingWebServiceNameOvhConfigParams = {
/**
 * Filter the value of historical property (=)
 */
historical?: boolean;
/**
 * Filter the value of path property (like)
 */
path?: string;
};

export type PostHostingWebServiceNameModuleIdUpgradeBody = {
  /** The ID of the module to upgrade to */
  moduleId: number;
};

export type PostHostingWebServiceNameModuleBody = {
  /** The login for the admin account (may be a standard string or your email) */
  adminName?: string;
  /** The password for the admin account (at least 8 characters) */
  adminPassword?: string;
  /** The dependencies that we have to configure on your module. A dependency can be a standard database (like MySQL or PostgreSQL) or a key-value store (like Redis or Memcached) for example */
  dependencies?: HostingWebModuleDependencyTypeOVH[];
  /** On which domain the module has to be available (it can be a multidomain or a subdomain) - if not set, the module will be available on your serviceName domain */
  domain?: string;
  /** The language to set to your module */
  language?: HostingWebModuleLanguageEnumOVH;
  /** ID of the module you want to install */
  moduleId: number;
  /** Where to install the module, relative to your home directory */
  path?: string;
};

export type PostHostingWebServiceNameLocalSeoLocationIdServiceInfosUpdateBody = {
  /** Renew type */
  renew: ServiceRenewTypeOVH;
};

export type GetHostingWebServiceNameLocalSeoEmailAvailabilityParams = {
/**
 * The email address to check
 */
email: string;
};

export type GetHostingWebServiceNameLocalSeoAccountParams = {
/**
 * Filter the value of email property (like)
 */
email?: string;
};

export type GetHostingWebServiceNameIndyParams = {
/**
 * Filter the value of login property (like)
 */
login?: string;
};

export type GetHostingWebServiceNameFreedomParams = {
/**
 * Filter the freedom status (=)
 */
status?: HostingWebFreedomStatusEnumOVH;
};

export type PostHostingWebServiceNameExtraSqlPersoNameServiceInfosUpdateBody = {
  /** Renew type */
  renew: ServiceRenewTypeOVH;
};

export type GetHostingWebServiceNameEnvVarParams = {
/**
 * Filter the value of type property (=)
 */
type?: HostingWebEnvVarTypeEnumOVH;
};

export type PostHostingWebServiceNameEmailRequestBody = {
  /** Action you want to request */
  action: HostingWebMailActionEnumOVH;
};

export type GetHostingWebServiceNameEmailBouncesParams = {
/**
 * Maximum bounces limit ( default : 20 / max : 100 )
 */
limit: number;
};

export type GetHostingWebServiceNameDumpParams = {
/**
 * Filter the value of creationDate property (>=)
 */
'creationDate.from'?: string;
/**
 * Filter the value of creationDate property (<=)
 */
'creationDate.to'?: string;
/**
 * Filter the value of databaseName property (=)
 */
databaseName?: string;
/**
 * Filter the value of deletionDate property (>=)
 */
'deletionDate.from'?: string;
/**
 * Filter the value of deletionDate property (<=)
 */
'deletionDate.to'?: string;
/**
 * Filter the value of orphan property (=)
 */
orphan?: boolean;
};

export type GetHostingWebServiceNameDatabaseAvailableVersionParams = {
/**
 * Type of the database
 */
type: HostingWebDatabaseDatabaseTypeEnumOVH;
};

export type GetHostingWebServiceNameDatabaseNameStatisticsParams = {
/**
 * Available periods for statistics
 */
period: HostingWebStatisticsPeriodEnumOVH;
/**
 * Types of statistics available for the database
 */
type: HostingWebDatabaseStatisticsTypeEnumOVH;
};

export type PostHostingWebServiceNameDatabaseNameRestoreBody = {
  /** The date you want to dump */
  date: HostingWebDatabaseDumpDateEnumOVH;
  /** Send an email when the restore will be done? Default: false */
  sendEmail?: boolean;
};

export type PostHostingWebServiceNameDatabaseNameRequestBody = {
  /** Action you want to request */
  action: HostingWebDatabaseRequestActionEnumOVH;
};

export type PostHostingWebServiceNameDatabaseNameImportBody = {
  /** Documents ID of the dump from /me/documents */
  documentId: string;
  /** If database will be flushed before importing the dump. Default: false */
  flushDatabase?: boolean;
  /** Send an email when the import will be done? Default: false */
  sendEmail?: boolean;
};

export type PostHostingWebServiceNameDatabaseNameDumpBody = {
  /** The date you want to dump */
  date: HostingWebDatabaseDumpDateEnumOVH;
  /** Send an email when dump will be available? Default: true */
  sendEmail?: boolean;
};

export type GetHostingWebServiceNameDatabaseNameDumpParams = {
/**
 * Filter the value of creationDate property (>=)
 */
'creationDate.from'?: string;
/**
 * Filter the value of creationDate property (<=)
 */
'creationDate.to'?: string;
/**
 * Filter the value of deletionDate property (>=)
 */
'deletionDate.from'?: string;
/**
 * Filter the value of deletionDate property (<=)
 */
'deletionDate.to'?: string;
/**
 * Filter the value of type property (=)
 */
type?: HostingWebDatabaseDumpDateEnumOVH;
};

export type PostHostingWebServiceNameDatabaseNameCopyRestoreBody = {
  /** UUID of the copy to restore */
  copyId: string;
  /** If database will be flushed before importing the dump. Default: false */
  flushDatabase?: boolean;
};

export type PostHostingWebServiceNameDatabaseNameChangePasswordBody = {
  /** The new database password */
  password: string;
};

export type PostHostingWebServiceNameDatabaseBody = {
  /** Type of your database */
  capabilitie: HostingWebDatabaseDatabaseCapabilitiesTypeEnumOVH;
  /** Database password */
  password?: string;
  /** Quota assign to your database. Only for extraSql */
  quota?: HostingWebDatabaseExtraSqlQuotaEnumOVH;
  /** Type you want for your database */
  type: HostingWebDatabaseDatabaseCreationTypeEnumOVH;
  /** Database user name. Must begin with your hosting login and must be in lower case */
  user: string;
  /** Version you want for your database following the type */
  version?: HostingWebDatabaseVersionEnumOVH;
};

export type GetHostingWebServiceNameDatabaseParams = {
/**
 * Filter the value of mode property (=)
 */
mode?: HostingWebDatabaseModeEnumOVH;
/**
 * Filter the value of name property (like)
 */
name?: string;
/**
 * Filter the value of server property (like)
 */
server?: string;
/**
 * Filter the value of type property (=)
 */
type?: HostingWebDatabaseDatabaseTypeEnumOVH;
/**
 * Filter the value of user property (like)
 */
user?: string;
};

export type GetHostingWebServiceNameCronParams = {
/**
 * Filter the value of command property (like)
 */
command?: string;
/**
 * Filter the value of description property (like)
 */
description?: string;
/**
 * Filter the value of email property (like)
 */
email?: string;
/**
 * Filter the value of language property (=)
 */
language?: HostingWebLanguagesEnumOVH;
};

export type PostHostingWebServiceNameCdnServiceInfosUpdateBody = {
  /** Renew type */
  renew: ServiceRenewTypeOVH;
};

export type PostHostingWebServiceNameCdnDomainDomainNamePurgeParams = {
/**
 * Purge pattern
 */
pattern?: string;
/**
 * Purge Pattern Type (default is regex)
 */
patternType?: CdnPurgeTypeEnumOVH;
};

export type GetHostingWebServiceNameCdnDomainDomainNameLogsParams = {
/**
 * Logs date (default is yesterday)
 */
date?: string;
};

export type GetHostingWebServiceNameBoostHistoryParams = {
/**
 * Filter the value of date property (=)
 */
date?: string;
};

export type GetHostingWebServiceNameAvailableConfigurationsParams = {
/**
 * Filter on language name
 */
language?: HostingWebConfigurationLanguageEnumOVH;
};

export type DeleteHostingWebServiceNameAttachedDomainDomainParams = {
/**
 * If set to true, DNS zone will not be updated by the operation
 */
bypassDNSConfiguration?: boolean;
};

export type GetHostingWebServiceNameAttachedDomainParams = {
/**
 * Filter the value of domain property (like)
 */
domain?: string;
/**
 * Filter the value of path property (like)
 */
path?: string;
};

export type GetHostingWebOfferCapabilitiesParams = {
/**
 * Describe offer capabilities
 */
offer: HostingWebOfferCapabilitiesEnumOVH;
};

export type GetHostingWebModuleListParams = {
/**
 * Filter the value of active property (=)
 */
active?: boolean;
/**
 * Filter the value of branch property (=)
 */
branch?: HostingWebModuleBranchEnumOVH;
/**
 * Filter the value of latest property (=)
 */
latest?: boolean;
};

export type GetHostingWebLocalSeoVisibilityCheckResultParams = {
/**
 * Get the result only for one directory
 */
directory: string;
/**
 * Id of the check
 */
id: number;
/**
 * Token received when requesting the check
 */
token: string;
};

export type PostHostingWebLocalSeoVisibilityCheckBody = {
  /** Country of the location */
  country: HostingWebLocalSeoLocationCountryEnumOVH;
  /** Name of the location */
  name: string;
  /** Address line 1 of the location */
  street: string;
  /** Zipcode of the location */
  zip: string;
};

export type GetHostingWebLocalSeoEmailAvailabilityParams = {
/**
 * The email address to check
 */
email: string;
};

export type GetHostingWebLocalSeoDirectoriesListParams = {
/**
 * Country of the location
 */
country: HostingWebLocalSeoLocationCountryEnumOVH;
/**
 * Local SEO offer
 */
offer: HostingWebLocalSeoLocationOfferEnumOVH;
};

export type GetHostingWebAvailableOfferParams = {
/**
 * Domain you want to add or upgrade a hosting
 */
domain: string;
};

export type GetHostingWebAttachedDomainParams = {
/**
 * Domain used into web hosting attached domains
 */
domain: string;
};

export type GetHostingWebParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Service change contact payload
 */
export interface ServicesChangeContactOVH {
  /** The contact to set as admin contact */
  contactAdmin?: string;
  /** The contact to set as billing contact */
  contactBilling?: string;
  /** The contact to set as tech contact */
  contactTech?: string;
}

/**
 * Way of handling the renew
 * @nullable
 */
export type ServicesServiceOVHRenew = ServiceRenewTypeOVH | null;

/**
 * All reasons you can provide for a service termination
 */
export type ServiceTerminationReasonEnumOVH = typeof ServiceTerminationReasonEnumOVH[keyof typeof ServiceTerminationReasonEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationReasonEnumOVH = {
  FEATURES_DONT_SUIT_ME: 'FEATURES_DONT_SUIT_ME',
  LACK_OF_PERFORMANCES: 'LACK_OF_PERFORMANCES',
  MIGRATED_TO_ANOTHER_OVH_PRODUCT: 'MIGRATED_TO_ANOTHER_OVH_PRODUCT',
  MIGRATED_TO_COMPETITOR: 'MIGRATED_TO_COMPETITOR',
  NOT_ENOUGH_RECOGNITION: 'NOT_ENOUGH_RECOGNITION',
  NOT_NEEDED_ANYMORE: 'NOT_NEEDED_ANYMORE',
  NOT_RELIABLE: 'NOT_RELIABLE',
  NO_ANSWER: 'NO_ANSWER',
  OTHER: 'OTHER',
  PRODUCT_DIMENSION_DONT_SUIT_ME: 'PRODUCT_DIMENSION_DONT_SUIT_ME',
  PRODUCT_TOOLS_DONT_SUIT_ME: 'PRODUCT_TOOLS_DONT_SUIT_ME',
  TOO_EXPENSIVE: 'TOO_EXPENSIVE',
  TOO_HARD_TO_USE: 'TOO_HARD_TO_USE',
  UNSATIFIED_BY_CUSTOMER_SUPPORT: 'UNSATIFIED_BY_CUSTOMER_SUPPORT',
} as const;

/**
 * All future uses you can provide for a service termination
 */
export type ServiceTerminationFutureUseEnumOVH = typeof ServiceTerminationFutureUseEnumOVH[keyof typeof ServiceTerminationFutureUseEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationFutureUseEnumOVH = {
  NOT_REPLACING_SERVICE: 'NOT_REPLACING_SERVICE',
  OTHER: 'OTHER',
  SUBSCRIBE_AN_OTHER_SERVICE: 'SUBSCRIBE_AN_OTHER_SERVICE',
  SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR',
  SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR',
} as const;

/**
 * Service confirm termination payload
 */
export interface ServicesConfirmTerminationOVH {
  /** Commentary about your termination request */
  commentary?: string;
  /** All future uses you can provide for a service termination */
  futureUse?: ServiceTerminationFutureUseEnumOVH;
  /** All reasons you can provide for a service termination */
  reason?: ServiceTerminationReasonEnumOVH;
  /** The termination token sent by email to the admin contact */
  token: string;
}

/**
 * service.StateEnum
 */
export type ServiceStateEnumOVH = typeof ServiceStateEnumOVH[keyof typeof ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceStateEnumOVH = {
  autorenewInProgress: 'autorenewInProgress',
  expired: 'expired',
  inCreation: 'inCreation',
  ok: 'ok',
  pendingDebt: 'pendingDebt',
  unPaid: 'unPaid',
} as const;

/**
 * Detailed renewal type of a service
 */
export type ServiceRenewalTypeEnumOVH = typeof ServiceRenewalTypeEnumOVH[keyof typeof ServiceRenewalTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewalTypeEnumOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Details about a Service
 */
export interface ServicesServiceOVH {
  /** Indicates that the service can be set up to be deleted at expiration */
  readonly canDeleteAtExpiration?: boolean;
  readonly contactAdmin?: string;
  readonly contactBilling?: string;
  readonly contactTech?: string;
  readonly creation?: string;
  readonly domain?: string;
  /** @nullable */
  readonly engagedUpTo?: string | null;
  readonly expiration?: string;
  /**
   * All the possible renew period of your service in month
   * @nullable
   */
  readonly possibleRenewPeriod?: readonly number[] | null;
  /**
   * Way of handling the renew
   * @nullable
   */
  renew?: ServicesServiceOVHRenew;
  readonly renewalType?: ServiceRenewalTypeEnumOVH;
  readonly serviceId?: number;
  readonly status?: ServiceStateEnumOVH;
}

/**
 * Map a possible renew for a specific service
 */
export interface ServiceRenewTypeOVH {
  /** The service is automatically renewed */
  automatic?: boolean;
  /** The service will be deleted at expiration */
  deleteAtExpiration?: boolean;
  /** The service forced to be renewed */
  forced?: boolean;
  /**
   * The service needs to be manually renewed and paid
   * @nullable
   */
  manualPayment?: boolean | null;
  /**
   * period of renew in month
   * @nullable
   */
  period?: number | null;
}

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * Currency code
 */
export type OrderCurrencyCodeEnumOVH = typeof OrderCurrencyCodeEnumOVH[keyof typeof OrderCurrencyCodeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OrderCurrencyCodeEnumOVH = {
  AUD: 'AUD',
  CAD: 'CAD',
  CZK: 'CZK',
  EUR: 'EUR',
  GBP: 'GBP',
  INR: 'INR',
  LTL: 'LTL',
  MAD: 'MAD',
  'N/A': 'N/A',
  PLN: 'PLN',
  SGD: 'SGD',
  TND: 'TND',
  USD: 'USD',
  XOF: 'XOF',
  points: 'points',
} as const;

/**
 * Price with its currency and textual representation
 */
export interface OrderPriceOVH {
  /** Currency code */
  readonly currencyCode?: OrderCurrencyCodeEnumOVH;
  /**
   * Price in microcents
   * @nullable
   */
  readonly priceInUcents?: number | null;
  /** Textual representation */
  readonly text?: string;
  /** The effective price */
  readonly value?: number;
}

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Website deployment status
 */
export type HostingWebWebsiteDeploymentStatusEnumOVH = typeof HostingWebWebsiteDeploymentStatusEnumOVH[keyof typeof HostingWebWebsiteDeploymentStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebWebsiteDeploymentStatusEnumOVH = {
  doing: 'doing',
  failed: 'failed',
  successful: 'successful',
} as const;

/**
 * Message from logs of a website deployment
 */
export interface HostingWebWebsiteDeploymentLogsMessageOVH {
  /** Date of the message */
  readonly date?: string;
  /** Content of the message */
  readonly message?: string;
}

/**
 * Information to update on a website
 */
export interface HostingWebWebsiteUpdateOVH {
  /**
   * Branch of the repository containing the website source code to deploy
   * @nullable
   */
  vcsBranch?: string | null;
}

/**
 * Website status
 */
export type HostingWebWebsiteStatusEnumOVH = typeof HostingWebWebsiteStatusEnumOVH[keyof typeof HostingWebWebsiteStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebWebsiteStatusEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  deploying: 'deploying',
  error: 'error',
  initialError: 'initialError',
} as const;

/**
 * A website domain
 */
export interface HostingWebWebsiteDomainOVH {
  /** If the CDN is currently active */
  readonly cdn?: boolean;
  /** FQDN of the website domain */
  readonly fqdn?: string;
  /** If the SSL is currently active */
  readonly ssl?: boolean;
}

/**
 * Information needed to request deployment of a website
 */
export interface HostingWebWebsiteDeploymentRequestOVH {
  /** Whether a reset was requested before deploying */
  reset?: boolean;
}

/**
 * A website deployment
 */
export interface HostingWebWebsiteDeploymentOVH {
  /** Date of the deployment */
  readonly date?: string;
  /** Deployment numeric identifier */
  readonly id?: number;
  /** Whether a reset was requested before deploying */
  readonly reset?: boolean;
  /** Source which triggered the deployment */
  readonly source?: string;
  /** Current status of the deployment */
  readonly status?: HostingWebWebsiteDeploymentStatusEnumOVH;
  /** Which branch of the repository is deployed */
  readonly vcsBranch?: string;
  /**
   * Identifier of the last commit after deployment
   * @nullable
   */
  readonly vcsCommitId?: string | null;
  /**
   * Message of the last commit after deployment
   * @nullable
   */
  readonly vcsCommitMessage?: string | null;
  /** Website numeric identifier */
  readonly websiteId?: number;
}

/**
 * Information needed to create a new website
 */
export interface HostingWebWebsiteCreationRequestOVH {
  /** Relative path on the hosting filesystem the website will be deployed into */
  path: string;
  /** Branch of the repository containing the website source code to deploy */
  vcsBranch: string;
  /** Clone URL of the repository containing the website source code to deploy */
  vcsUrl: string;
}

/**
 * UserLogs status
 */
export type HostingWebUserLogsStatusEnumOVH = typeof HostingWebUserLogsStatusEnumOVH[keyof typeof HostingWebUserLogsStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebUserLogsStatusEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  updating: 'updating',
} as const;

/**
 * Hosting users logs
 */
export interface HostingWebUserLogsOVH {
  /** Date of the user creation */
  readonly creationDate?: string;
  /**
   * Description field for you
   * @nullable
   */
  description?: string | null;
  /** The userLogs login used to connect to logs.ovh.net */
  readonly login?: string;
  /**
   * OwnLogs where this userLogs will be enable. Default : main domain ownlogs
   * @nullable
   */
  readonly ownLogsId?: number | null;
  /** Status of this userLogs */
  readonly status?: HostingWebUserLogsStatusEnumOVH;
  /**
   * The task ID working on this userLogs
   * @nullable
   */
  readonly taskId?: number | null;
}

/**
 * User status
 */
export type HostingWebUserStatusEnumOVH = typeof HostingWebUserStatusEnumOVH[keyof typeof HostingWebUserStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebUserStatusEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  updating: 'updating',
} as const;

/**
 * Account's state
 */
export type HostingWebUserStateEnumOVH = typeof HostingWebUserStateEnumOVH[keyof typeof HostingWebUserStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebUserStateEnumOVH = {
  off: 'off',
  rw: 'rw',
} as const;

/**
 * Account's ssh state
 */
export type HostingWebUserSshStateEnumOVH = typeof HostingWebUserSshStateEnumOVH[keyof typeof HostingWebUserSshStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebUserSshStateEnumOVH = {
  active: 'active',
  none: 'none',
  sftponly: 'sftponly',
} as const;

/**
 * User, url and port of a service
 */
export interface HostingWebUserCredentialsOVH {
  /** Port to use to access to the service */
  port?: number;
  /** Url to contact the service */
  url?: string;
  /** Login to authentificate you on the service */
  user?: string;
}

/**
 * Different credentials to manage your service
 */
export interface HostingWebUserServiceCredentialsOVH {
  /** Credentials to manage files by ftp */
  ftp?: HostingWebUserCredentialsOVH;
  /** Credentials to manage webhosting by ssh */
  ssh?: HostingWebUserCredentialsOVH;
}

/**
 * Hosting users
 */
export interface HostingWebUserOVH {
  /** Home directory */
  home?: string;
  /** Is this user primary */
  readonly isPrimaryAccount?: boolean;
  /** Login used to connect on FTP and SSH */
  readonly login?: string;
  /** Credentials to manage your webhosting */
  readonly serviceManagementCredentials?: HostingWebUserServiceCredentialsOVH;
  /** User ssh status */
  sshState?: HostingWebUserSshStateEnumOVH;
  /** User state */
  state?: HostingWebUserStateEnumOVH;
  /** The user status */
  readonly status?: HostingWebUserStatusEnumOVH;
  /**
   * The task ID working on this user
   * @nullable
   */
  readonly taskId?: number | null;
}

/**
 * Task status enum
 */
export type HostingWebTaskStatusEnumOVH = typeof HostingWebTaskStatusEnumOVH[keyof typeof HostingWebTaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebTaskStatusEnumOVH = {
  cancelled: 'cancelled',
  doing: 'doing',
  done: 'done',
  init: 'init',
  todo: 'todo',
} as const;

/**
 * Object type enum
 */
export type HostingWebTaskObjectTypeEnumOVH = typeof HostingWebTaskObjectTypeEnumOVH[keyof typeof HostingWebTaskObjectTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebTaskObjectTypeEnumOVH = {
  Abuse: 'Abuse',
  AttachedDomain: 'AttachedDomain',
  BlockedIp: 'BlockedIp',
  Cdn: 'Cdn',
  Cron: 'Cron',
  Database: 'Database',
  Deployment: 'Deployment',
  Dump: 'Dump',
  EnvVar: 'EnvVar',
  Filerz: 'Filerz',
  Hostedssl: 'Hostedssl',
  Hosting: 'Hosting',
  Indy: 'Indy',
  Infra: 'Infra',
  Minor: 'Minor',
  Module: 'Module',
  Other: 'Other',
  OvhConfig: 'OvhConfig',
  OvhOrg: 'OvhOrg',
  OwnLogs: 'OwnLogs',
  Runtime: 'Runtime',
  Scan: 'Scan',
  Sqlperso: 'Sqlperso',
  User: 'User',
  UserLogs: 'UserLogs',
  Web: 'Web',
  Webd: 'Webd',
  Website: 'Website',
} as const;

/**
 * Task function enum
 */
export type HostingWebTaskFunctionEnumOVH = typeof HostingWebTaskFunctionEnumOVH[keyof typeof HostingWebTaskFunctionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebTaskFunctionEnumOVH = {
  'abuse/close': 'abuse/close',
  'abuse/create': 'abuse/create',
  'abuse/create/web': 'abuse/create/web',
  'abuse/delete/web': 'abuse/delete/web',
  'abuse/update': 'abuse/update',
  'abuse/update/web': 'abuse/update/web',
  'agora/AnycastUpdateReference': 'agora/AnycastUpdateReference',
  'agora/DnsAddonUpdateReference': 'agora/DnsAddonUpdateReference',
  'agora/DnsUpdateReference': 'agora/DnsUpdateReference',
  'agora/updateReference': 'agora/updateReference',
  'attachedDomain/create': 'attachedDomain/create',
  'attachedDomain/delete': 'attachedDomain/delete',
  'attachedDomain/restart': 'attachedDomain/restart',
  'attachedDomain/update': 'attachedDomain/update',
  'cdn/delete': 'cdn/delete',
  'cdn/domain/create': 'cdn/domain/create',
  'cdn/domain/delete': 'cdn/domain/delete',
  'cdn/domain/flush': 'cdn/domain/flush',
  'cdn/domain/suspend': 'cdn/domain/suspend',
  'cdn/flush': 'cdn/flush',
  'cdn/install': 'cdn/install',
  'cdn/reopen': 'cdn/reopen',
  'cdn/suspend': 'cdn/suspend',
  'cdn/upgrade': 'cdn/upgrade',
  'cluster/setDevelopment': 'cluster/setDevelopment',
  'cluster/setTesting': 'cluster/setTesting',
  'cluster/ssl/deploy': 'cluster/ssl/deploy',
  'cluster/ssl/renew': 'cluster/ssl/renew',
  'cluster/test/attachedDomains': 'cluster/test/attachedDomains',
  'cluster/test/cdn': 'cluster/test/cdn',
  'cluster/test/crons': 'cluster/test/crons',
  'cluster/test/emails': 'cluster/test/emails',
  'cluster/test/fileBrowser': 'cluster/test/fileBrowser',
  'cluster/test/hostedssl': 'cluster/test/hostedssl',
  'cluster/test/modules': 'cluster/test/modules',
  'cluster/test/ovhConfig': 'cluster/test/ovhConfig',
  'cluster/test/userLogs': 'cluster/test/userLogs',
  'cluster/test/users': 'cluster/test/users',
  'configuration/create': 'configuration/create',
  'configuration/delete': 'configuration/delete',
  'configuration/update': 'configuration/update',
  'cron/create': 'cron/create',
  'cron/delete': 'cron/delete',
  'cron/update': 'cron/update',
  'database/changePassword': 'database/changePassword',
  'database/changePasswordTest': 'database/changePasswordTest',
  'database/changeRight': 'database/changeRight',
  'database/changeRightTest': 'database/changeRightTest',
  'database/checkQuotaNow': 'database/checkQuotaNow',
  'database/copy': 'database/copy',
  'database/copyRestore': 'database/copyRestore',
  'database/create': 'database/create',
  'database/delete': 'database/delete',
  'database/deleteTest': 'database/deleteTest',
  'database/dumpAnyDay': 'database/dumpAnyDay',
  'database/hostUpdate': 'database/hostUpdate',
  'database/import': 'database/import',
  'database/optimize': 'database/optimize',
  'database/restore': 'database/restore',
  'dedicatedIp/delete': 'dedicatedIp/delete',
  'dedicatedIp/reopen': 'dedicatedIp/reopen',
  'dedicatedIp/suspend': 'dedicatedIp/suspend',
  'depc/push': 'depc/push',
  'dump/create': 'dump/create',
  'dump/delete': 'dump/delete',
  'envVar/create': 'envVar/create',
  'envVar/delete': 'envVar/delete',
  'envVar/update': 'envVar/update',
  'envVar/upgrade': 'envVar/upgrade',
  'eventbus/push': 'eventbus/push',
  'filerz/customerMonitoring': 'filerz/customerMonitoring',
  'filerz/delete': 'filerz/delete',
  'hostedssl/assignFreeKey': 'hostedssl/assignFreeKey',
  'hostedssl/cdn/update': 'hostedssl/cdn/update',
  'hostedssl/create': 'hostedssl/create',
  'hostedssl/delete': 'hostedssl/delete',
  'hostedssl/globalsign/delete': 'hostedssl/globalsign/delete',
  'hostedssl/htaccess/install': 'hostedssl/htaccess/install',
  'hostedssl/import': 'hostedssl/import',
  'hostedssl/install': 'hostedssl/install',
  'hostedssl/install/sectigo': 'hostedssl/install/sectigo',
  'hostedssl/iplb/reload': 'hostedssl/iplb/reload',
  'hostedssl/push': 'hostedssl/push',
  'hostedssl/pushDcvFile': 'hostedssl/pushDcvFile',
  'hostedssl/regenerate': 'hostedssl/regenerate',
  'hostedssl/repush': 'hostedssl/repush',
  'hosting/activate/privateDatabase': 'hosting/activate/privateDatabase',
  'hosting/basculement': 'hosting/basculement',
  'hosting/changeOffer/cloud': 'hosting/changeOffer/cloud',
  'hosting/changeOffer/shared': 'hosting/changeOffer/shared',
  'hosting/changement': 'hosting/changement',
  'hosting/delete': 'hosting/delete',
  'hosting/delete_start1m': 'hosting/delete_start1m',
  'hosting/install': 'hosting/install',
  'hosting/reopen': 'hosting/reopen',
  'hosting/suspend': 'hosting/suspend',
  'indy/reopen': 'indy/reopen',
  'indy/suspend': 'indy/suspend',
  'infra/certificate/deploy': 'infra/certificate/deploy',
  'infra/certificate/generate': 'infra/certificate/generate',
  'infra/certificate/install': 'infra/certificate/install',
  'infra/sharedsql/upgrade': 'infra/sharedsql/upgrade',
  'infra/ssl/deploy': 'infra/ssl/deploy',
  'infra/ssl/renew': 'infra/ssl/renew',
  'ip/move': 'ip/move',
  'ip/park': 'ip/park',
  'localSeoAccount/create': 'localSeoAccount/create',
  'localSeoAccount/delete': 'localSeoAccount/delete',
  'localSeoLocation/delete': 'localSeoLocation/delete',
  'localSeoLocation/install': 'localSeoLocation/install',
  'localSeoLocation/reopen': 'localSeoLocation/reopen',
  'localSeoLocation/suspend': 'localSeoLocation/suspend',
  'localSeoVisibilityCheck/process': 'localSeoVisibilityCheck/process',
  'mailsout/checkMailsoutQueue': 'mailsout/checkMailsoutQueue',
  'mailsout/flushMailsoutQueue': 'mailsout/flushMailsoutQueue',
  'mailsout/updateUserInRedis': 'mailsout/updateUserInRedis',
  'migration/copyUsers': 'migration/copyUsers',
  'migration/dday/filerz': 'migration/dday/filerz',
  'migration/dday/listPrivateDatabases': 'migration/dday/listPrivateDatabases',
  'migration/dday/lot': 'migration/dday/lot',
  'migration/dday/updateInfra/crons': 'migration/dday/updateInfra/crons',
  'migration/dday/updateInfra/dedicated': 'migration/dday/updateInfra/dedicated',
  'migration/dday/updateInfra/migratedFqdn': 'migration/dday/updateInfra/migratedFqdn',
  'migration/updateOrt': 'migration/updateOrt',
  'module/changePassword': 'module/changePassword',
  'module/create': 'module/create',
  'module/delete': 'module/delete',
  'module/install': 'module/install',
  'monitoring/remotewrite': 'monitoring/remotewrite',
  'notification/send': 'notification/send',
  'ovhConfig/refresh': 'ovhConfig/refresh',
  'ovhConfig/rollback': 'ovhConfig/rollback',
  'ovhConfig/update': 'ovhConfig/update',
  'ovhOrg/delete': 'ovhOrg/delete',
  'ownLogs/create': 'ownLogs/create',
  'ownLogs/delete': 'ownLogs/delete',
  'provisionning/cdn': 'provisionning/cdn',
  'provisionning/cluster': 'provisionning/cluster',
  'provisionning/filerz': 'provisionning/filerz',
  'provisionning/filerz_log': 'provisionning/filerz_log',
  'provisionning/hosting': 'provisionning/hosting',
  'provisionning/ipfo': 'provisionning/ipfo',
  'provisionning/ipifo': 'provisionning/ipifo',
  'provisionning/iplb': 'provisionning/iplb',
  'provisionning/privatesql': 'provisionning/privatesql',
  'provisionning/sharedsql': 'provisionning/sharedsql',
  'provisionning/ssl': 'provisionning/ssl',
  'provisionning/web': 'provisionning/web',
  'provisionning/webapp': 'provisionning/webapp',
  'runtime/create': 'runtime/create',
  'runtime/delete': 'runtime/delete',
  'runtime/setDefault': 'runtime/setDefault',
  'runtime/update': 'runtime/update',
  'scan/create': 'scan/create',
  'sqlperso/delete': 'sqlperso/delete',
  'sqlperso/install': 'sqlperso/install',
  'sqlperso/reopen': 'sqlperso/reopen',
  'sqlperso/suspend': 'sqlperso/suspend',
  'synchronizeDepc/attachedDomain': 'synchronizeDepc/attachedDomain',
  'synchronizeDepc/cluster': 'synchronizeDepc/cluster',
  'synchronizeDepc/database': 'synchronizeDepc/database',
  'synchronizeDepc/filer': 'synchronizeDepc/filer',
  'synchronizeDepc/offer': 'synchronizeDepc/offer',
  'synchronizeDepc/webd': 'synchronizeDepc/webd',
  'test/migration': 'test/migration',
  'user/changePassword': 'user/changePassword',
  'user/create': 'user/create',
  'user/delete': 'user/delete',
  'user/update': 'user/update',
  'userLogs/changePassword': 'userLogs/changePassword',
  'userLogs/create': 'userLogs/create',
  'userLogs/delete': 'userLogs/delete',
  'uster/setTesting': 'uster/setTesting',
  'web/changeDns': 'web/changeDns',
  'web/changeFilerz': 'web/changeFilerz',
  'web/changeFilerzWithCallback': 'web/changeFilerzWithCallback',
  'web/changeJailState': 'web/changeJailState',
  'web/changeOutState': 'web/changeOutState',
  'web/changeState': 'web/changeState',
  'web/changeWebState': 'web/changeWebState',
  'web/checkQuotaNow': 'web/checkQuotaNow',
  'web/create': 'web/create',
  'web/delete': 'web/delete',
  'web/deleteUser': 'web/deleteUser',
  'web/restoreSnapshot': 'web/restoreSnapshot',
  webProvisionning: 'webProvisionning',
  'webd/changeSlots': 'webd/changeSlots',
  'website/create': 'website/create',
  'website/delete': 'website/delete',
  'website/deploy': 'website/deploy',
} as const;

/**
 * Task object type
 * @nullable
 */
export type HostingWebTaskOVHObjectType = HostingWebTaskObjectTypeEnumOVH | null;

/**
 * Tasks
 */
export interface HostingWebTaskOVH {
  /**
   * Completion date
   * @nullable
   */
  readonly doneDate?: string | null;
  /** Function name */
  readonly function?: string;
  /** the id of the task */
  readonly id?: number;
  /**
   * last update
   * @nullable
   */
  readonly lastUpdate?: string | null;
  /**
   * Task related object ID
   * @nullable
   */
  readonly objectId?: string | null;
  /**
   * Task object type
   * @nullable
   */
  readonly objectType?: HostingWebTaskOVHObjectType;
  /** Task Creation date */
  readonly startDate?: string;
  /** Task status */
  readonly status?: HostingWebTaskStatusEnumOVH;
}

/**
 * Hostedssl Report
 */
export interface HostingWebSslReportOVH {
  /** "Certificate signing request" test status done by certification authority */
  readonly certificateSigningRequestStatus?: HostingWebHostedsslReportValueEnumOVH;
  /** "Domain control validation" test status done by certification authority */
  readonly domainControlValidationStatus?: HostingWebHostedsslReportValueEnumOVH;
  /** Applicant's legal status obtained or verified directly with registration agency */
  readonly organizationValidationStatus?: HostingWebHostedsslReportValueEnumOVH;
  /** Approval verified through a phone call to the contract signer */
  readonly phoneCallApprovalStatus?: HostingWebHostedsslReportValueEnumOVH;
  /** The order ID from given hostedssl provider */
  readonly providerOrderId?: string;
  /** Terms and conditions agreements acceptance */
  readonly termsAndConditionsAcceptanceStatus?: HostingWebHostedsslReportValueEnumOVH;
  /** Trade name verified directly with registration agency or through a verified third party */
  readonly tradeNameVerificationStatus?: HostingWebHostedsslReportValueEnumOVH;
}

/**
 * Hosted SSL report
 */
export interface HostingWebSslReportOVH {
  /** "Certificate signing request" test status done by certification authority */
  readonly certificateSigningRequestStatus?: HostingWebHostedsslReportStatusEnumOVH;
  /** "Domain control validation" test status done by certification authority */
  readonly domainControlValidationStatus?: HostingWebHostedsslReportStatusEnumOVH;
  /** Applicant's legal status obtained or verified directly with registration agency */
  readonly organizationValidationStatus?: HostingWebHostedsslReportStatusEnumOVH;
  /** Approval verified through a phone call to the contract signer */
  readonly phoneCallApprovalStatus?: HostingWebHostedsslReportStatusEnumOVH;
  /** The order ID from given hostedssl provider */
  readonly providerOrderId?: string;
  /** Terms and conditions agreements acceptance */
  readonly termsAndConditionsAcceptanceStatus?: HostingWebHostedsslReportStatusEnumOVH;
  /** Trade name verified directly with registration agency or through a verified third party */
  readonly tradeNameVerificationStatus?: HostingWebHostedsslReportStatusEnumOVH;
}

/**
 * Hostedssl
 */
export interface HostingWebSslOVH {
  /** If the hostedssl is currently bound to a report */
  readonly isReportable?: boolean;
  /** Provider of the HostedSsl */
  readonly provider?: string;
  /** Regenerable flag */
  readonly regenerable?: boolean;
  /** Status of the HostedSsl */
  readonly status?: HostingWebHostedsslStatusEnumOVH;
  /**
   * The task ID working on this HostedSsl
   * @nullable
   */
  readonly taskId?: number | null;
  /** Type of the HostedSsl */
  readonly type?: string;
}

/**
 * Runtime backend type enum
 */
export type HostingWebRuntimeTypeEnumOVH = typeof HostingWebRuntimeTypeEnumOVH[keyof typeof HostingWebRuntimeTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebRuntimeTypeEnumOVH = {
  'nodejs-10': 'nodejs-10',
  'nodejs-11': 'nodejs-11',
  'nodejs-12': 'nodejs-12',
  'nodejs-14': 'nodejs-14',
  'nodejs-8': 'nodejs-8',
  'nodejs-9': 'nodejs-9',
  'phpfpm-56': 'phpfpm-5.6',
  'phpfpm-70': 'phpfpm-7.0',
  'phpfpm-71': 'phpfpm-7.1',
  'phpfpm-72': 'phpfpm-7.2',
  'phpfpm-73': 'phpfpm-7.3',
  'phpfpm-74': 'phpfpm-7.4',
  'phpfpm-80': 'phpfpm-8.0',
  'python-2': 'python-2',
  'python-3': 'python-3',
  'ruby-26': 'ruby-2.6',
} as const;

/**
 * Runtime state enum
 */
export type HostingWebRuntimeStateEnumOVH = typeof HostingWebRuntimeStateEnumOVH[keyof typeof HostingWebRuntimeStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebRuntimeStateEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  updating: 'updating',
} as const;

/**
 * Runtime env enum
 */
export type HostingWebRuntimeEnvEnumOVH = typeof HostingWebRuntimeEnvEnumOVH[keyof typeof HostingWebRuntimeEnvEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebRuntimeEnvEnumOVH = {
  development: 'development',
  production: 'production',
} as const;

/**
 * The runtime configuration of an attached domain for cloud web offer
 */
export interface HostingWebRuntimeOVH {
  /**
   * The client application bootstrap script
   * @nullable
   */
  appBootstrap?: string | null;
  /** The client application environment */
  appEnv?: HostingWebRuntimeEnvEnumOVH;
  /** The creation date of the runtime configuration */
  readonly creationDate?: string;
  /** The runtime configuration ID */
  readonly id?: number;
  /** Is the runtime configuration is the one by default for the hosting */
  isDefault?: boolean;
  /** Return if the runtime configuration can be deleted */
  readonly isDeletable?: boolean;
  /** The last update date of the runtime configuration */
  readonly lastUpdate?: string;
  /**
   * The custom display name of the runtime configuration
   * @nullable
   */
  name?: string | null;
  /**
   * The client application public directory
   * @nullable
   */
  publicDir?: string | null;
  /** The status of the runtime */
  readonly status?: HostingWebRuntimeStateEnumOVH;
  /**
   * The link current task for the runtime configuration
   * @nullable
   */
  readonly taskId?: number | null;
  /** The backend type of the runtime */
  type?: HostingWebRuntimeTypeEnumOVH;
}

/**
 * OwnLogs status
 */
export type HostingWebOwnLogsStatusEnumOVH = typeof HostingWebOwnLogsStatusEnumOVH[keyof typeof HostingWebOwnLogsStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebOwnLogsStatusEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
} as const;

/**
 * Hosting own logs
 */
export interface HostingWebOwnLogsOVH {
  /** The ownlogs fqdn available on logs.clusterXX.hosting.ovh.net */
  readonly fqdn?: string;
  /** Identifier of this ownLogs */
  readonly id?: number;
  /** URL to access this ownLogs logs */
  readonly logs?: string;
  /** URL to access this ownLogs stats */
  readonly stats?: string;
  /** Status of this ownLogs */
  readonly status?: HostingWebOwnLogsStatusEnumOVH;
  /**
   * The task ID working on this ownLogs
   * @nullable
   */
  readonly taskId?: number | null;
}

/**
 * Hosting configuration image to run website
 */
export type HostingWebOvhconfigContainerEnumOVH = typeof HostingWebOvhconfigContainerEnumOVH[keyof typeof HostingWebOvhconfigContainerEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebOvhconfigContainerEnumOVH = {
  jessiei386: 'jessie.i386',
  legacy: 'legacy',
  stable: 'stable',
  stable64: 'stable64',
  testing: 'testing',
} as const;

/**
 * Ovhconfig status
 */
export type HostingWebOvhConfigStatusEnumOVH = typeof HostingWebOvhConfigStatusEnumOVH[keyof typeof HostingWebOvhConfigStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebOvhConfigStatusEnumOVH = {
  created: 'created',
  rollbacking: 'rollbacking',
  updating: 'updating',
} as const;

/**
 * Hosting configuration firewall
 */
export type HostingWebOvhConfigHttpFirewallEnumOVH = typeof HostingWebOvhConfigHttpFirewallEnumOVH[keyof typeof HostingWebOvhConfigHttpFirewallEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebOvhConfigHttpFirewallEnumOVH = {
  none: 'none',
  security: 'security',
} as const;

/**
 * Hosting configuration environment
 */
export type HostingWebOvhConfigEnvironmentEnumOVH = typeof HostingWebOvhConfigEnvironmentEnumOVH[keyof typeof HostingWebOvhConfigEnvironmentEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebOvhConfigEnvironmentEnumOVH = {
  development: 'development',
  production: 'production',
} as const;

/**
 * Hosting configuration version
 */
export type HostingWebOvhConfigEngineVersionEnumOVH = typeof HostingWebOvhConfigEngineVersionEnumOVH[keyof typeof HostingWebOvhConfigEngineVersionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebOvhConfigEngineVersionEnumOVH = {
  '44': '4.4',
  '50': '5.0',
  '51': '5.1',
  '52': '5.2',
  '53': '5.3',
  '54': '5.4',
  '55': '5.5',
  '56': '5.6',
  '70': '7.0',
  '71': '7.1',
  '72': '7.2',
  '73': '7.3',
  '74': '7.4',
  '80': '8.0',
  '81': '8.1',
  '82': '8.2',
  '83': '8.3',
  '84': '8.4',
  AUTO: 'AUTO',
} as const;

/**
 * Hosting configuration engine
 */
export type HostingWebOvhConfigEngineNameEnumOVH = typeof HostingWebOvhConfigEngineNameEnumOVH[keyof typeof HostingWebOvhConfigEngineNameEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebOvhConfigEngineNameEnumOVH = {
  php: 'php',
  phpcgi: 'phpcgi',
} as const;

/**
 * Hosting available configuration version
 */
export type HostingWebOvhConfigAvailableEngineVersionEnumOVH = typeof HostingWebOvhConfigAvailableEngineVersionEnumOVH[keyof typeof HostingWebOvhConfigAvailableEngineVersionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebOvhConfigAvailableEngineVersionEnumOVH = {
  '54': '5.4',
  '55': '5.5',
  '56': '5.6',
  '70': '7.0',
  '71': '7.1',
  '72': '7.2',
  '73': '7.3',
  '74': '7.4',
  '80': '8.0',
  '81': '8.1',
  '82': '8.2',
  '83': '8.3',
  '84': '8.4',
} as const;

/**
 * Virtual service
 */
export interface HostingWebOvhConfigOVH {
  /** Container to run this website */
  readonly container?: string;
  /** When ovhconfig was created, or found for the first time, on the hosting servers */
  readonly creationDate?: string;
  /** Version of engine you want */
  readonly engineName?: HostingWebOvhConfigEngineNameEnumOVH;
  /** Name of engine you want */
  readonly engineVersion?: HostingWebOvhConfigEngineVersionEnumOVH;
  /** Environment configuration you want */
  readonly environment?: HostingWebOvhConfigEnvironmentEnumOVH;
  /** If .ovhConfig exists */
  readonly fileExist?: boolean;
  /**
   * If this configuration is an old configuration
   * @nullable
   */
  readonly historical?: boolean | null;
  /** Configuration you want for http firewall */
  readonly httpFirewall?: HostingWebOvhConfigHttpFirewallEnumOVH;
  /** Configuration's id */
  readonly id?: number;
  /**
   * Config path, relative to your home directory
   * @nullable
   */
  readonly path?: string | null;
  /** The configuration status */
  readonly status?: HostingWebOvhConfigStatusEnumOVH;
  /**
   * The task ID working on this configuration
   * @nullable
   */
  readonly taskId?: number | null;
}

/**
 * Module status
 */
export type HostingWebModuleStatusEnumOVH = typeof HostingWebModuleStatusEnumOVH[keyof typeof HostingWebModuleStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebModuleStatusEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  updating: 'updating',
} as const;

/**
 * Install language
 */
export type HostingWebModuleLanguageEnumOVH = typeof HostingWebModuleLanguageEnumOVH[keyof typeof HostingWebModuleLanguageEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebModuleLanguageEnumOVH = {
  cz: 'cz',
  de: 'de',
  en: 'en',
  es: 'es',
  fi: 'fi',
  fr: 'fr',
  it: 'it',
  lt: 'lt',
  nl: 'nl',
  pl: 'pl',
  pt: 'pt',
} as const;

/**
 * The type of the dependency. A dependency can be a standard database (like MySQL or PostgreSQL) or a key-value store (like Redis or Memcached) for example
 */
export type HostingWebModuleDependencyTypeEnumOVH = typeof HostingWebModuleDependencyTypeEnumOVH[keyof typeof HostingWebModuleDependencyTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebModuleDependencyTypeEnumOVH = {
  mysql: 'mysql',
} as const;

/**
 * Dependency parameters. A dependency can be a standard database (like MySQL or PostgreSQL) or a key-value store (like Redis or Memcached) for example
 */
export interface HostingWebModuleDependencyTypeOVH {
  /**
   * The name of this dependency
   * @nullable
   */
  name?: string | null;
  /**
   * The password associated with the user
   * @nullable
   */
  password?: string | null;
  /**
   * The port on where to contact this dependency
   * @nullable
   */
  port?: number | null;
  /**
   * The prefix to set to the data to distinguish between the data from the module and the rest
   * @nullable
   */
  prefix?: string | null;
  /**
   * The server on where your dependency is hosted
   * @nullable
   */
  server?: string | null;
  /** Type */
  type?: HostingWebModuleDependencyTypeEnumOVH;
  /**
   * The user to use to connect to this dependency
   * @nullable
   */
  user?: string | null;
}

/**
 * Branch enum
 */
export type HostingWebModuleBranchEnumOVH = typeof HostingWebModuleBranchEnumOVH[keyof typeof HostingWebModuleBranchEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebModuleBranchEnumOVH = {
  old: 'old',
  stable: 'stable',
  testing: 'testing',
} as const;

/**
 * The type of the admin name
 */
export type HostingWebModuleAdminNameTypeEnumOVH = typeof HostingWebModuleAdminNameTypeEnumOVH[keyof typeof HostingWebModuleAdminNameTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebModuleAdminNameTypeEnumOVH = {
  email: 'email',
  string: 'string',
} as const;

/**
 * Hosting modules installed
 */
export interface HostingWebModuleOVH {
  /** The admin folder, relative to the module's installation path */
  readonly adminFolder?: string;
  /** Login for the admin account */
  readonly adminName?: string;
  /** Date of the installation of the module */
  readonly creationDate?: string;
  /** The dependencies to which the module has access. A dependency can be a standard database (like MySQL or PostgreSQL) or a key-value store (like Redis or Memcached) for example */
  readonly dependencies?: readonly HostingWebModuleDependencyTypeOVH[];
  /** Installation ID */
  readonly id?: number;
  /** The language of the module */
  readonly language?: HostingWebModuleLanguageEnumOVH;
  /** Date of the last module's upgrade */
  readonly lastUpdate?: string;
  /** ID of the module associated with this installation */
  readonly moduleId?: number;
  /** Where the module is installed, relative to your home directory */
  readonly path?: string;
  /** The module status */
  readonly status?: HostingWebModuleStatusEnumOVH;
  /** The URL from where your module can be reached */
  readonly targetUrl?: string;
  /**
   * The task ID working on this module
   * @nullable
   */
  readonly taskId?: number | null;
}

/**
 * The volume history type
 */
export interface HostingWebMailVolumeHistoryOVH {
  /** The datetime of this volume history point */
  date?: string;
  /**
   * The volume history size
   * @nullable
   */
  volume?: number | null;
}

/**
 * Mail state enum
 */
export type HostingWebMailStateEnumOVH = typeof HostingWebMailStateEnumOVH[keyof typeof HostingWebMailStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebMailStateEnumOVH = {
  bounce: 'bounce',
  force: 'force',
  ko: 'ko',
  ok: 'ok',
  purging: 'purging',
  spam: 'spam',
} as const;

/**
 * The volume history type
 */
export interface HostingWebMailBounceOVH {
  /** The datetime of this bounce */
  date?: string;
  /**
   * The return message for this bounce
   * @nullable
   */
  message?: string | null;
  /**
   * The email where you have the bounce
   * @nullable
   */
  to?: string | null;
}

/**
 * Types of action you can request for your mail
 */
export type HostingWebMailActionEnumOVH = typeof HostingWebMailActionEnumOVH[keyof typeof HostingWebMailActionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebMailActionEnumOVH = {
  BLOCK: 'BLOCK',
  PURGE: 'PURGE',
  UNBLOCK: 'UNBLOCK',
} as const;

/**
 * Location status
 */
export type HostingWebLocalSeoLocationStatusEnumOVH = typeof HostingWebLocalSeoLocationStatusEnumOVH[keyof typeof HostingWebLocalSeoLocationStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebLocalSeoLocationStatusEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  updating: 'updating',
} as const;

/**
 * Location offer
 */
export type HostingWebLocalSeoLocationOfferEnumOVH = typeof HostingWebLocalSeoLocationOfferEnumOVH[keyof typeof HostingWebLocalSeoLocationOfferEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebLocalSeoLocationOfferEnumOVH = {
  normal: 'normal',
} as const;

/**
 * Location country
 */
export type HostingWebLocalSeoLocationCountryEnumOVH = typeof HostingWebLocalSeoLocationCountryEnumOVH[keyof typeof HostingWebLocalSeoLocationCountryEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebLocalSeoLocationCountryEnumOVH = {
  FR: 'FR',
} as const;

/**
 * Local SEO locations
 */
export interface HostingWebLocalSeoLocationOVH {
  /**
   * Account id
   * @nullable
   */
  readonly accountId?: number | null;
  /**
   * Address of the location
   * @nullable
   */
  readonly address?: string | null;
  /** Country of the location */
  readonly country?: HostingWebLocalSeoLocationCountryEnumOVH;
  /** Date of the installation of the location */
  readonly creationDate?: string;
  /** Location id */
  readonly id?: number;
  /** Date of the last location's update */
  readonly lastUpdate?: string;
  /**
   * Name of the location
   * @nullable
   */
  readonly name?: string | null;
  /** Local SEO offer for this location */
  readonly offer?: HostingWebLocalSeoLocationOfferEnumOVH;
  /** Current status of the location */
  readonly status?: HostingWebLocalSeoLocationStatusEnumOVH;
  /**
   * Running task associated to the location
   * @nullable
   */
  readonly taskId?: number | null;
}

/**
 * Account status
 */
export type HostingWebLocalSeoAccountStatusEnumOVH = typeof HostingWebLocalSeoAccountStatusEnumOVH[keyof typeof HostingWebLocalSeoAccountStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebLocalSeoAccountStatusEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  updating: 'updating',
} as const;

/**
 * Availability of an email address for a local SEO order
 */
export type HostingWebLocalSeoAccountEmailAvailabilityEnumOVH = typeof HostingWebLocalSeoAccountEmailAvailabilityEnumOVH[keyof typeof HostingWebLocalSeoAccountEmailAvailabilityEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebLocalSeoAccountEmailAvailabilityEnumOVH = {
  available: 'available',
  merge: 'merge',
  nic: 'nic',
  taken: 'taken',
} as const;

/**
 * Local SEO accounts
 */
export interface HostingWebLocalSeoAccountOVH {
  /** Date of creation of the account */
  readonly creationDate?: string;
  /** Email address associated to the account */
  readonly email?: string;
  /** Account id */
  readonly id?: number;
  /** Date of the last account's update */
  readonly lastUpdate?: string;
  /** Current status of the account */
  readonly status?: HostingWebLocalSeoAccountStatusEnumOVH;
  /**
   * Running task associated to the account
   * @nullable
   */
  readonly taskId?: number | null;
}

/**
 * Zipcode of the location (sync status)
 * @nullable
 */
export type HostingWebLocalSeoVisibilityCheckResultResponseOVHZipStatus = HostingWebLocalSeoFieldStatusEnumOVH | null;

/**
 * A valid url for the location's website (sync status)
 * @nullable
 */
export type HostingWebLocalSeoVisibilityCheckResultResponseOVHWebsiteStatus = HostingWebLocalSeoFieldStatusEnumOVH | null;

/**
 * The sync status of the listing
 * @nullable
 */
export type HostingWebLocalSeoVisibilityCheckResultResponseOVHSyncStatus = HostingWebLocalSeoListingStatusEnumOVH | null;

/**
 * The street type for Spain (sync status)
 * @nullable
 */
export type HostingWebLocalSeoVisibilityCheckResultResponseOVHStreetTypeStatus = HostingWebLocalSeoFieldStatusEnumOVH | null;

/**
 * The location's street address (sync status)
 * @nullable
 */
export type HostingWebLocalSeoVisibilityCheckResultResponseOVHStreetStatus = HostingWebLocalSeoFieldStatusEnumOVH | null;

/**
 * The location's street number (sync status)
 * @nullable
 */
export type HostingWebLocalSeoVisibilityCheckResultResponseOVHStreetNoStatus = HostingWebLocalSeoFieldStatusEnumOVH | null;

/**
 * A localized combination of street and streetNo (sync status)
 * @nullable
 */
export type HostingWebLocalSeoVisibilityCheckResultResponseOVHStreetAndNoStatus = HostingWebLocalSeoFieldStatusEnumOVH | null;

/**
 * Province of the location (sync status)
 * @nullable
 */
export type HostingWebLocalSeoVisibilityCheckResultResponseOVHProvinceStatus = HostingWebLocalSeoFieldStatusEnumOVH | null;

/**
 * The location's contact phone number (sync status)
 * @nullable
 */
export type HostingWebLocalSeoVisibilityCheckResultResponseOVHPhoneStatus = HostingWebLocalSeoFieldStatusEnumOVH | null;

/**
 * The location's name used for this listing (sync status)
 * @nullable
 */
export type HostingWebLocalSeoVisibilityCheckResultResponseOVHNameStatus = HostingWebLocalSeoFieldStatusEnumOVH | null;

/**
 * The status of the current listing
 * @nullable
 */
export type HostingWebLocalSeoVisibilityCheckResultResponseOVHFlowStatus = HostingWebLocalSeoFlowStatusEnumOVH | null;

/**
 * Country of the location (sync status)
 * @nullable
 */
export type HostingWebLocalSeoVisibilityCheckResultResponseOVHCountryStatus = HostingWebLocalSeoFieldStatusEnumOVH | null;

/**
 * City of the location (sync status)
 * @nullable
 */
export type HostingWebLocalSeoVisibilityCheckResultResponseOVHCityStatus = HostingWebLocalSeoFieldStatusEnumOVH | null;

/**
 * Struct describing a location being checked for visibility
 */
export interface HostingWebLocalSeoSearchDataOVH {
  /** City of the location */
  city?: string;
  /** Country of the location */
  country?: string;
  /** Id of the search */
  id?: number;
  /** Name of the location */
  name?: string;
  /**
   * Province of the location
   * @nullable
   */
  province?: string | null;
  /** Street of the location */
  street?: string;
  /** Street numero of the location */
  streetNo?: string;
  /** Token to use to get the results of the search */
  token?: string;
  /** Zipcode of the location */
  zip?: string;
}

/**
 * Struct describing the response for a visibility check request
 */
export interface HostingWebLocalSeoVisibilityCheckResponseOVH {
  /**
   * Is the searched location already managed ?
   * @nullable
   */
  alreadyManaged?: boolean | null;
  /** Searched location data */
  searchData?: HostingWebLocalSeoSearchDataOVH;
}

/**
 * Sync status of a listing
 */
export type HostingWebLocalSeoListingStatusEnumOVH = typeof HostingWebLocalSeoListingStatusEnumOVH[keyof typeof HostingWebLocalSeoListingStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebLocalSeoListingStatusEnumOVH = {
  IN_SYNC: 'IN_SYNC',
  NOT_FOUND: 'NOT_FOUND',
  NOT_IN_SYNC: 'NOT_IN_SYNC',
  NOT_SUPPORTED: 'NOT_SUPPORTED',
  NO_ONLINE_LISTING: 'NO_ONLINE_LISTING',
  TECHNICAL_PROBLEMS: 'TECHNICAL_PROBLEMS',
} as const;

/**
 * Status of a listing
 */
export type HostingWebLocalSeoFlowStatusEnumOVH = typeof HostingWebLocalSeoFlowStatusEnumOVH[keyof typeof HostingWebLocalSeoFlowStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebLocalSeoFlowStatusEnumOVH = {
  ALL_INFORMATION_SUBMITTED: 'ALL_INFORMATION_SUBMITTED',
  DONT_REMOVE: 'DONT_REMOVE',
  INACTIVE: 'INACTIVE',
  MANUALLY_DEACTIVATED: 'MANUALLY_DEACTIVATED',
  NEEDS_REVIEW: 'NEEDS_REVIEW',
  NOT_SUPPORTED: 'NOT_SUPPORTED',
  NO_ACTION_NEEDED: 'NO_ACTION_NEEDED',
  REMOVAL_NEEDED: 'REMOVAL_NEEDED',
  REMOVAL_REVIEW_NEEDED: 'REMOVAL_REVIEW_NEEDED',
  REMOVAL_SUBMITTED: 'REMOVAL_SUBMITTED',
  REMOVED: 'REMOVED',
  SUBMISSION_NEEDED: 'SUBMISSION_NEEDED',
  WAITING_DIRECTORY_ACTION: 'WAITING_DIRECTORY_ACTION',
  WAITING_USER_ACTION: 'WAITING_USER_ACTION',
} as const;

/**
 * Sync status of a location field
 */
export type HostingWebLocalSeoFieldStatusEnumOVH = typeof HostingWebLocalSeoFieldStatusEnumOVH[keyof typeof HostingWebLocalSeoFieldStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebLocalSeoFieldStatusEnumOVH = {
  MATCH: 'MATCH',
  MISMATCH: 'MISMATCH',
  MISSING: 'MISSING',
  NOT_APPLICABLE: 'NOT_APPLICABLE',
  PRESENT: 'PRESENT',
} as const;

/**
 * A contact email for the location (sync status)
 * @nullable
 */
export type HostingWebLocalSeoVisibilityCheckResultResponseOVHEmailStatus = HostingWebLocalSeoFieldStatusEnumOVH | null;

/**
 * Struct describing a visibility check result
 */
export interface HostingWebLocalSeoVisibilityCheckResultResponseOVH {
  /**
   * City of the location
   * @nullable
   */
  city?: string | null;
  /**
   * City of the location (sync status)
   * @nullable
   */
  cityStatus?: HostingWebLocalSeoVisibilityCheckResultResponseOVHCityStatus;
  /**
   * Country of the location
   * @nullable
   */
  country?: string | null;
  /**
   * Country of the location (sync status)
   * @nullable
   */
  countryStatus?: HostingWebLocalSeoVisibilityCheckResultResponseOVHCountryStatus;
  /**
   * The date and time the listing was created in database
   * @nullable
   */
  dateCreated?: string | null;
  /**
   * The directory where this listing appears
   * @nullable
   */
  directoryType?: string | null;
  /**
   * A contact email for the location
   * @nullable
   */
  email?: string | null;
  /**
   * A contact email for the location (sync status)
   * @nullable
   */
  emailStatus?: HostingWebLocalSeoVisibilityCheckResultResponseOVHEmailStatus;
  /**
   * The status of the current listing
   * @nullable
   */
  flowStatus?: HostingWebLocalSeoVisibilityCheckResultResponseOVHFlowStatus;
  /**
   * The listing id in the directory database
   * @nullable
   */
  listingId?: string | null;
  /**
   * The listing url on the directory website
   * @nullable
   */
  listingUrl?: string | null;
  /**
   * The location's name used for this listing
   * @nullable
   */
  name?: string | null;
  /**
   * The location's name used for this listing (sync status)
   * @nullable
   */
  nameStatus?: HostingWebLocalSeoVisibilityCheckResultResponseOVHNameStatus;
  /**
   * The location's contact phone number
   * @nullable
   */
  phone?: string | null;
  /**
   * The location's contact phone number (sync status)
   * @nullable
   */
  phoneStatus?: HostingWebLocalSeoVisibilityCheckResultResponseOVHPhoneStatus;
  /**
   * Province of the location
   * @nullable
   */
  province?: string | null;
  /**
   * Province of the location (sync status)
   * @nullable
   */
  provinceStatus?: HostingWebLocalSeoVisibilityCheckResultResponseOVHProvinceStatus;
  /**
   * The location's street address
   * @nullable
   */
  street?: string | null;
  /**
   * A localized combination of street and streetNo
   * @nullable
   */
  streetAndNo?: string | null;
  /**
   * A localized combination of street and streetNo (sync status)
   * @nullable
   */
  streetAndNoStatus?: HostingWebLocalSeoVisibilityCheckResultResponseOVHStreetAndNoStatus;
  /**
   * The location's street number
   * @nullable
   */
  streetNo?: string | null;
  /**
   * The location's street number (sync status)
   * @nullable
   */
  streetNoStatus?: HostingWebLocalSeoVisibilityCheckResultResponseOVHStreetNoStatus;
  /**
   * The location's street address (sync status)
   * @nullable
   */
  streetStatus?: HostingWebLocalSeoVisibilityCheckResultResponseOVHStreetStatus;
  /**
   * The street type for Spain
   * @nullable
   */
  streetType?: string | null;
  /**
   * The street type for Spain (sync status)
   * @nullable
   */
  streetTypeStatus?: HostingWebLocalSeoVisibilityCheckResultResponseOVHStreetTypeStatus;
  /**
   * The sync status of the listing
   * @nullable
   */
  syncStatus?: HostingWebLocalSeoVisibilityCheckResultResponseOVHSyncStatus;
  /**
   * A valid url for the location's website
   * @nullable
   */
  website?: string | null;
  /**
   * A valid url for the location's website (sync status)
   * @nullable
   */
  websiteStatus?: HostingWebLocalSeoVisibilityCheckResultResponseOVHWebsiteStatus;
  /**
   * Zipcode of the location
   * @nullable
   */
  zip?: string | null;
  /**
   * Zipcode of the location (sync status)
   * @nullable
   */
  zipStatus?: HostingWebLocalSeoVisibilityCheckResultResponseOVHZipStatus;
}

/**
 * Struct describing the availability of an email address for a local SEO order
 */
export interface HostingWebLocalSeoEmailAvailabilityOVH {
  /** Availability of the email address */
  availability?: HostingWebLocalSeoAccountEmailAvailabilityEnumOVH;
  /**
   * Hosting on which the email address is used
   * @nullable
   */
  serviceName?: string | null;
}

/**
 * Struct describing a directory
 */
export interface HostingWebLocalSeoDirectoryOVH {
  /** Identifier to use to get the result of a visibility check for the directory */
  code?: string;
  /** Human-readable name of the directory */
  displayName?: string;
}

/**
 * Struct describing a list of directories ordered by type
 */
export interface HostingWebLocalSeoDirectoriesListOVH {
  /** Navigation systems */
  navigationSystems?: HostingWebLocalSeoDirectoryOVH[];
  /** Search engines */
  searchEngines?: HostingWebLocalSeoDirectoryOVH[];
  /** Social networks */
  socialNetworks?: HostingWebLocalSeoDirectoryOVH[];
}

/**
 * Hosting indys
 */
export interface HostingWebIndyOVH {
  /** AttachedDomain IDs linked to this multidomain */
  readonly attachedDomains?: readonly string[];
  /** Home directory */
  readonly home?: string;
  /** Login of the multidomain independent user */
  readonly login?: string;
  /** User status */
  readonly state?: HostingWebUserStateEnumOVH;
}

/**
 * Hosted SSL type
 */
export type HostingWebHostedsslTypeEnumOVH = typeof HostingWebHostedsslTypeEnumOVH[keyof typeof HostingWebHostedsslTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebHostedsslTypeEnumOVH = {
  CUSTOM: 'CUSTOM',
  DV: 'DV',
  EV: 'EV',
} as const;

/**
 * Hosted SSL status
 */
export type HostingWebHostedsslStatusEnumOVH = typeof HostingWebHostedsslStatusEnumOVH[keyof typeof HostingWebHostedsslStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebHostedsslStatusEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  importing: 'importing',
  regenerating: 'regenerating',
} as const;

/**
 * Hostedssl report value
 */
export type HostingWebHostedsslReportValueEnumOVH = typeof HostingWebHostedsslReportValueEnumOVH[keyof typeof HostingWebHostedsslReportValueEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebHostedsslReportValueEnumOVH = {
  completed: 'completed',
  'in-progress': 'in-progress',
  'non-completed': 'non-completed',
  'non-required': 'non-required',
  'not-applicable': 'not-applicable',
  'not-provided': 'not-provided',
} as const;

/**
 * Hosted SSL report status
 */
export type HostingWebHostedsslReportStatusEnumOVH = typeof HostingWebHostedsslReportStatusEnumOVH[keyof typeof HostingWebHostedsslReportStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebHostedsslReportStatusEnumOVH = {
  completed: 'completed',
  'in-progress': 'in-progress',
  'non-completed': 'non-completed',
  'non-required': 'non-required',
  'not-applicable': 'not-applicable',
  'not-provided': 'not-provided',
} as const;

/**
 * Hosted SSL Provider
 */
export type HostingWebHostedsslProviderEnumOVH = typeof HostingWebHostedsslProviderEnumOVH[keyof typeof HostingWebHostedsslProviderEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebHostedsslProviderEnumOVH = {
  COMODO: 'COMODO',
  CUSTOM: 'CUSTOM',
  LETSENCRYPT: 'LETSENCRYPT',
  SECTIGO: 'SECTIGO',
} as const;

/**
 * FreeDom status
 */
export type HostingWebFreedomStatusEnumOVH = typeof HostingWebFreedomStatusEnumOVH[keyof typeof HostingWebFreedomStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebFreedomStatusEnumOVH = {
  blockedByCustomer: 'blockedByCustomer',
  blockedBySystem: 'blockedBySystem',
  ok: 'ok',
  preset: 'preset',
} as const;

/**
 * Freedoms linked to this hosting account
 */
export interface HostingWebFreedomOVH {
  /** Freedom domain */
  readonly domain?: string;
  /** Available status for freedom */
  readonly status?: HostingWebFreedomStatusEnumOVH;
  /** Freedom type */
  readonly type?: string;
}

/**
 * Sqlperso service
 */
export interface HostingWebExtrasqlpersoOVH {
  /** Number of database allowed by this option */
  readonly database?: number;
  /** The extraSqlPerso option name */
  readonly name?: string;
  /** Quota size allowed per each database by this option */
  readonly size?: ComplexTypeUnitAndValueDoubleOVH;
  /** The extraSqlPerso option status */
  readonly status?: string;
  /**
   * The task ID working on this extraSqlPerso
   * @nullable
   */
  readonly taskId?: number | null;
}

/**
 * Filter the value of type property (=)
 */
export type HostingWebEnvVarTypeEnumOVH = typeof HostingWebEnvVarTypeEnumOVH[keyof typeof HostingWebEnvVarTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebEnvVarTypeEnumOVH = {
  integer: 'integer',
  password: 'password',
  string: 'string',
} as const;

/**
 * EnvVar status
 */
export type HostingWebEnvVarStatusEnumOVH = typeof HostingWebEnvVarStatusEnumOVH[keyof typeof HostingWebEnvVarStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebEnvVarStatusEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  updating: 'updating',
} as const;

/**
 * Environment variables set into your webhosting account
 */
export interface HostingWebEnvVarOVH {
  /** Name of the variable */
  readonly key?: string;
  /** The environnement variable status */
  readonly status?: HostingWebEnvVarStatusEnumOVH;
  /**
   * The task ID working on this variable
   * @nullable
   */
  readonly taskId?: number | null;
  /** Type of variable set */
  readonly type?: HostingWebEnvVarTypeEnumOVH;
  /** Value of the variable */
  value?: string;
}

/**
 * Mail service linked to webhosting
 */
export interface HostingWebEmailoptionOVH {
  /** Creation date */
  readonly creationDate?: string;
  /** Email service domain */
  readonly domain?: string;
  /** Account id */
  readonly id?: number;
}

/**
 * Hosting automated emails
 */
export interface HostingWebEmailOVH {
  /** Bounce */
  readonly bounce?: number;
  /**
   * Email used to receive errors
   * @nullable
   */
  email?: string | null;
  /** Max email to sent per day */
  readonly maxPerDay?: number;
  /** Email sent since hosting creation */
  readonly sent?: number;
  /** Email sent today */
  readonly sentToday?: number;
  /** Email state */
  readonly state?: HostingWebMailStateEnumOVH;
}

/**
 * Database dump status
 */
export type HostingWebDatabaseDumpStatusEnumOVH = typeof HostingWebDatabaseDumpStatusEnumOVH[keyof typeof HostingWebDatabaseDumpStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseDumpStatusEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
} as const;

/**
 * List of dump types
 */
export type HostingWebDatabaseDumpDateEnumOVH = typeof HostingWebDatabaseDumpDateEnumOVH[keyof typeof HostingWebDatabaseDumpDateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseDumpDateEnumOVH = {
  daily1: 'daily.1',
  now: 'now',
  weekly1: 'weekly.1',
} as const;

/**
 * Dump
 */
export interface HostingWebDumpOVH {
  /** Creation date of the dump */
  readonly creationDate?: string;
  /** Source database name */
  readonly databaseName?: string;
  /** Automatic deletion date of the dump */
  readonly deletionDate?: string;
  /** Dump id */
  readonly id?: number;
  /** If source database was deleted */
  readonly orphan?: boolean;
  /** The dump status */
  readonly status?: HostingWebDatabaseDumpStatusEnumOVH;
  /**
   * The task ID working on this dump
   * @nullable
   */
  readonly taskId?: number | null;
  /** Dump type */
  readonly type?: HostingWebDatabaseDumpDateEnumOVH;
  /**
   * Dump url access
   * @nullable
   */
  readonly url?: string | null;
}

/**
 * Dump
 */
export interface HostingWebDatabaseDumpOVH {
  /** Creation date of the dump */
  readonly creationDate?: string;
  /** Automatic deletion date of the dump */
  readonly deletionDate?: string;
  /** Dump id */
  readonly id?: number;
  /** The dump status */
  readonly status?: HostingWebDatabaseDumpStatusEnumOVH;
  /**
   * The task ID working on this dump
   * @nullable
   */
  readonly taskId?: number | null;
  /** Dump type */
  readonly type?: HostingWebDatabaseDumpDateEnumOVH;
  /**
   * Dump url access
   * @nullable
   */
  readonly url?: string | null;
}

/**
 * Database copy status
 */
export type HostingWebDatabaseCopyStatusEnumOVH = typeof HostingWebDatabaseCopyStatusEnumOVH[keyof typeof HostingWebDatabaseCopyStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseCopyStatusEnumOVH = {
  doing: 'doing',
  done: 'done',
  error: 'error',
  todo: 'todo',
} as const;

/**
 * Copy
 */
export interface HostingWebDatabaseCopyOVH {
  /** Creation date */
  readonly creationDate?: string;
  /**
   * Expiration date
   * @nullable
   */
  readonly expirationDate?: string | null;
  /** Copy id */
  readonly id?: string;
  /** Last update date */
  readonly lastUpdate?: string;
  /** Copy status */
  readonly status?: HostingWebDatabaseCopyStatusEnumOVH;
}

/**
 * Database Version enum
 */
export type HostingWebDatabaseVersionEnumOVH = typeof HostingWebDatabaseVersionEnumOVH[keyof typeof HostingWebDatabaseVersionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseVersionEnumOVH = {
  NUMBER_10: '10',
  '101': '10.1',
  '1011': '10.11',
  '102': '10.2',
  '103': '10.3',
  '104': '10.4',
  '105': '10.5',
  '106': '10.6',
  NUMBER_11: '11',
  NUMBER_12: '12',
  NUMBER_13: '13',
  NUMBER_15: '15',
  '32': '3.2',
  '34': '3.4',
  '40': '4.0',
  '51': '5.1',
  '55': '5.5',
  '56': '5.6',
  '57': '5.7',
  '60': '6.0',
  '70': '7.0',
  '80': '8.0',
  '84': '8.4',
  '94': '9.4',
  '95': '9.5',
  '96': '9.6',
} as const;

/**
 * Indicates the current support state of your database version
 */
export type HostingWebDatabaseSupportedVersionEnumOVH = typeof HostingWebDatabaseSupportedVersionEnumOVH[keyof typeof HostingWebDatabaseSupportedVersionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseSupportedVersionEnumOVH = {
  beta: 'beta',
  deprecated: 'deprecated',
  stable: 'stable',
} as const;

/**
 * Database status
 */
export type HostingWebDatabaseStatusEnumOVH = typeof HostingWebDatabaseStatusEnumOVH[keyof typeof HostingWebDatabaseStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseStatusEnumOVH = {
  checking: 'checking',
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  dumping: 'dumping',
  importing: 'importing',
  locked: 'locked',
  optimizing: 'optimizing',
  restoring: 'restoring',
  updating: 'updating',
} as const;

/**
 * Types of statistics available for the database
 */
export type HostingWebDatabaseStatisticsTypeEnumOVH = typeof HostingWebDatabaseStatisticsTypeEnumOVH[keyof typeof HostingWebDatabaseStatisticsTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseStatisticsTypeEnumOVH = {
  statement: 'statement',
  statementMeanTime: 'statementMeanTime',
} as const;

/**
 * Database state
 */
export type HostingWebDatabaseStateEnumOVH = typeof HostingWebDatabaseStateEnumOVH[keyof typeof HostingWebDatabaseStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseStateEnumOVH = {
  close: 'close',
  ok: 'ok',
  readonly: 'readonly',
} as const;

/**
 * Types of action you can request for your database
 */
export type HostingWebDatabaseRequestActionEnumOVH = typeof HostingWebDatabaseRequestActionEnumOVH[keyof typeof HostingWebDatabaseRequestActionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseRequestActionEnumOVH = {
  CHECK_QUOTA: 'CHECK_QUOTA',
} as const;

/**
 * Database mode
 */
export type HostingWebDatabaseModeEnumOVH = typeof HostingWebDatabaseModeEnumOVH[keyof typeof HostingWebDatabaseModeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseModeEnumOVH = {
  besteffort: 'besteffort',
  classic: 'classic',
  module: 'module',
} as const;

/**
 * ExtraSqlPerso quota enum
 */
export type HostingWebDatabaseExtraSqlQuotaEnumOVH = typeof HostingWebDatabaseExtraSqlQuotaEnumOVH[keyof typeof HostingWebDatabaseExtraSqlQuotaEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseExtraSqlQuotaEnumOVH = {
  NUMBER_25: 25,
  NUMBER_100: 100,
  NUMBER_200: 200,
  NUMBER_256: 256,
  NUMBER_400: 400,
  NUMBER_512: 512,
  NUMBER_800: 800,
  NUMBER_1024: 1024,
} as const;

/**
 * Database Type enum
 */
export type HostingWebDatabaseDatabaseTypeEnumOVH = typeof HostingWebDatabaseDatabaseTypeEnumOVH[keyof typeof HostingWebDatabaseDatabaseTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseDatabaseTypeEnumOVH = {
  mariadb: 'mariadb',
  mongodb: 'mongodb',
  mysql: 'mysql',
  postgresql: 'postgresql',
  redis: 'redis',
} as const;

/**
 * Database Service Type enum
 */
export type HostingWebDatabaseDatabaseServiceTypeEnumOVH = typeof HostingWebDatabaseDatabaseServiceTypeEnumOVH[keyof typeof HostingWebDatabaseDatabaseServiceTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseDatabaseServiceTypeEnumOVH = {
  extra: 'extra',
  included: 'included',
  optional: 'optional',
} as const;

/**
 * Database Isolation enum
 */
export type HostingWebDatabaseDatabaseIsolationEnumOVH = typeof HostingWebDatabaseDatabaseIsolationEnumOVH[keyof typeof HostingWebDatabaseDatabaseIsolationEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseDatabaseIsolationEnumOVH = {
  dedicated: 'dedicated',
  local: 'local',
  shared: 'shared',
} as const;

/**
 * Database Type enum
 */
export type HostingWebDatabaseDatabaseCreationTypeEnumOVH = typeof HostingWebDatabaseDatabaseCreationTypeEnumOVH[keyof typeof HostingWebDatabaseDatabaseCreationTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseDatabaseCreationTypeEnumOVH = {
  mariadb: 'mariadb',
  mysql: 'mysql',
  postgresql: 'postgresql',
  redis: 'redis',
} as const;

/**
 * Database capabitities type enum
 */
export type HostingWebDatabaseDatabaseCapabilitiesTypeEnumOVH = typeof HostingWebDatabaseDatabaseCapabilitiesTypeEnumOVH[keyof typeof HostingWebDatabaseDatabaseCapabilitiesTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatabaseDatabaseCapabilitiesTypeEnumOVH = {
  extraSqlPerso: 'extraSqlPerso',
  local: 'local',
  privateDatabase: 'privateDatabase',
  sqlLocal: 'sqlLocal',
  sqlPerso: 'sqlPerso',
  sqlPro: 'sqlPro',
} as const;

/**
 * Struct which describe available features for a database
 */
export interface HostingWebDatabaseDatabaseCapabilitiesOVH {
  /** Availability of the changePassword function */
  changePassword?: boolean;
  /** Availability of the changeRight function */
  changeRight?: boolean;
  /** Availability of the delete function */
  delete?: boolean;
  /** Availability of the dump function */
  dump?: boolean;
  /** Availability of the getQuota function */
  getQuota?: boolean;
  /** Availability of the getQuota function */
  getRight?: boolean;
  /** URL of the database management tool */
  guiURL?: string;
  /** Availability of the optimize function */
  optimize?: boolean;
  /** Availability of the restore function */
  restore?: boolean;
}

/**
 * Struct which describs quota and available for a specific type of database
 */
export interface HostingWebDatabaseCreationDatabaseCapabilitiesOVH {
  /** Number of database left for creation */
  available?: number;
  /** Database software available on this platform */
  engines?: HostingWebDatabaseDatabaseTypeEnumOVH[];
  /** Technology use to isolate differents webhosting accounts */
  isolation?: HostingWebDatabaseDatabaseIsolationEnumOVH;
  /** Size of data can be used */
  quota?: ComplexTypeUnitAndValueLongOVH;
  /** Database offer name */
  type?: HostingWebDatabaseDatabaseCapabilitiesTypeEnumOVH;
}

/**
 * Database Available and Default version
 */
export interface HostingWebDatabaseAvailableVersionStructOVH {
  /** Database default version */
  default?: HostingWebDatabaseVersionEnumOVH;
  /** Database available version */
  list?: HostingWebDatabaseVersionEnumOVH[];
}

/**
 * Database service type
 * @nullable
 */
export type HostingWebDatabaseOVHDatabaseType = HostingWebDatabaseDatabaseServiceTypeEnumOVH | null;

/**
 * Database
 */
export interface HostingWebDatabaseOVH {
  /** Whether service database is deprecated */
  readonly databaseServiceDeprecated?: boolean;
  /**
   * Database service type
   * @nullable
   */
  readonly databaseType?: HostingWebDatabaseOVHDatabaseType;
  /** The number of available dumps associated to this database */
  readonly dumps?: number;
  /**
   * URL for the graphical user interface
   * @nullable
   */
  readonly guiURL?: string | null;
  /**
   * Date of the last check quota
   * @nullable
   */
  readonly lastCheck?: string | null;
  /** Mode of your database */
  readonly mode?: HostingWebDatabaseModeEnumOVH;
  /** Database name (like mydb.mysql.db or mydb.postgres.db) */
  readonly name?: string;
  /** The port on where to contact this database */
  readonly port?: number;
  /** Space allowed */
  readonly quotaSize?: ComplexTypeUnitAndValueDoubleOVH;
  /** Space used */
  readonly quotaUsed?: ComplexTypeUnitAndValueDoubleOVH;
  /**
   * Your database server name
   * @nullable
   */
  readonly server?: string | null;
  /** Database state */
  readonly state?: HostingWebDatabaseStateEnumOVH;
  /** The database status */
  readonly status?: HostingWebDatabaseStatusEnumOVH;
  /**
   * The task ID working on this database
   * @nullable
   */
  readonly taskId?: number | null;
  /** Type of your database */
  readonly type?: HostingWebDatabaseDatabaseTypeEnumOVH;
  /** Database user name */
  readonly user?: string;
  /** Database version following the database type */
  readonly version?: HostingWebDatabaseVersionEnumOVH;
  /** Indicates the current support state of your database version */
  readonly versionSupport?: HostingWebDatabaseSupportedVersionEnumOVH;
}

/**
 * Cron status
 */
export type HostingWebCronStatusEnumOVH = typeof HostingWebCronStatusEnumOVH[keyof typeof HostingWebCronStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebCronStatusEnumOVH = {
  disabled: 'disabled',
  enabled: 'enabled',
  suspended: 'suspended',
} as const;

/**
 * Cron state
 */
export type HostingWebCronStateEnumOVH = typeof HostingWebCronStateEnumOVH[keyof typeof HostingWebCronStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebCronStateEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  updating: 'updating',
} as const;

/**
 * Cron's language
 */
export type HostingWebCronLanguageEnumOVH = typeof HostingWebCronLanguageEnumOVH[keyof typeof HostingWebCronLanguageEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebCronLanguageEnumOVH = {
  node10: 'node10',
  node11: 'node11',
  node12: 'node12',
  node14: 'node14',
  node8: 'node8',
  node9: 'node9',
  other: 'other',
  php4: 'php4',
  php52: 'php5.2',
  php53: 'php5.3',
  php54: 'php5.4',
  php55: 'php5.5',
  php56: 'php5.6',
  php70: 'php7.0',
  php71: 'php7.1',
  php72: 'php7.2',
  php73: 'php7.3',
  php74: 'php7.4',
  php80: 'php8.0',
  php81: 'php8.1',
  php82: 'php8.2',
  php83: 'php8.3',
  php84: 'php8.4',
  python2: 'python2',
  python3: 'python3',
  ruby26: 'ruby2.6',
} as const;

/**
 * Hosting crons
 */
export interface HostingWebCronOVH {
  /** Command to execute */
  command?: string;
  /**
   * Description field for you
   * @nullable
   */
  description?: string | null;
  /**
   * Email used to receive error log ( stderr )
   * @nullable
   */
  email?: string | null;
  /** Frequency ( crontab format ) defined for the script ( minutes are ignored ) */
  frequency?: string;
  /** Cron's id */
  readonly id?: number;
  /** Cron language */
  language?: HostingWebCronLanguageEnumOVH;
  /** Cron state */
  readonly state?: HostingWebCronStateEnumOVH;
  /** Cron status */
  status?: HostingWebCronStatusEnumOVH;
}

/**
 * Configuration language versions enum
 */
export type HostingWebConfigurationVersionEnumOVH = typeof HostingWebConfigurationVersionEnumOVH[keyof typeof HostingWebConfigurationVersionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebConfigurationVersionEnumOVH = {
  'nodejs-12': 'nodejs-12',
  'nodejs-14': 'nodejs-14',
  'python-37': 'python-3.7',
  'python-38': 'python-3.8',
  'python-39': 'python-3.9',
  'ruby-26': 'ruby-2.6',
  'ruby-27': 'ruby-2.7',
} as const;

/**
 * Configuration state enum
 */
export type HostingWebConfigurationStateEnumOVH = typeof HostingWebConfigurationStateEnumOVH[keyof typeof HostingWebConfigurationStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebConfigurationStateEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  updating: 'updating',
} as const;

/**
 * Configuration languages enum
 */
export type HostingWebConfigurationLanguageEnumOVH = typeof HostingWebConfigurationLanguageEnumOVH[keyof typeof HostingWebConfigurationLanguageEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebConfigurationLanguageEnumOVH = {
  nodejs: 'nodejs',
  python: 'python',
  ruby: 'ruby',
} as const;

/**
 * Configuration env enum
 */
export type HostingWebConfigurationEnvEnumOVH = typeof HostingWebConfigurationEnvEnumOVH[keyof typeof HostingWebConfigurationEnvEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebConfigurationEnvEnumOVH = {
  development: 'development',
  production: 'production',
} as const;

/**
 * The Configuration of an hosting Power offer
 */
export interface HostingWebConfigurationOVH {
  /** Application environment */
  appEnv?: HostingWebConfigurationEnvEnumOVH;
  /**
   * Application launch script
   * @nullable
   */
  entryPoint?: string | null;
  /** Id of the current configuration */
  readonly id?: number;
  /** language chosen for the current hosting */
  language?: HostingWebConfigurationLanguageEnumOVH;
  /**
   * Directory of the application
   * @nullable
   */
  publicDir?: string | null;
  /** Status of current configuration */
  readonly status?: HostingWebConfigurationStateEnumOVH;
  /** version of the language chosen for the current hosting */
  version?: string;
}

/**
 * CDN status
 */
export type HostingWebCdnStatusEnumOVH = typeof HostingWebCdnStatusEnumOVH[keyof typeof HostingWebCdnStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebCdnStatusEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  flushing: 'flushing',
  reopening: 'reopening',
  suspended: 'suspended',
  suspending: 'suspending',
} as const;

/**
 * CDN service
 */
export interface HostingWebCdnOVH {
  /** Domain of this CDN */
  readonly domain?: string;
  /** Option CDN free with the hosting ? */
  readonly free?: boolean;
  /** Status of the CDN option */
  readonly status?: HostingWebCdnStatusEnumOVH;
  /**
   * The task ID working on this CDN
   * @nullable
   */
  readonly taskId?: number | null;
  /** Type of the CDN */
  readonly type?: string;
  /** Version of the CDN */
  readonly version?: string;
}

/**
 * Boost offer used
 * @nullable
 */
export type HostingWebBoostHistoryOVHBoostOffer = HostingWebOfferCapabilitiesEnumOVH | null;

/**
 * History of your boost requests
 */
export interface HostingWebBoostHistoryOVH {
  /** Account who requested the change */
  readonly accountId?: string;
  /**
   * Boost offer used
   * @nullable
   */
  readonly boostOffer?: HostingWebBoostHistoryOVHBoostOffer;
  /** The date when the change has been requested */
  readonly date?: string;
  /** Offer when the change was made */
  readonly offer?: HostingWebOfferCapabilitiesEnumOVH;
}

/**
 * List of backup types
 */
export type HostingWebBackupTypeEnumOVH = typeof HostingWebBackupTypeEnumOVH[keyof typeof HostingWebBackupTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebBackupTypeEnumOVH = {
  daily1: 'daily.1',
  daily2: 'daily.2',
  daily3: 'daily.3',
  weekly1: 'weekly.1',
  weekly2: 'weekly.2',
} as const;

/**
 * AttachedDomain vcs status
 */
export type HostingWebAttachedDomainVcsStatusEnumOVH = typeof HostingWebAttachedDomainVcsStatusEnumOVH[keyof typeof HostingWebAttachedDomainVcsStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebAttachedDomainVcsStatusEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  deploying: 'deploying',
  disabled: 'disabled',
  error: 'error',
  initialError: 'initialError',
} as const;

/**
 * attachedDomain status
 */
export type HostingWebAttachedDomainStatusEnumOVH = typeof HostingWebAttachedDomainStatusEnumOVH[keyof typeof HostingWebAttachedDomainStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebAttachedDomainStatusEnumOVH = {
  created: 'created',
  creating: 'creating',
  deleting: 'deleting',
  updating: 'updating',
} as const;

/**
 * DNS Record type
 */
export type HostingWebAttachedDomainRecordTypeEnumOVH = typeof HostingWebAttachedDomainRecordTypeEnumOVH[keyof typeof HostingWebAttachedDomainRecordTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebAttachedDomainRecordTypeEnumOVH = {
  A: 'A',
  AAAA: 'AAAA',
} as const;

/**
 * Attached domain record status
 */
export interface HostingWebAttachedDomainRecordStatusOVH {
  /** Whether DNS is configured */
  readonly dnsConfigured?: boolean;
  /** Whether IP is an OVH one */
  readonly isOvhIp?: boolean;
  /** DNS record type */
  readonly type?: HostingWebAttachedDomainRecordTypeEnumOVH;
}

/**
 * Recommended IPs for DNS records configuration
 */
export interface HostingWebAttachedDomainRecommendedIpsOVH {
  /** Recommended IPV4 */
  readonly recommendedIpV4?: readonly Ipv4OVH[];
  /** Recommended IPV6 */
  readonly recommendedIpV6?: readonly Ipv6OVH[];
}

/**
 * IP location of the domain linked
 * @nullable
 */
export type HostingWebAttachedDomainPublicAttachedDomainOVHIpLocation = HostingWebCountryEnumOVH | null;

/**
 * Public attached domain
 */
export interface HostingWebAttachedDomainPublicAttachedDomainOVH {
  /** Provides the capabilities related to your attachedDomain */
  readonly capabilities?: readonly HostingWebAttachedDomainCapabilitiesOVH[];
  /** whether or not attachedDomain is linked to the hosting cdn */
  readonly cdn?: HostingWebAttachedDomainCdnEnumOVH;
  /** Domain linked (fqdn) */
  readonly domain?: string;
  /** Firewall state for this path */
  readonly firewall?: HostingWebAttachedDomainFirewallEnumOVH;
  /**
   * IP location of the domain linked
   * @nullable
   */
  readonly ipLocation?: HostingWebAttachedDomainPublicAttachedDomainOVHIpLocation;
  /** Whether your CDN can be flushed */
  readonly isFlushable?: boolean;
  /**
   * Domain for separate the logs
   * @nullable
   */
  readonly ownLog?: string | null;
  /** Attached domain path */
  readonly path?: string;
  /**
   * The runtime configuration ID used on this domain
   * @nullable
   */
  readonly runtimeId?: number | null;
  /**
   * Put domain in SSL certificate
   * @nullable
   */
  readonly ssl?: boolean | null;
  /** Domain status */
  readonly status?: HostingWebAttachedDomainStatusEnumOVH;
  /**
   * The task ID working on this domain
   * @nullable
   */
  readonly taskId?: number | null;
  /** The status of the VCS synchronization */
  readonly vcsStatus?: HostingWebAttachedDomainVcsStatusEnumOVH;
}

/**
 * Method type
 */
export type HostingWebAttachedDomainMethodEnumOVH = typeof HostingWebAttachedDomainMethodEnumOVH[keyof typeof HostingWebAttachedDomainMethodEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebAttachedDomainMethodEnumOVH = {
  DELETE: 'DELETE',
  GET: 'GET',
  POST: 'POST',
  PUT: 'PUT',
} as const;

/**
 * Firewall state for this path
 */
export type HostingWebAttachedDomainFirewallEnumOVH = typeof HostingWebAttachedDomainFirewallEnumOVH[keyof typeof HostingWebAttachedDomainFirewallEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebAttachedDomainFirewallEnumOVH = {
  active: 'active',
  none: 'none',
} as const;

export type HostingWebAttachedDomainDigStatusOVHRecords = {[key: string]: HostingWebAttachedDomainRecordStatusOVH};

/**
 * Attached domain DNS status
 */
export interface HostingWebAttachedDomainDigStatusOVH {
  /** Attached domain */
  readonly domain?: string;
  readonly recommendedIps?: HostingWebAttachedDomainRecommendedIpsOVH;
  readonly records?: HostingWebAttachedDomainDigStatusOVHRecords;
}

/**
 * whether or not the attachedDomain is linked to the hosting cdn
 */
export type HostingWebAttachedDomainCdnEnumOVH = typeof HostingWebAttachedDomainCdnEnumOVH[keyof typeof HostingWebAttachedDomainCdnEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebAttachedDomainCdnEnumOVH = {
  active: 'active',
  none: 'none',
} as const;

/**
 * allowed attachedDomain's capabilities methods
 */
export type HostingWebAttachedDomainCapabilityMethodEnumOVH = typeof HostingWebAttachedDomainCapabilityMethodEnumOVH[keyof typeof HostingWebAttachedDomainCapabilityMethodEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebAttachedDomainCapabilityMethodEnumOVH = {
  DELETE: 'DELETE',
  GET: 'GET',
  POST: 'POST',
  PUT: 'PUT',
} as const;

/**
 * Attached domain Capability
 */
export interface HostingWebAttachedDomainCapabilitiesOVH {
  /** Capability description */
  readonly description?: string;
  /** Capability href */
  readonly href?: string;
  /** Capability key */
  readonly key?: string;
  /** Capability method */
  readonly method?: HostingWebAttachedDomainCapabilityMethodEnumOVH;
}

/**
 * IP location of the domain linked
 * @nullable
 */
export type HostingWebAttachedDomainOVHIpLocation = HostingWebCountryEnumOVH | null;

/**
 * Virtual service
 */
export interface HostingWebAttachedDomainOVH {
  /** Provides the capabilities related to your attachedDomain */
  readonly capabilities?: readonly HostingWebAttachedDomainCapabilitiesOVH[];
  /** Is linked to the hosting cdn */
  cdn?: HostingWebAttachedDomainCdnEnumOVH;
  /** Domain linked (fqdn) */
  readonly domain?: string;
  /** Firewall state for this path */
  firewall?: HostingWebAttachedDomainFirewallEnumOVH;
  /**
   * IP location of the domain linked
   * @nullable
   */
  readonly ipLocation?: HostingWebAttachedDomainOVHIpLocation;
  /** Provides information if your Cdn can be flushed or not */
  readonly isFlushable?: boolean;
  /**
   * Put domain for separate the logs
   * @nullable
   */
  ownLog?: string | null;
  /** Domain path, relative to your home directory */
  path?: string;
  /**
   * The runtime configuration ID used on this domain
   * @nullable
   */
  runtimeId?: number | null;
  /**
   * Put domain in ssl certificate
   * @nullable
   */
  ssl?: boolean | null;
  /** The domain status */
  readonly status?: HostingWebAttachedDomainStatusEnumOVH;
  /**
   * The task ID working on this domain
   * @nullable
   */
  readonly taskId?: number | null;
}

/**
 * Website creation capabilities of your hosting
 */
export interface HostingWebWebsiteCreationCapabilitiesOVH {
  /** Number of websites allowed by your hosting offer, -1 meaning unlimited */
  readonly allowedWebsites?: number;
  /** Number of existing websites on your hosting */
  readonly existingWebsites?: number;
}

/**
 * A website on your hosting
 */
export interface HostingWebWebsiteOVH {
  /** Domains of the website */
  readonly domains?: readonly HostingWebWebsiteDomainOVH[];
  /** Display name of the hosting */
  readonly hostingDisplayName?: string;
  /** Name of the hosting service */
  readonly hostingServiceName?: string;
  /** Website numeric identifier */
  readonly id?: number;
  /**
   * Customizable name of the website
   * @nullable
   */
  readonly name?: string | null;
  /** Relative path on the hosting filesystem the website is deployed into */
  readonly path?: string;
  /** Current status of the website */
  readonly status?: HostingWebWebsiteStatusEnumOVH;
  /** Branch of the repository containing the website source code to deploy */
  readonly vcsBranch?: string;
  /** URL of the repository containing the website source code to deploy */
  readonly vcsUrl?: string;
}

/**
 * VCS webhooks URLs for given hosting and VCS platform
 */
export interface HostingWebVcsWebhooksOVH {
  /** Webhook URL for push events */
  readonly push?: string;
}

/**
 * Supported VCS platforms
 */
export type HostingWebSupportedVcsEnumOVH = typeof HostingWebSupportedVcsEnumOVH[keyof typeof HostingWebSupportedVcsEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebSupportedVcsEnumOVH = {
  github: 'github',
} as const;

/**
 * Types of statistics available for the web hosting
 */
export type HostingWebStatisticsTypeEnumOVH = typeof HostingWebStatisticsTypeEnumOVH[keyof typeof HostingWebStatisticsTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebStatisticsTypeEnumOVH = {
  inftpCommands: 'in.ftpCommands',
  inhttpHits: 'in.httpHits',
  inhttpMeanResponseTime: 'in.httpMeanResponseTime',
  outtcpConn: 'out.tcpConn',
  syscpuUsage: 'sys.cpuUsage',
  sysworkerSpawnOverload: 'sys.workerSpawnOverload',
} as const;

/**
 * Available periods for statistics
 */
export type HostingWebStatisticsPeriodEnumOVH = typeof HostingWebStatisticsPeriodEnumOVH[keyof typeof HostingWebStatisticsPeriodEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebStatisticsPeriodEnumOVH = {
  daily: 'daily',
  monthly: 'monthly',
  weekly: 'weekly',
  yearly: 'yearly',
} as const;

/**
 * Hosting's state
 */
export type HostingWebStateEnumOVH = typeof HostingWebStateEnumOVH[keyof typeof HostingWebStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebStateEnumOVH = {
  active: 'active',
  bloqued: 'bloqued',
  maintenance: 'maintenance',
} as const;

/**
 * Traffic quota used
 * @nullable
 */
export type HostingWebServiceWithIAMOVHTrafficQuotaUsed = ComplexTypeUnitAndValueDoubleOVH | null;

/**
 * Traffic quota allowed ( null = unlimited )
 * @nullable
 */
export type HostingWebServiceWithIAMOVHTrafficQuotaSize = ComplexTypeUnitAndValueDoubleOVH | null;

/**
 * If your offer is old, return a recommended offer to migrate on
 * @nullable
 */
export type HostingWebServiceWithIAMOVHRecommendedOffer = HostingWebOfferEnumOVH | null;

/**
 * Space used
 * @nullable
 */
export type HostingWebServiceWithIAMOVHQuotaUsed = ComplexTypeUnitAndValueDoubleOVH | null;

/**
 * IAM resource metadata
 * @nullable
 */
export type HostingWebServiceWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * The recommended ipv6 for your hosting ( depends on hosting's linked services, e.g CDN or hostedSSL )
 * @nullable
 */
export type HostingWebServiceWithIAMOVHHostingIpv6 = Ipv6OVH | null;

/**
 * The recommended ip for your hosting ( depends on hosting's linked services, e.g CDN or hostedSSL )
 * @nullable
 */
export type HostingWebServiceWithIAMOVHHostingIp = Ipv4OVH | null;

/**
 * This direct ipv6 to your cluster ( usefull for application like api )
 * @nullable
 */
export type HostingWebServiceWithIAMOVHClusterIpv6 = Ipv6OVH | null;

/**
 * This direct ip to your cluster ( usefull for application like api )
 * @nullable
 */
export type HostingWebServiceWithIAMOVHClusterIp = Ipv4OVH | null;

/**
 * Current boost offer
 * @nullable
 */
export type HostingWebServiceWithIAMOVHBoostOffer = HostingWebOfferCapabilitiesEnumOVH | null;

/**
 * Different url to manage your service
 */
export interface HostingWebServiceAccessOVH {
  /** Address with url and port to manage files by ftp */
  ftp?: HostingWebAddressOVH;
  /** Address to see your webhosting without domain */
  http?: HostingWebAddressOVH;
  /** Address with url and port to manage webhosting by ssh */
  ssh?: HostingWebAddressOVH;
}

/**
 * Web Hosting
 */
export interface HostingWebServiceWithIAMOVH {
  /** Available offers for boost option */
  readonly availableBoostOffer?: readonly HostingWebAvailableOfferStructOVH[];
  /**
   * Current boost offer
   * @nullable
   */
  readonly boostOffer?: HostingWebServiceWithIAMOVHBoostOffer;
  /** Cluster name */
  readonly cluster?: string;
  /**
   * This direct ip to your cluster ( usefull for application like api )
   * @nullable
   */
  readonly clusterIp?: HostingWebServiceWithIAMOVHClusterIp;
  /**
   * This direct ipv6 to your cluster ( usefull for application like api )
   * @nullable
   */
  readonly clusterIpv6?: HostingWebServiceWithIAMOVHClusterIpv6;
  /**
   * Available clusterIp by countries
   * @nullable
   */
  readonly countriesIp?: readonly HostingWebCountriesIpOVH[] | null;
  /** Datacenter where this account is located */
  readonly datacenter?: string;
  /**
   * Set the name displayed in ManagerV6 for your hosting (max 50 chars)
   * @nullable
   */
  displayName?: string | null;
  /**
   * Filer name
   * @nullable
   */
  readonly filer?: string | null;
  /**
   * Has a CDN service linked on the hosting
   * @nullable
   */
  readonly hasCdn?: boolean | null;
  /**
   * Has a HostedSSL service linked on the hosting
   * @nullable
   */
  readonly hasHostedSsl?: boolean | null;
  /** Path of your home */
  readonly home?: string;
  /**
   * The recommended ip for your hosting ( depends on hosting's linked services, e.g CDN or hostedSSL )
   * @nullable
   */
  readonly hostingIp?: HostingWebServiceWithIAMOVHHostingIp;
  /**
   * The recommended ipv6 for your hosting ( depends on hosting's linked services, e.g CDN or hostedSSL )
   * @nullable
   */
  readonly hostingIpv6?: HostingWebServiceWithIAMOVHHostingIpv6;
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: HostingWebServiceWithIAMOVHIam;
  /**
   * /hosting/web/{serviceName}/ovhConfig is stored in cache. This date is the last refresh of this data
   * @nullable
   */
  readonly lastOvhConfigScan?: string | null;
  /** If set to true, service can manage more than only one certificate */
  readonly multipleSSL?: boolean;
  /** Hosting offer */
  readonly offer?: HostingWebOfferCapabilitiesEnumOVH;
  /** Hosting's OS */
  readonly operatingSystem?: HostingWebOperatingSystemEnumOVH;
  /** State of available php versions for this account */
  readonly phpVersions?: readonly HostingWebPhpVersionOVH[];
  /** Hosting's main login */
  readonly primaryLogin?: string;
  /** Space allowed */
  readonly quotaSize?: ComplexTypeUnitAndValueDoubleOVH;
  /**
   * Space used
   * @nullable
   */
  readonly quotaUsed?: HostingWebServiceWithIAMOVHQuotaUsed;
  /**
   * If your offer is old, return a recommended offer to migrate on
   * @nullable
   */
  readonly recommendedOffer?: HostingWebServiceWithIAMOVHRecommendedOffer;
  /** Hosting resource type */
  readonly resourceType?: HostingWebResourceEnumOVH;
  /** URLs to use to manage your webhosting */
  readonly serviceManagementAccess?: HostingWebServiceAccessOVH;
  /** Service name */
  readonly serviceName?: string;
  /** State of your hosting */
  readonly state?: HostingWebStateEnumOVH;
  /**
   * Use to link an external domain. ( This token has to be insert into a TXT field on your dns zone with ovhcontrol subdomain )
   * @nullable
   */
  readonly token?: string | null;
  /**
   * Traffic quota allowed ( null = unlimited )
   * @nullable
   */
  readonly trafficQuotaSize?: HostingWebServiceWithIAMOVHTrafficQuotaSize;
  /**
   * Traffic quota used
   * @nullable
   */
  readonly trafficQuotaUsed?: HostingWebServiceWithIAMOVHTrafficQuotaUsed;
  /** List of updates on your hosting */
  readonly updates?: readonly string[];
}

/**
 * Traffic quota used
 * @nullable
 */
export type HostingWebServiceOVHTrafficQuotaUsed = ComplexTypeUnitAndValueDoubleOVH | null;

/**
 * Traffic quota allowed ( null = unlimited )
 * @nullable
 */
export type HostingWebServiceOVHTrafficQuotaSize = ComplexTypeUnitAndValueDoubleOVH | null;

/**
 * If your offer is old, return a recommended offer to migrate on
 * @nullable
 */
export type HostingWebServiceOVHRecommendedOffer = HostingWebOfferEnumOVH | null;

/**
 * Space used
 * @nullable
 */
export type HostingWebServiceOVHQuotaUsed = ComplexTypeUnitAndValueDoubleOVH | null;

/**
 * The recommended ipv6 for your hosting ( depends on hosting's linked services, e.g CDN or hostedSSL )
 * @nullable
 */
export type HostingWebServiceOVHHostingIpv6 = Ipv6OVH | null;

/**
 * The recommended ip for your hosting ( depends on hosting's linked services, e.g CDN or hostedSSL )
 * @nullable
 */
export type HostingWebServiceOVHHostingIp = Ipv4OVH | null;

/**
 * This direct ipv6 to your cluster ( usefull for application like api )
 * @nullable
 */
export type HostingWebServiceOVHClusterIpv6 = Ipv6OVH | null;

/**
 * This direct ip to your cluster ( usefull for application like api )
 * @nullable
 */
export type HostingWebServiceOVHClusterIp = Ipv4OVH | null;

/**
 * Current boost offer
 * @nullable
 */
export type HostingWebServiceOVHBoostOffer = HostingWebOfferCapabilitiesEnumOVH | null;

/**
 * Web Hosting
 */
export interface HostingWebServiceOVH {
  /** Available offers for boost option */
  readonly availableBoostOffer?: readonly HostingWebAvailableOfferStructOVH[];
  /**
   * Current boost offer
   * @nullable
   */
  readonly boostOffer?: HostingWebServiceOVHBoostOffer;
  /** Cluster name */
  readonly cluster?: string;
  /**
   * This direct ip to your cluster ( usefull for application like api )
   * @nullable
   */
  readonly clusterIp?: HostingWebServiceOVHClusterIp;
  /**
   * This direct ipv6 to your cluster ( usefull for application like api )
   * @nullable
   */
  readonly clusterIpv6?: HostingWebServiceOVHClusterIpv6;
  /**
   * Available clusterIp by countries
   * @nullable
   */
  readonly countriesIp?: readonly HostingWebCountriesIpOVH[] | null;
  /** Datacenter where this account is located */
  readonly datacenter?: string;
  /**
   * Set the name displayed in ManagerV6 for your hosting (max 50 chars)
   * @nullable
   */
  displayName?: string | null;
  /**
   * Filer name
   * @nullable
   */
  readonly filer?: string | null;
  /**
   * Has a CDN service linked on the hosting
   * @nullable
   */
  readonly hasCdn?: boolean | null;
  /**
   * Has a HostedSSL service linked on the hosting
   * @nullable
   */
  readonly hasHostedSsl?: boolean | null;
  /** Path of your home */
  readonly home?: string;
  /**
   * The recommended ip for your hosting ( depends on hosting's linked services, e.g CDN or hostedSSL )
   * @nullable
   */
  readonly hostingIp?: HostingWebServiceOVHHostingIp;
  /**
   * The recommended ipv6 for your hosting ( depends on hosting's linked services, e.g CDN or hostedSSL )
   * @nullable
   */
  readonly hostingIpv6?: HostingWebServiceOVHHostingIpv6;
  /**
   * /hosting/web/{serviceName}/ovhConfig is stored in cache. This date is the last refresh of this data
   * @nullable
   */
  readonly lastOvhConfigScan?: string | null;
  /** If set to true, service can manage more than only one certificate */
  readonly multipleSSL?: boolean;
  /** Hosting offer */
  readonly offer?: HostingWebOfferCapabilitiesEnumOVH;
  /** Hosting's OS */
  readonly operatingSystem?: HostingWebOperatingSystemEnumOVH;
  /** State of available php versions for this account */
  readonly phpVersions?: readonly HostingWebPhpVersionOVH[];
  /** Hosting's main login */
  readonly primaryLogin?: string;
  /** Space allowed */
  readonly quotaSize?: ComplexTypeUnitAndValueDoubleOVH;
  /**
   * Space used
   * @nullable
   */
  readonly quotaUsed?: HostingWebServiceOVHQuotaUsed;
  /**
   * If your offer is old, return a recommended offer to migrate on
   * @nullable
   */
  readonly recommendedOffer?: HostingWebServiceOVHRecommendedOffer;
  /** Hosting resource type */
  readonly resourceType?: HostingWebResourceEnumOVH;
  /** URLs to use to manage your webhosting */
  readonly serviceManagementAccess?: HostingWebServiceAccessOVH;
  /** Service name */
  readonly serviceName?: string;
  /** State of your hosting */
  readonly state?: HostingWebStateEnumOVH;
  /**
   * Use to link an external domain. ( This token has to be insert into a TXT field on your dns zone with ovhcontrol subdomain )
   * @nullable
   */
  readonly token?: string | null;
  /**
   * Traffic quota allowed ( null = unlimited )
   * @nullable
   */
  readonly trafficQuotaSize?: HostingWebServiceOVHTrafficQuotaSize;
  /**
   * Traffic quota used
   * @nullable
   */
  readonly trafficQuotaUsed?: HostingWebServiceOVHTrafficQuotaUsed;
  /** List of updates on your hosting */
  readonly updates?: readonly string[];
}

/**
 * SSL input properties
 */
export interface HostingWebSSLInputOVH {
  /** certificate */
  certificate?: string;
  /** certificate chain */
  chain?: string;
  /** private key */
  key?: string;
}

/**
 * Hosted SSL properties
 */
export interface HostingWebSSLOVH {
  /** If the hostedssl is currently bound to a report */
  readonly isReportable?: boolean;
  /** Provider of the Hosted SSL */
  readonly provider?: HostingWebHostedsslProviderEnumOVH;
  /** Regenerable flag */
  readonly regenerable?: boolean;
  /** Status of the Hosted SSL */
  readonly status?: HostingWebHostedsslStatusEnumOVH;
  /**
   * The task ID working on this Hosted SSL
   * @nullable
   */
  readonly taskId?: number | null;
  /** Type of the Hosted SSL */
  readonly type?: HostingWebHostedsslTypeEnumOVH;
}

/**
 * Different Ruby versions available
 */
export type HostingWebRubyVersionAvailableEnumOVH = typeof HostingWebRubyVersionAvailableEnumOVH[keyof typeof HostingWebRubyVersionAvailableEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebRubyVersionAvailableEnumOVH = {
  'ruby-26': 'ruby-2.6',
} as const;

/**
 * Hosting's type
 */
export type HostingWebResourceEnumOVH = typeof HostingWebResourceEnumOVH[keyof typeof HostingWebResourceEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebResourceEnumOVH = {
  bestEffort: 'bestEffort',
  cloud: 'cloud',
  dedicated: 'dedicated',
  shared: 'shared',
} as const;

/**
 * Requested boost offer
 * @nullable
 */
export type HostingWebRequestBoostInputOVHOffer = HostingWebOfferEnumOVH | null;

/**
 * RequestBoost input properties
 */
export interface HostingWebRequestBoostInputOVH {
  /**
   * Requested boost offer
   * @nullable
   */
  offer?: HostingWebRequestBoostInputOVHOffer;
}

/**
 * Types of action you can request for your web hosting
 */
export type HostingWebRequestActionEnumOVH = typeof HostingWebRequestActionEnumOVH[keyof typeof HostingWebRequestActionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebRequestActionEnumOVH = {
  CHECK_QUOTA: 'CHECK_QUOTA',
  FLUSH_CACHE: 'FLUSH_CACHE',
  SCAN_ANTIHACK: 'SCAN_ANTIHACK',
} as const;

/**
 * Different Python versions available
 */
export type HostingWebPythonVersionAvailableEnumOVH = typeof HostingWebPythonVersionAvailableEnumOVH[keyof typeof HostingWebPythonVersionAvailableEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebPythonVersionAvailableEnumOVH = {
  'python-2': 'python-2',
  'python-3': 'python-3',
} as const;

/**
 * Task object type
 * @nullable
 */
export type HostingWebPublicTaskOVHObjectType = HostingWebTaskObjectTypeEnumOVH | null;

/**
 * Public task
 */
export interface HostingWebPublicTaskOVH {
  /**
   * Done date
   * @nullable
   */
  readonly doneDate?: string | null;
  /** Task function */
  readonly function?: HostingWebTaskFunctionEnumOVH;
  /** Task's id */
  readonly id?: number;
  /**
   * Last update date
   * @nullable
   */
  readonly lastUpdate?: string | null;
  /**
   * Task object id
   * @nullable
   */
  readonly objectId?: string | null;
  /**
   * Task object type
   * @nullable
   */
  readonly objectType?: HostingWebPublicTaskOVHObjectType;
  /** Start date */
  readonly startDate?: string;
  /** Task status */
  readonly status?: HostingWebTaskStatusEnumOVH;
}

/**
 * Different support of PHP versions
 */
export type HostingWebPhpVersionStateEnumOVH = typeof HostingWebPhpVersionStateEnumOVH[keyof typeof HostingWebPhpVersionStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebPhpVersionStateEnumOVH = {
  BETA: 'BETA',
  END_OF_LIFE: 'END_OF_LIFE',
  SECURITY_FIXES: 'SECURITY_FIXES',
  SUPPORTED: 'SUPPORTED',
} as const;

/**
 * Different PHP versions available
 */
export type HostingWebPhpVersionAvailableEnumOVH = typeof HostingWebPhpVersionAvailableEnumOVH[keyof typeof HostingWebPhpVersionAvailableEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebPhpVersionAvailableEnumOVH = {
  'phpfpm-56': 'phpfpm-5.6',
  'phpfpm-70': 'phpfpm-7.0',
  'phpfpm-71': 'phpfpm-7.1',
  'phpfpm-72': 'phpfpm-7.2',
  'phpfpm-73': 'phpfpm-7.3',
  'phpfpm-74': 'phpfpm-7.4',
  'phpfpm-80': 'phpfpm-8.0',
  'phpfpm-81': 'phpfpm-8.1',
  'phpfpm-82': 'phpfpm-8.2',
  'phpfpm-83': 'phpfpm-8.3',
  'phpfpm-84': 'phpfpm-8.4',
} as const;

/**
 * State of available php versions for this account
 */
export interface HostingWebPhpVersionOVH {
  /** Current support of this php version */
  support?: HostingWebPhpVersionStateEnumOVH;
  /** PHP version */
  version?: string;
}

/**
 * Struct which recommend default values on ovhConfig file
 */
export interface HostingWebOvhConfigRecommendedValuesOVH {
  /** Container to run this website */
  container?: HostingWebOvhconfigContainerEnumOVH;
  /** Engine name */
  engineName?: HostingWebOvhConfigEngineNameEnumOVH;
  /** PHP version */
  engineVersion?: HostingWebOvhConfigAvailableEngineVersionEnumOVH;
  /** Environment configuration */
  environment?: HostingWebOvhConfigEnvironmentEnumOVH;
  /** Configuration for http firewall */
  httpFirewall?: HostingWebOvhConfigHttpFirewallEnumOVH;
}

/**
 * Struct which describes version and container image available
 */
export interface HostingWebOvhConfigCapabilitiesOVH {
  /** Container image available */
  containerImage?: string[];
  /** PHP version */
  version?: HostingWebOvhConfigAvailableEngineVersionEnumOVH;
}

/**
 * Hosting's OS
 */
export type HostingWebOperatingSystemEnumOVH = typeof HostingWebOperatingSystemEnumOVH[keyof typeof HostingWebOperatingSystemEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebOperatingSystemEnumOVH = {
  linux: 'linux',
} as const;

/**
 * Hosting's offer
 */
export type HostingWebOfferEnumOVH = typeof HostingWebOfferEnumOVH[keyof typeof HostingWebOfferEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebOfferEnumOVH = {
  CLOUDWEB_1: 'CLOUDWEB_1',
  CLOUDWEB_2: 'CLOUDWEB_2',
  CLOUDWEB_3: 'CLOUDWEB_3',
  KS: 'KS',
  PERFORMANCE_1: 'PERFORMANCE_1',
  PERFORMANCE_2: 'PERFORMANCE_2',
  PERFORMANCE_3: 'PERFORMANCE_3',
  PERFORMANCE_4: 'PERFORMANCE_4',
  PERSO: 'PERSO',
  POWER_BETA_1: 'POWER_BETA_1',
  PRO: 'PRO',
  START: 'START',
} as const;

/**
 * Hosting's offer
 */
export type HostingWebOfferCapabilitiesEnumOVH = typeof HostingWebOfferCapabilitiesEnumOVH[keyof typeof HostingWebOfferCapabilitiesEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebOfferCapabilitiesEnumOVH = {
  '1000gp': '1000gp',
  '20gp': '20gp',
  '240gp': '240gp',
  '240pack': '240pack',
  '240plan': '240plan',
  '300gp': '300gp',
  '60gp': '60gp',
  '720pack': '720pack',
  '720plan': '720plan',
  '90pack': '90pack',
  '90plan': '90plan',
  CLOUDWEB_1: 'CLOUDWEB_1',
  CLOUDWEB_2: 'CLOUDWEB_2',
  CLOUDWEB_3: 'CLOUDWEB_3',
  KS: 'KS',
  PERFORMANCE_1: 'PERFORMANCE_1',
  PERFORMANCE_2: 'PERFORMANCE_2',
  PERFORMANCE_3: 'PERFORMANCE_3',
  PERFORMANCE_4: 'PERFORMANCE_4',
  PERSO: 'PERSO',
  POWER_BETA_1: 'POWER_BETA_1',
  PRO: 'PRO',
  START: 'START',
  business: 'business',
  cloudweb1: 'cloudweb1',
  cloudweb2: 'cloudweb2',
  cloudweb3: 'cloudweb3',
  cloudwebbetax1: 'cloudwebbetax1',
  depro2012: 'depro2012',
  deprol2012: 'deprol2012',
  deproxl2012: 'deproxl2012',
  deproxxl2012: 'deproxxl2012',
  destart2012: 'destart2012',
  destartl2012: 'destartl2012',
  destartxl2012: 'destartxl2012',
  domainpack: 'domainpack',
  'hosting-free-100m': 'hosting-free-100m',
  'hosting-performance-1': 'hosting-performance-1',
  'hosting-performance-2': 'hosting-performance-2',
  'hosting-performance-3': 'hosting-performance-3',
  'hosting-performance-4': 'hosting-performance-4',
  'hosting-perso': 'hosting-perso',
  'hosting-pro': 'hosting-pro',
  'hosting-starter': 'hosting-starter',
  'hosting-starter-ovh': 'hosting-starter-ovh',
  hostingAtScaleX128: 'hostingAtScaleX128',
  hostingAtScaleX16: 'hostingAtScaleX16',
  hostingAtScaleX20: 'hostingAtScaleX20',
  hostingAtScaleX24: 'hostingAtScaleX24',
  hostingAtScaleX32: 'hostingAtScaleX32',
  hostingAtScaleX64: 'hostingAtScaleX64',
  hostingAtScaleX8: 'hostingAtScaleX8',
  itbusiness2012: 'itbusiness2012',
  itperso2012: 'itperso2012',
  itpremium2012: 'itpremium2012',
  kimsufi2015: 'kimsufi2015',
  mailpack: 'mailpack',
  mailplan: 'mailplan',
  mediapack: 'mediapack',
  mediaplan: 'mediaplan',
  ovhpro1To: 'ovhpro1To',
  ovhpro2To: 'ovhpro2To',
  ovhpro5To: 'ovhpro5To',
  paas2014beta: 'paas2014beta',
  perf2014x1: 'perf2014x1',
  perf2014x2: 'perf2014x2',
  perf2014x3: 'perf2014x3',
  perf2014x4: 'perf2014x4',
  perso2010: 'perso2010',
  perso2014: 'perso2014',
  powerBeta1: 'powerBeta1',
  powerbeta1: 'powerbeta1',
  premium: 'premium',
  pro2010: 'pro2010',
  pro2014: 'pro2014',
  start10g: 'start10g',
  start10m: 'start10m',
  start1g: 'start1g',
  start1ges: 'start1ges',
  start1m: 'start1m',
  start5g: 'start5g',
  starter: 'starter',
  xxlpack: 'xxlpack',
  xxlplan: 'xxlplan',
} as const;

/**
 * Different NodeJs versions available
 */
export type HostingWebNodejsVersionAvailableEnumOVH = typeof HostingWebNodejsVersionAvailableEnumOVH[keyof typeof HostingWebNodejsVersionAvailableEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebNodejsVersionAvailableEnumOVH = {
  'nodejs-10': 'nodejs-10',
  'nodejs-11': 'nodejs-11',
  'nodejs-12': 'nodejs-12',
  'nodejs-8': 'nodejs-8',
  'nodejs-9': 'nodejs-9',
} as const;

/**
 * A module specifically packaged by OVH
 */
export interface HostingWebModuleListOVH {
  /** Is the module available? */
  readonly active?: boolean;
  /** The type of the admin name */
  readonly adminNameType?: HostingWebModuleAdminNameTypeEnumOVH;
  /** The packager of this module for OVH */
  readonly author?: string;
  /** The branch of the module */
  readonly branch?: HostingWebModuleBranchEnumOVH;
  /** The ID of the module */
  readonly id?: number;
  /** The keywords for this module */
  readonly keywords?: readonly string[];
  /** All available languages for this module */
  readonly language?: readonly HostingWebModuleLanguageEnumOVH[];
  /** Minimal language version required to run this module */
  readonly languageRequirement?: ComplexTypeUnitAndValueStringOVH;
  /** Is this the latest version available? */
  readonly latest?: boolean;
  /** The name of the module */
  readonly name?: string;
  /** Size of the module */
  readonly size?: ComplexTypeUnitAndValueDoubleOVH;
  /** The IDs of the module you can upgrade to */
  readonly upgradeFrom?: readonly number[];
  /** The version of the module */
  readonly version?: string;
}

/**
 * Metrics token
 */
export interface HostingWebMetricsTokenOVH {
  /** Backend url */
  readonly endpoint?: string;
  /** Token expiration date */
  readonly expiry?: string;
  /** Generated token */
  readonly token?: string;
}

/**
 * Web supported languages
 */
export type HostingWebLanguagesEnumOVH = typeof HostingWebLanguagesEnumOVH[keyof typeof HostingWebLanguagesEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebLanguagesEnumOVH = {
  node10: 'node10',
  node11: 'node11',
  node12: 'node12',
  node14: 'node14',
  node8: 'node8',
  node9: 'node9',
  other: 'other',
  php4: 'php4',
  php52: 'php5.2',
  php53: 'php5.3',
  php54: 'php5.4',
  php55: 'php5.5',
  php56: 'php5.6',
  php70: 'php7.0',
  php71: 'php7.1',
  php72: 'php7.2',
  php73: 'php7.3',
  php74: 'php7.4',
  php80: 'php8.0',
  php81: 'php8.1',
  php82: 'php8.2',
  php83: 'php8.3',
  php84: 'php8.4',
  python2: 'python2',
  python3: 'python3',
  ruby26: 'ruby2.6',
} as const;

/**
 * Key information
 */
export interface HostingWebKeyOVH {
  /** Public key */
  readonly publicKey?: string;
}

/**
 * Highlight tips for offer
 */
export type HostingWebHighLightEnumOVH = typeof HostingWebHighLightEnumOVH[keyof typeof HostingWebHighLightEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebHighLightEnumOVH = {
  'best-seller': 'best-seller',
  new: 'new',
} as const;

/**
 * Environment variables set into your webhosting account
 */
export interface HostingWebEnvVarInputOVH {
  /** Name of the variable */
  key: string;
  /** Type of variable set */
  type: HostingWebEnvVarTypeEnumOVH;
  /** Value of the variable */
  value: string;
}

/**
 * Environment variables set into your webhosting account
 */
export interface HostingWebEnvVarOVH {
  /** Name of the variable */
  readonly key?: string;
  /** The environnement variable status */
  readonly status?: HostingWebEnvVarStatusEnumOVH;
  /**
   * The task ID working on this variable
   * @nullable
   */
  readonly taskId?: number | null;
  /** Type of variable set */
  readonly type?: HostingWebEnvVarTypeEnumOVH;
  /** Value of the variable */
  value?: string;
}

/**
 * Disk type available
 */
export type HostingWebDiskTypeEnumOVH = typeof HostingWebDiskTypeEnumOVH[keyof typeof HostingWebDiskTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDiskTypeEnumOVH = {
  HDD: 'HDD',
  SSD: 'SSD',
} as const;

/**
 * Disk properties (size and type of disk)
 */
export interface HostingWebDiskTypeOVH {
  /** Type of the disk */
  type?: HostingWebDiskTypeEnumOVH;
  /** Unit for disk size */
  unit?: string;
  /** Size of the disk */
  value?: number;
}

/**
 * Available datacenters
 */
export type HostingWebDatacenterEnumOVH = typeof HostingWebDatacenterEnumOVH[keyof typeof HostingWebDatacenterEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebDatacenterEnumOVH = {
  bhs: 'bhs',
  bhs1: 'bhs1',
  gra: 'gra',
  gra1: 'gra1',
  gra2: 'gra2',
  gra3: 'gra3',
  p19: 'p19',
} as const;

/**
 * Language available for cron script
 */
export interface HostingWebCronLanguageAvailableOVH {
  /** NodeJS versions */
  nodejs?: HostingWebNodejsVersionAvailableEnumOVH[];
  /** Php versions */
  php?: HostingWebPhpVersionAvailableEnumOVH[];
  /** Python versions */
  python?: HostingWebPythonVersionAvailableEnumOVH[];
  /** Ruby versions */
  ruby?: HostingWebRubyVersionAvailableEnumOVH[];
}

/**
 * Cron
 */
export interface HostingWebCronOVH {
  /** Command to execute */
  command: string;
  /**
   * Description field for you
   * @nullable
   */
  description?: string | null;
  /**
   * Email used to receive error log (stderr)
   * @nullable
   */
  email?: string | null;
  /** Frequency (crontab format) defined for the script (minutes are ignored) */
  frequency: string;
  /** Cron's id */
  readonly id?: number;
  /** Cron language */
  language: HostingWebLanguagesEnumOVH;
  /** Cron language */
  readonly state?: HostingWebCronStateEnumOVH;
  /** Cron status */
  status?: HostingWebCronStatusEnumOVH;
}

/**
 * Struct which describes mail offer available and his quota
 */
export interface HostingWebCreationEmailCapabilitiesOVH {
  /** Number of email available for creation */
  available?: number;
  /** Email account capacity */
  quota?: ComplexTypeUnitAndValueLongOVH;
}

/**
 * Available cluster countries
 */
export type HostingWebCountryEnumOVH = typeof HostingWebCountryEnumOVH[keyof typeof HostingWebCountryEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HostingWebCountryEnumOVH = {
  BE: 'BE',
  CA: 'CA',
  CZ: 'CZ',
  DE: 'DE',
  ES: 'ES',
  FI: 'FI',
  FR: 'FR',
  IE: 'IE',
  IT: 'IT',
  LT: 'LT',
  NL: 'NL',
  PL: 'PL',
  PT: 'PT',
  UK: 'UK',
} as const;

/**
 * The cluster ipv6
 * @nullable
 */
export type HostingWebCountriesIpOVHIpv6 = Ipv6OVH | null;

/**
 * The cluster ip
 * @nullable
 */
export type HostingWebCountriesIpOVHIp = Ipv4OVH | null;

/**
 * Available clusterIp by country
 */
export interface HostingWebCountriesIpOVH {
  /** The whois country of the ip */
  readonly country?: HostingWebCountryEnumOVH;
  /**
   * The cluster ip
   * @nullable
   */
  readonly ip?: HostingWebCountriesIpOVHIp;
  /**
   * The cluster ipv6
   * @nullable
   */
  readonly ipv6?: HostingWebCountriesIpOVHIpv6;
}

/**
 * Traffic quota size for your hosting ( null for unlimited )
 * @nullable
 */
export type HostingWebCapabilitiesOVHTraffic = ComplexTypeUnitAndValueDoubleOVH | null;

/**
 * Marketing information about the current offer
 * @nullable
 */
export type HostingWebCapabilitiesOVHHighlight = HostingWebHighLightEnumOVH | null;

/**
 * Disk capacity and type available for your hosting ( null for unlimited )
 * @nullable
 */
export type HostingWebCapabilitiesOVHDisk = HostingWebDiskTypeOVH | null;

/**
 * Struct which describs an offer
 */
export interface HostingWebCapabilitiesOVH {
  /** Number of domains you can attach to your hosting */
  attachedDomains?: number;
  /** Does the offer allow crontab */
  crontab?: boolean;
  /** Number of database engines allowed for your hosting */
  databaseEngines?: number;
  /** Describe all databases type you can have */
  databases?: HostingWebDatabaseCreationDatabaseCapabilitiesOVH[];
  /**
   * Disk capacity and type available for your hosting ( null for unlimited )
   * @nullable
   */
  disk?: HostingWebCapabilitiesOVHDisk;
  /** Describe all email offer you can have */
  emails?: HostingWebCreationEmailCapabilitiesOVH;
  /** Number of environment variables allowed for your hosting */
  envVars?: number;
  /** Number of ftp user you can create */
  extraUsers?: number;
  /** Does the offer allow access to web files browser? */
  filesBrowser?: boolean;
  /**
   * Marketing information about the current offer
   * @nullable
   */
  highlight?: HostingWebCapabilitiesOVHHighlight;
  /** Language available for cron script */
  languages?: HostingWebCronLanguageAvailableOVH;
  /** Does the offer allow 1-click modules? */
  moduleOneClick?: boolean;
  /** Describe all privateDatabases type you can have */
  privateDatabases?: HostingWebDatabaseCreationDatabaseCapabilitiesOVH[];
  /** Number of runtimes allowed for your hosting */
  runtimes?: number;
  /**
   * Number of sites recommended for your hosting ( -1 for unlimited )
   * @nullable
   */
  sitesRecommended?: number | null;
  /** Does the offer allow SSH access */
  ssh?: boolean;
  /**
   * Traffic quota size for your hosting ( null for unlimited )
   * @nullable
   */
  traffic?: HostingWebCapabilitiesOVHTraffic;
}

/**
 * CDN properties
 */
export interface HostingWebCDNOVH {
  /** Domain of this CDN */
  readonly domain?: string;
  /** Whether CDN is free with the hosting */
  readonly free?: boolean;
  /** Status of the CDN option */
  readonly status?: HostingWebCdnStatusEnumOVH;
  /**
   * The task ID working on this CDN
   * @nullable
   */
  readonly taskId?: number | null;
  /** Type of the CDN */
  readonly type?: string;
  /** Version of the CDN */
  readonly version?: string;
}

/**
 * Boost offer used
 * @nullable
 */
export type HostingWebBoostHistoryOVHBoostOffer = HostingWebOfferCapabilitiesEnumOVH | null;

/**
 * Boost History
 */
export interface HostingWebBoostHistoryOVH {
  /**  Account who requested the change */
  readonly accountId?: string;
  /**
   * Boost offer used
   * @nullable
   */
  readonly boostOffer?: HostingWebBoostHistoryOVHBoostOffer;
  /** The date when the change has been requested */
  readonly date?: string;
  /** Offer when the change was made */
  readonly offer?: HostingWebOfferCapabilitiesEnumOVH;
}

/**
 * Struct which describs an boost offer from a service
 */
export interface HostingWebAvailableOfferStructOVH {
  /** Available boost offer */
  offer?: HostingWebOfferEnumOVH;
  /** The price in month for this boost offer */
  price?: OrderPriceOVH;
}

/**
 * Change attached domain's DNS to the IP of the country
 * @nullable
 */
export type HostingWebAttachedDomainOVHIpLocation = HostingWebCountryEnumOVH | null;

/**
 * Whether the firewall is active for this domain
 * @nullable
 */
export type HostingWebAttachedDomainOVHFirewall = HostingWebAttachedDomainFirewallEnumOVH | null;

/**
 * Whether the attached domain is linked to the hosting CDN
 * @nullable
 */
export type HostingWebAttachedDomainOVHCdn = HostingWebAttachedDomainCdnEnumOVH | null;

/**
 * Attached domain
 */
export interface HostingWebAttachedDomainOVH {
  /**
   * If set to true, DNS zone will not be updated by the operation
   * @nullable
   */
  bypassDNSConfiguration?: boolean | null;
  /**
   * Whether the attached domain is linked to the hosting CDN
   * @nullable
   */
  cdn?: HostingWebAttachedDomainOVHCdn;
  /**
   * Domain to link
   * @nullable
   */
  domain?: string | null;
  /**
   * Whether the firewall is active for this domain
   * @nullable
   */
  firewall?: HostingWebAttachedDomainOVHFirewall;
  /**
   * Change attached domain's DNS to the IP of the country
   * @nullable
   */
  ipLocation?: HostingWebAttachedDomainOVHIpLocation;
  /**
   * Domain to separate the logs on
   * @nullable
   */
  ownLog?: string | null;
  /**
   * Path of the attached domain
   * @nullable
   */
  path?: string | null;
  /**
   * The runtime configuration ID used on this domain
   * @nullable
   */
  runtimeId?: number | null;
  /**
   * Whether to put the attached domain in the SSL certificate
   * @nullable
   */
  ssl?: boolean | null;
}

/**
 * Url and port of a service
 */
export interface HostingWebAddressOVH {
  /** Port to use to access to the service */
  port?: number;
  /** Url to contact the service */
  url?: string;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * A numeric value tagged with its unit
 */
export interface ComplexTypeUnitAndValueStringOVH {
  unit?: string;
  value?: string;
}

/**
 * A numeric value tagged with its unit
 */
export interface ComplexTypeUnitAndValueLongOVH {
  unit?: string;
  value?: number;
}

/**
 * A numeric value tagged with its unit
 */
export interface ComplexTypeUnitAndValueDoubleOVH {
  unit?: string;
  value?: number;
}

/**
 * A timestamp associated to a value
 */
export interface ComplexTypeChartTimestampValueOVH {
  timestamp?: number;
  /** @nullable */
  value?: number | null;
}

/**
 * A value set tagged with its unit and serie name
 */
export interface ComplexTypeChartSerieComplexTypeChartTimestampValueOVH {
  serieName?: string;
  unit?: string;
  values?: ComplexTypeChartTimestampValueOVH[];
}

/**
 * Shared CDN offer
 * @nullable
 */
export type CdnOperationParameterOVHOffer = CdnOperationOfferEnumOVH | null;

/**
 * CDN anycast IP
 * @nullable
 */
export type CdnOperationParameterOVHAnycastIp = Ipv4OVH | null;

/**
 * Operation parameter
 */
export interface CdnOperationParameterOVH {
  /**
   * CDN anycast IP
   * @nullable
   */
  readonly anycastIp?: CdnOperationParameterOVHAnycastIp;
  /**
   * Cluster name
   * @nullable
   */
  readonly cluster?: string | null;
  /**
   * Date
   * @nullable
   */
  readonly date?: string | null;
  /**
   * Domain name
   * @nullable
   */
  readonly domainName?: string | null;
  /**
   * CDN certificate fingerprint
   * @nullable
   */
  readonly fingerprint?: string | null;
  /**
   * Shared CDN offer
   * @nullable
   */
  readonly offer?: CdnOperationParameterOVHOffer;
  /**
   * Pattern to purge on CDN
   * @nullable
   */
  readonly pattern?: string | null;
  /**
   * Service name
   * @nullable
   */
  readonly service?: string | null;
  /**
   * CDN ssl id
   * @nullable
   */
  readonly sslId?: number | null;
}

/**
 * Operation details
 */
export interface CdnOperationOVH {
  /**
   * Comment
   * @nullable
   */
  readonly comment?: string | null;
  /** Creation date */
  readonly creationDate?: string;
  /** Operation function */
  readonly function?: CdnOperationFunctionEnumOVH;
  /** Operation id */
  readonly id?: number;
  /** Operation parameter */
  readonly parameter?: CdnOperationParameterOVH;
  /** Shared CDN service */
  readonly service?: string;
  /** Operation status */
  readonly status?: CdnOperationStatusEnumOVH;
  /** Next execution date */
  readonly todoDate?: string;
  /** Last execution date */
  readonly updatedDate?: string;
}

/**
 * Logs archive URL
 */
export interface CdnLogsOVH {
  /** URL to logs archive */
  readonly url?: string;
  /** URL validity */
  readonly validity?: string;
}

/**
 * Statistics Datapoint
 */
export interface CdnDomainStatisticsPointOVH {
  /** Timestamp */
  readonly timestamp?: number;
  /**
   * Datapoint value
   * @nullable
   */
  readonly value?: number | null;
}

/**
 * Domain Statistics Datapoints
 */
export interface CdnDomainStatisticsOVH {
  /** name of the serie */
  readonly name?: CdnDomainStatisticsNameEnumOVH;
  /** List of DataPoints */
  readonly points?: readonly CdnDomainStatisticsPointOVH[];
  /** Unit of the serie */
  readonly unit?: CdnDomainStatisticsUnitEnumOVH;
}

/**
 * Additional information about option
 */
export interface CdnDomainOptionExtraOVH {
  /**
   * Maximum usage of the option
   * @nullable
   */
  quota?: number | null;
  /**
   * Current usage of the option
   * @nullable
   */
  usage?: number | null;
}

/**
 * Action to apply on query parameters
 * @nullable
 */
export type CdnDomainOptionConfigOVHQueryParameters = CdnOptionQueryParametersEnumOVH | null;

/**
 * Option pattern type
 * @nullable
 */
export type CdnDomainOptionConfigOVHPatternType = CdnOptionPatternTypeEnumOVH | null;

/**
 * Option configuration
 */
export interface CdnDomainOptionConfigOVH {
  /**
   * URL used for Mobile Redirect
   * @nullable
   */
  destination?: string | null;
  /**
   * Follow Uri on Mobile Redirect
   * @nullable
   */
  followUri?: boolean | null;
  /**
   * Authorized Origins separated by a comma
   * @nullable
   */
  origins?: string | null;
  /**
   * Option pattern type
   * @nullable
   */
  patternType?: CdnDomainOptionConfigOVHPatternType;
  /**
   * Cache Rule priority (lower is the strongest priority)
   * @nullable
   */
  priority?: number | null;
  /**
   * Action to apply on query parameters
   * @nullable
   */
  queryParameters?: CdnDomainOptionConfigOVHQueryParameters;
  /**
   * List of URI
   * @nullable
   */
  resources?: string[] | null;
  /**
   * Redirection HTTP Code
   * @nullable
   */
  statusCode?: number | null;
  /**
   * Cache time in seconds
   * @nullable
   */
  ttl?: number | null;
}

/**
 * Additional information about option
 * @nullable
 */
export type CdnDomainOptionOVHExtra = CdnDomainOptionExtraOVH | null;

/**
 * Option configuration
 * @nullable
 */
export type CdnDomainOptionOVHConfig = CdnDomainOptionConfigOVH | null;

/**
 * Option details
 */
export interface CdnDomainOptionOVH {
  /**
   * Option configuration
   * @nullable
   */
  config?: CdnDomainOptionOVHConfig;
  /** Enable / Disable the option */
  enabled: boolean;
  /**
   * Additional information about option
   * @nullable
   */
  extra?: CdnDomainOptionOVHExtra;
  /** Option name */
  readonly name?: string;
  /**
   * Url pattern
   * @nullable
   */
  pattern?: string | null;
  /** Option type */
  type: CdnOptionTypeEnumOVH;
}

/**
 * Option configuration
 * @nullable
 */
export type CdnDomainAddOptionOVHConfig = CdnDomainOptionConfigOVH | null;

/**
 * Option details
 */
export interface CdnDomainAddOptionOVH {
  /**
   * Option configuration
   * @nullable
   */
  config?: CdnDomainAddOptionOVHConfig;
  /** Enable / Disable the option */
  enabled: boolean;
  /** Option name */
  name: string;
  /**
   * Url pattern
   * @nullable
   */
  pattern?: string | null;
  /** Option type */
  type: CdnOptionTypePostEnumOVH;
}

/**
 * Domain details
 */
export interface CdnDomainOVH {
  /** Creation date */
  readonly creationDate?: string;
  /** Domain name */
  readonly name?: string;
  /** The domain configuration has been updated, it needs a refresh */
  readonly needRefresh?: boolean;
  /** Domain status */
  readonly status?: CdnDomainStatusEnumOVH;
  /** Last update date */
  readonly updatedDate?: string;
}

/**
 * Type of value
 * @nullable
 */
export type CdnAvailableOptionsConfigConstraintsOVHType = CdnOptionConfigParamTypeEnumOVH | null;

/**
 * Option configuration constraints
 */
export interface CdnAvailableOptionsConfigConstraintsOVH {
  /**
   * Maximum number of items in value
   * @nullable
   */
  readonly length?: number | null;
  /**
   * Maximum value
   * @nullable
   */
  readonly maximum?: number | null;
  /**
   * Description of value
   * @nullable
   */
  readonly message?: string | null;
  /**
   * Minimum value
   * @nullable
   */
  readonly minimum?: number | null;
  /**
   * Type of value
   * @nullable
   */
  readonly type?: CdnAvailableOptionsConfigConstraintsOVHType;
}

/**
 * Cache time in seconds
 * @nullable
 */
export type CdnAvailableOptionsConfigOVHTtl = CdnAvailableOptionsConfigConstraintsOVH | null;

/**
 * Redirection HTTP Code
 * @nullable
 */
export type CdnAvailableOptionsConfigOVHStatusCode = CdnAvailableOptionsConfigConstraintsOVH | null;

/**
 * List of URI
 * @nullable
 */
export type CdnAvailableOptionsConfigOVHResources = CdnAvailableOptionsConfigConstraintsOVH | null;

/**
 * Action to apply on query parameters
 * @nullable
 */
export type CdnAvailableOptionsConfigOVHQueryParameters = CdnAvailableOptionsConfigConstraintsOVH | null;

/**
 * Cache Rule priority (lower is the strongest priority)
 * @nullable
 */
export type CdnAvailableOptionsConfigOVHPriority = CdnAvailableOptionsConfigConstraintsOVH | null;

/**
 * Option pattern type
 * @nullable
 */
export type CdnAvailableOptionsConfigOVHPatternType = CdnAvailableOptionsConfigConstraintsOVH | null;

/**
 * Authorized Origins separated by a comma
 * @nullable
 */
export type CdnAvailableOptionsConfigOVHOrigins = CdnAvailableOptionsConfigConstraintsOVH | null;

/**
 * Follow Uri on Mobile Redirect
 * @nullable
 */
export type CdnAvailableOptionsConfigOVHFollowUri = CdnAvailableOptionsConfigConstraintsOVH | null;

/**
 * URL used for Mobile Redirect
 * @nullable
 */
export type CdnAvailableOptionsConfigOVHDestination = CdnAvailableOptionsConfigConstraintsOVH | null;

/**
 * Option configuration
 */
export interface CdnAvailableOptionsConfigOVH {
  /**
   * URL used for Mobile Redirect
   * @nullable
   */
  readonly destination?: CdnAvailableOptionsConfigOVHDestination;
  /**
   * Follow Uri on Mobile Redirect
   * @nullable
   */
  readonly followUri?: CdnAvailableOptionsConfigOVHFollowUri;
  /**
   * Authorized Origins separated by a comma
   * @nullable
   */
  readonly origins?: CdnAvailableOptionsConfigOVHOrigins;
  /**
   * Option pattern type
   * @nullable
   */
  readonly patternType?: CdnAvailableOptionsConfigOVHPatternType;
  /**
   * Cache Rule priority (lower is the strongest priority)
   * @nullable
   */
  readonly priority?: CdnAvailableOptionsConfigOVHPriority;
  /**
   * Action to apply on query parameters
   * @nullable
   */
  readonly queryParameters?: CdnAvailableOptionsConfigOVHQueryParameters;
  /**
   * List of URI
   * @nullable
   */
  readonly resources?: CdnAvailableOptionsConfigOVHResources;
  /**
   * Redirection HTTP Code
   * @nullable
   */
  readonly statusCode?: CdnAvailableOptionsConfigOVHStatusCode;
  /**
   * Cache time in seconds
   * @nullable
   */
  readonly ttl?: CdnAvailableOptionsConfigOVHTtl;
}

/**
 * Option configuration
 * @nullable
 */
export type CdnAvailableOptionsOVHConfig = CdnAvailableOptionsConfigOVH | null;

/**
 * Option category
 * @nullable
 */
export type CdnAvailableOptionsOVHCategory = CdnOptionCategoryEnumOVH | null;

/**
 * Option type available
 */
export interface CdnAvailableOptionsOVH {
  /**
   * Option category
   * @nullable
   */
  readonly category?: CdnAvailableOptionsOVHCategory;
  /**
   * Option configuration
   * @nullable
   */
  readonly config?: CdnAvailableOptionsOVHConfig;
  /** Max option items */
  readonly maxItems?: number;
  /** Option type */
  readonly type?: string;
}

/**
 * Purge type
 */
export type CdnPurgeTypeEnumOVH = typeof CdnPurgeTypeEnumOVH[keyof typeof CdnPurgeTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CdnPurgeTypeEnumOVH = {
  extension: 'extension',
  folder: 'folder',
  regex: 'regex',
  uri: 'uri',
} as const;

/**
 * Option type
 */
export type CdnOptionTypePostEnumOVH = typeof CdnOptionTypePostEnumOVH[keyof typeof CdnOptionTypePostEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CdnOptionTypePostEnumOVH = {
  cache_rule: 'cache_rule',
} as const;

/**
 * Option type
 */
export type CdnOptionTypeEnumOVH = typeof CdnOptionTypeEnumOVH[keyof typeof CdnOptionTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CdnOptionTypeEnumOVH = {
  brotli: 'brotli',
  cache_rule: 'cache_rule',
  cors: 'cors',
  devmode: 'devmode',
  geo_headers: 'geo_headers',
  hsts: 'hsts',
  https_redirect: 'https_redirect',
  mixed_content: 'mixed_content',
  mobile_redirect: 'mobile_redirect',
  prefetch: 'prefetch',
  prewarm: 'prewarm',
  querystring: 'querystring',
  waf: 'waf',
} as const;

/**
 * Option query parameters
 */
export type CdnOptionQueryParametersEnumOVH = typeof CdnOptionQueryParametersEnumOVH[keyof typeof CdnOptionQueryParametersEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CdnOptionQueryParametersEnumOVH = {
  ignored: 'ignored',
  sorted: 'sorted',
} as const;

/**
 * Option pattern type
 */
export type CdnOptionPatternTypeEnumOVH = typeof CdnOptionPatternTypeEnumOVH[keyof typeof CdnOptionPatternTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CdnOptionPatternTypeEnumOVH = {
  extension: 'extension',
  folder: 'folder',
  regex: 'regex',
  uri: 'uri',
} as const;

/**
 * Option Config Parameter type
 */
export type CdnOptionConfigParamTypeEnumOVH = typeof CdnOptionConfigParamTypeEnumOVH[keyof typeof CdnOptionConfigParamTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CdnOptionConfigParamTypeEnumOVH = {
  bool: 'bool',
  int: 'int',
  list: 'list',
  str: 'str',
} as const;

/**
 * Option category
 */
export type CdnOptionCategoryEnumOVH = typeof CdnOptionCategoryEnumOVH[keyof typeof CdnOptionCategoryEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CdnOptionCategoryEnumOVH = {
  cache: 'cache',
  performance: 'performance',
  security: 'security',
} as const;

/**
 * Operation status
 */
export type CdnOperationStatusEnumOVH = typeof CdnOperationStatusEnumOVH[keyof typeof CdnOperationStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CdnOperationStatusEnumOVH = {
  cancelled: 'cancelled',
  doing: 'doing',
  done: 'done',
  error: 'error',
  todo: 'todo',
} as const;

/**
 * Shared CDN offer
 */
export type CdnOperationOfferEnumOVH = typeof CdnOperationOfferEnumOVH[keyof typeof CdnOperationOfferEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CdnOperationOfferEnumOVH = {
  advanced: 'advanced',
  basic: 'basic',
  security: 'security',
} as const;

/**
 * Operation function
 */
export type CdnOperationFunctionEnumOVH = typeof CdnOperationFunctionEnumOVH[keyof typeof CdnOperationFunctionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CdnOperationFunctionEnumOVH = {
  analytics_delete: 'analytics_delete',
  analytics_recompute: 'analytics_recompute',
  domain_delete: 'domain_delete',
  domain_disable: 'domain_disable',
  domain_purge: 'domain_purge',
  domain_refresh: 'domain_refresh',
  service_install: 'service_install',
  ssl_delete: 'ssl_delete',
  ssl_install: 'ssl_install',
} as const;

/**
 * Domain status
 */
export type CdnDomainStatusEnumOVH = typeof CdnDomainStatusEnumOVH[keyof typeof CdnDomainStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CdnDomainStatusEnumOVH = {
  deleting: 'deleting',
  disabled: 'disabled',
  disabling: 'disabling',
  ok: 'ok',
  refreshing: 'refreshing',
  to_delete: 'to_delete',
  to_disable: 'to_disable',
  to_refresh: 'to_refresh',
} as const;

/**
 * Serie Unit
 */
export type CdnDomainStatisticsUnitEnumOVH = typeof CdnDomainStatisticsUnitEnumOVH[keyof typeof CdnDomainStatisticsUnitEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CdnDomainStatisticsUnitEnumOVH = {
  'req/min': 'req/min',
} as const;

/**
 * Statistics Period
 */
export type CdnDomainStatisticsPeriodEnumOVH = typeof CdnDomainStatisticsPeriodEnumOVH[keyof typeof CdnDomainStatisticsPeriodEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CdnDomainStatisticsPeriodEnumOVH = {
  day: 'day',
  month: 'month',
  week: 'week',
  year: 'year',
} as const;

/**
 * Serie Name
 */
export type CdnDomainStatisticsNameEnumOVH = typeof CdnDomainStatisticsNameEnumOVH[keyof typeof CdnDomainStatisticsNameEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CdnDomainStatisticsNameEnumOVH = {
  hit: 'hit',
  miss: 'miss',
} as const;

