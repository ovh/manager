/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
/**
 * Common error model
 */
export type GetBillingAccountIdBillingAccountIdSubscriptionSubscriptionIdTask404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetBillingAccountIdBillingAccountIdSubscriptionSubscriptionIdEvent404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PutBillingAccountIdBillingAccountIdSubscriptionSubscriptionId404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetBillingAccountIdBillingAccountIdSubscriptionSubscriptionId404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetBillingAccountIdBillingAccountIdSubscriptionParams = {
/**
 * Filters subscriptions included in the provided range
 */
dateRangeEnd?: string;
/**
 * Filters subscriptions included in the provided range
 */
dateRangeStart?: string;
/**
 * Filters subscriptions by name matching the given pattern
 */
name?: string;
/**
 * Filters subscriptions by parent id
 */
parentId?: string;
/**
 * Filters subscriptions by status
 */
status?: BillingAccountSubscriptionStatusEnumOVH;
/**
 * Filters subscriptions by type
 */
type?: BillingAccountSubscriptionSubscriptionTypeEnumOVH;
};

/**
 * Common error model
 */
export type PutBillingAccountIdBillingAccountId412 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PutBillingAccountIdBillingAccountId400 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type DeleteBillingAccountIdBillingAccountId400 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PostBillingAccountId400 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * TaskStatusEnum
 */
export type CommonTaskStatusEnumOVH = typeof CommonTaskStatusEnumOVH[keyof typeof CommonTaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommonTaskStatusEnumOVH = {
  DONE: 'DONE',
  ERROR: 'ERROR',
  PENDING: 'PENDING',
  RUNNING: 'RUNNING',
  SCHEDULED: 'SCHEDULED',
} as const;

/**
 * Detailed information about an asynchronous operation progress steps
 */
export interface CommonTaskProgressOVH {
  /** Progress step name */
  readonly name?: string;
  /** Current status of the progress step */
  readonly status?: CommonTaskStatusEnumOVH;
}

/**
 * Errors that occured on the task
 */
export interface CommonTaskErrorOVH {
  /** Error description */
  readonly message?: string;
}

/**
 * Asynchronous operation
 */
export interface CommonTaskOVH {
  /** Creation date of the task */
  readonly createdAt?: string;
  /**
   * Errors that occured on the task
   * @nullable
   */
  readonly errors?: readonly CommonTaskErrorOVH[] | null;
  /**
   * Ending date of the task
   * @nullable
   */
  readonly finishedAt?: string | null;
  /** Identifier of the task */
  readonly id?: string;
  /** Link to the related resource */
  readonly link?: string;
  /** Description of the task */
  readonly message?: string;
  /** Progress steps of the asynchronous operation */
  readonly progress?: readonly CommonTaskProgressOVH[];
  /**
   * Starting date of the task
   * @nullable
   */
  readonly startedAt?: string | null;
  /** Current global status of the task */
  readonly status?: CommonTaskStatusEnumOVH;
  /** Type of the task */
  readonly type?: string;
  /** Last update of the task */
  readonly updatedAt?: string;
}

/**
 * ResourceStatusEnum
 */
export type CommonResourceStatusEnumOVH = typeof CommonResourceStatusEnumOVH[keyof typeof CommonResourceStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommonResourceStatusEnumOVH = {
  CREATING: 'CREATING',
  DELETING: 'DELETING',
  ERROR: 'ERROR',
  READY: 'READY',
  UPDATING: 'UPDATING',
} as const;

/**
 * List all defined values for an event type field
 */
export type CommonEventTypeEnumOVH = typeof CommonEventTypeEnumOVH[keyof typeof CommonEventTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommonEventTypeEnumOVH = {
  TARGET_SPEC_UPDATE: 'TARGET_SPEC_UPDATE',
  TASK_ERROR: 'TASK_ERROR',
  TASK_START: 'TASK_START',
  TASK_SUCCESS: 'TASK_SUCCESS',
} as const;

/**
 * Represents an event for an async envelope
 */
export interface CommonEventOVH {
  /** Creation date of the event */
  readonly createdAt?: string;
  /** Nature of the event */
  readonly kind?: string;
  /**
   * Link to the event related resource
   * @nullable
   */
  readonly link?: string | null;
  /** Description of what happened on the event */
  readonly message?: string;
  /** Type of the event */
  readonly type?: CommonEventTypeEnumOVH;
}

/**
 * Current status of a task. A task in ERROR cannot be retried without your inputs. PENDING tasks will be executed as soon as possible. A RUNNING task is currently executing your original request. SCHEDULED is used for tasks that will be executed in the future
 */
export type CommonCurrentTaskStatusEnumOVH = typeof CommonCurrentTaskStatusEnumOVH[keyof typeof CommonCurrentTaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommonCurrentTaskStatusEnumOVH = {
  ERROR: 'ERROR',
  PENDING: 'PENDING',
  RUNNING: 'RUNNING',
  SCHEDULED: 'SCHEDULED',
} as const;

/**
 * Current global status of the current task
 * @nullable
 */
export type CommonCurrentTaskOVHStatus = CommonCurrentTaskStatusEnumOVH | null;

/**
 * Asynchronous operation currently running
 */
export interface CommonCurrentTaskOVH {
  /** Identifier of the current task */
  readonly id?: string;
  /** Link to the task details */
  readonly link?: string;
  /**
   * Current global status of the current task
   * @nullable
   */
  readonly status?: CommonCurrentTaskOVHStatus;
  /** Type of the current task */
  readonly type?: string;
}

/**
 * Type of the subscription
 */
export type BillingAccountSubscriptionSubscriptionTypeEnumOVH = typeof BillingAccountSubscriptionSubscriptionTypeEnumOVH[keyof typeof BillingAccountSubscriptionSubscriptionTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const BillingAccountSubscriptionSubscriptionTypeEnumOVH = {
  ATOMIC: 'ATOMIC',
  COMPOSITE: 'COMPOSITE',
} as const;

/**
 * Target Spec for the subscription
 */
export interface BillingAccountSubscriptionSubscriptionTargetSpecOVH {
  /** Unique identifier of the billing account */
  billingAccountId: string;
}

/**
 * Status of the subscription
 */
export type BillingAccountSubscriptionStatusEnumOVH = typeof BillingAccountSubscriptionStatusEnumOVH[keyof typeof BillingAccountSubscriptionStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const BillingAccountSubscriptionStatusEnumOVH = {
  ACTIVATING: 'ACTIVATING',
  ACTIVE: 'ACTIVE',
  CLOSED: 'CLOSED',
  CLOSING: 'CLOSING',
  DEACTIVATED: 'DEACTIVATED',
  DEACTIVATING: 'DEACTIVATING',
  REACTIVATING: 'REACTIVATING',
} as const;

/**
 * Action performed when a subscription reaches the end of the period
 */
export type BillingAccountSubscriptionPeriodEndActionEnumOVH = typeof BillingAccountSubscriptionPeriodEndActionEnumOVH[keyof typeof BillingAccountSubscriptionPeriodEndActionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const BillingAccountSubscriptionPeriodEndActionEnumOVH = {
  REACTIVATE: 'REACTIVATE',
  TERMINATE: 'TERMINATE',
} as const;

/**
 * Child subscription in billing account
 */
export interface BillingAccountSubscriptionChildSubscriptionOVH {
  /** Unique identifier of the subscription */
  readonly id?: string;
}

/**
 * Subscription in billing account
 */
export interface BillingAccountSubscriptionSubscriptionOVH {
  /** Unique identifier of the billing account */
  readonly billingAccountId?: string;
  /**
   * Child subscriptions if any
   * @nullable
   */
  readonly children?: readonly BillingAccountSubscriptionChildSubscriptionOVH[] | null;
  /** End date of the subscription */
  readonly endDate?: string;
  /** Subscription name */
  readonly name?: string;
  /** Offer URN */
  readonly offer?: string;
  /** Subscription period end action */
  readonly periodEndAction?: BillingAccountSubscriptionPeriodEndActionEnumOVH;
  /** End date of the current period */
  readonly periodEndDate?: string;
  /** Start date of the current period */
  readonly periodStartDate?: string;
  /** Start date of the subscription */
  readonly startDate?: string;
  /** Subscription status */
  readonly status?: BillingAccountSubscriptionStatusEnumOVH;
  /**
   * Date at which the subscription is scheduled to be terminated. A null value means the subscription is not scheduled for termination
   * @nullable
   */
  readonly terminationDate?: string | null;
}

/**
 * Subscription in billing account
 */
export interface BillingAccountSubscriptionAsyncSubscriptionOVH {
  /** Checksum of the billing account */
  checksum?: string;
  /** Current state of the subscription */
  readonly currentState?: BillingAccountSubscriptionSubscriptionOVH;
  /** Task to do on this subscription */
  readonly currentTasks?: readonly CommonCurrentTaskOVH[];
  /** Unique identifier of the subscription */
  readonly id?: string;
  /** Subscription readiness in the system */
  readonly resourceStatus?: CommonResourceStatusEnumOVH;
  /** Target Spec for the subscription */
  targetSpec: BillingAccountSubscriptionSubscriptionTargetSpecOVH;
}

/**
 * Billing account creation parameters
 */
export interface BillingAccountCreateBillingAccountOVH {
  /** Are new subscriptions created in this billing account? */
  isDefault?: boolean;
  /** NIC of the billing account's legal owner */
  readonly legalOwner?: string;
  /** Billing account name */
  name?: string;
  /**
   * Unique identifier of the parent billing account
   * @nullable
   */
  parentId?: string | null;
}

/**
 * Child Billing account
 */
export interface BillingAccountChildBillingAccountOVH {
  /** Unique identifier of the billing account */
  readonly id?: string;
}

/**
 * Billing account
 */
export interface BillingAccountBillingAccountTargetSpecOVH {
  /** Default billing account for new subscription */
  isDefault?: boolean;
  /** Billing account name */
  name?: string;
}

/**
 * Billing account
 */
export interface BillingAccountBillingAccountOVH {
  /**
   * Children billing accounts
   * @nullable
   */
  readonly children?: readonly BillingAccountChildBillingAccountOVH[] | null;
  /** Default billing account for new subscription */
  isDefault?: boolean;
  /** NIC of the billing account's legal owner */
  readonly legalOwner?: string;
  /** Billing account name */
  name?: string;
  /**
   * Unique identifier of the parent billing account
   * @nullable
   */
  readonly parentId?: string | null;
}

/**
 * Billing account creation parameters
 */
export interface BillingAccountAsyncCreateBillingAccountOVH {
  /** Target Spec for the billing account */
  targetSpec: BillingAccountCreateBillingAccountOVH;
}

/**
 * Billing account
 */
export interface BillingAccountAsyncBillingAccountOVH {
  /** Checksum of the billing account */
  checksum?: string;
  /** Current state of the billing account */
  readonly currentState?: BillingAccountBillingAccountOVH;
  /** Task to do on this billing account */
  readonly currentTasks?: readonly CommonCurrentTaskOVH[];
  /** Unique identifier of the billing account */
  readonly id?: string;
  /** Billing account readiness in the system */
  readonly resourceStatus?: CommonResourceStatusEnumOVH;
  /** Target Spec for the billing account */
  targetSpec?: BillingAccountBillingAccountTargetSpecOVH;
}

