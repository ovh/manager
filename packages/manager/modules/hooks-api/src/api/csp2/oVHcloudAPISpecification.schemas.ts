/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetSaasCsp2ServiceNameUsageStatisticsParams = {
/**
 * The period to query
 */
timePeriod: MsServicesLicensePeriodEnumOVH;
};

export type GetSaasCsp2Params = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

export type ServiceStateEnumOVH = typeof ServiceStateEnumOVH[keyof typeof ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceStateEnumOVH = {
  autorenewInProgress: 'autorenewInProgress',
  expired: 'expired',
  inCreation: 'inCreation',
  ok: 'ok',
  pendingDebt: 'pendingDebt',
  unPaid: 'unPaid',
} as const;

/**
 * Detailed renewal type of a service
 */
export type ServiceRenewalTypeEnumOVH = typeof ServiceRenewalTypeEnumOVH[keyof typeof ServiceRenewalTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewalTypeEnumOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  automaticV2024: 'automaticV2024',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Details about a Service
 */
export interface ServicesServiceOVH {
  /** Indicates that the service can be set up to be deleted at expiration */
  readonly canDeleteAtExpiration?: boolean;
  readonly contactAdmin?: string;
  readonly contactBilling?: string;
  readonly contactTech?: string;
  readonly creation?: string;
  readonly domain?: string;
  /** @nullable */
  readonly engagedUpTo?: string | null;
  readonly expiration?: string;
  /**
   * All the possible renew period of your service in month
   * @nullable
   */
  readonly possibleRenewPeriod?: readonly number[] | null;
  /**
   * Way of handling the renew
   * @nullable
   */
  renew?: ServicesServiceOVHRenew;
  readonly renewalType?: ServiceRenewalTypeEnumOVH;
  readonly serviceId?: number;
  readonly status?: ServiceStateEnumOVH;
}

/**
 * Map a possible renew for a specific service
 */
export interface ServiceRenewTypeOVH {
  /** The service is automatically renewed */
  automatic?: boolean;
  /** The service will be deleted at expiration */
  deleteAtExpiration?: boolean;
  /** The service forced to be renewed */
  forced?: boolean;
  /**
   * The service needs to be manually renewed and paid
   * @nullable
   */
  manualPayment?: boolean | null;
  /**
   * period of renew in month
   * @nullable
   */
  period?: number | null;
}

/**
 * Way of handling the renew
 * @nullable
 */
export type ServicesServiceOVHRenew = ServiceRenewTypeOVH | null;

/**
 * Office CSP2 task status
 */
export type SaasCsp2TaskStatusEnumOVH = typeof SaasCsp2TaskStatusEnumOVH[keyof typeof SaasCsp2TaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SaasCsp2TaskStatusEnumOVH = {
  cancelled: 'cancelled',
  doing: 'doing',
  done: 'done',
  error: 'error',
  todo: 'todo',
} as const;

/**
 * Create subscription order addon
 */
export interface SaasCsp2SubscriptionOrderAddonCreationOVH {
  /** License id associated to this addon subscription (see subscription/<id>/availableAddonLicenses) */
  licenseId: number;
  /** Seat quantity of the new subscription */
  quantity: number;
}

/**
 * Create subscription
 */
export interface SaasCsp2SubscriptionCreationOVH {
  /** License's type unique identifier */
  licenseId: number;
  /** Quantity of licenses to order */
  quantity: number;
}

/**
 * Change subscription quantity
 */
export interface SaasCsp2SubscriptionChangeQuantityCreationOVH {
  /** New seat quantity */
  quantity: number;
}

/**
 * License usage statistics line.
 */
export interface SaasCsp2StatisticsLineOVH {
  /** Count of activated licenses at the end of the day. */
  readonly endOfDayCount?: number;
  /** Id of the Office license. */
  readonly licenceId?: number;
  /** Name of the Office license. */
  readonly licenceName?: string;
  /** Maximum count of simultaneous activated licences. */
  readonly peakCount?: number;
}

/**
 * License usage statistics.
 */
export interface SaasCsp2StatisticsOVH {
  /** Date of the statistics. */
  readonly date?: string;
  /** List of lines associated to this statistics entity. */
  readonly lines?: readonly SaasCsp2StatisticsLineOVH[];
}

/**
 * Office tenant state
 */
export type SaasCsp2ServiceStateEnumOVH = typeof SaasCsp2ServiceStateEnumOVH[keyof typeof SaasCsp2ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SaasCsp2ServiceStateEnumOVH = {
  creating: 'creating',
  inMaintenance: 'inMaintenance',
  ok: 'ok',
  reopening: 'reopening',
  suspended: 'suspended',
  suspending: 'suspending',
} as const;

/**
 * IAM resource metadata
 * @nullable
 */
export type SaasCsp2OfficeTenantWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * Office tenant
 */
export interface SaasCsp2OfficeTenantWithIAMOVH {
  /** Contact's address line */
  address?: string;
  /** Contact's city */
  city?: string;
  /** Creation date */
  readonly creationDate?: string;
  /** Tenant's display name */
  displayName?: string;
  /** Contact's email address */
  email?: string;
  /** Contact's first name */
  firstName?: string;
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: SaasCsp2OfficeTenantWithIAMOVHIam;
  /** Contact's last name */
  lastName?: string;
  /**
   * Microsoft Partner Network identifier linked to this tenant
   * @nullable
   */
  mpnId?: string | null;
  /**
   * Code of any detected issue regarding the MPN Id
   * @nullable
   */
  readonly mpnIssueFlag?: string | null;
  /** Primary phone number */
  phone?: PhoneNumberOVH;
  /** Internal service name */
  readonly serviceName?: string;
  /** Tenant's status */
  readonly status?: SaasCsp2ServiceStateEnumOVH;
  /** Contact's zip code */
  zipCode?: string;
}

/**
 * Office task
 */
export interface SaasCsp2OfficeTaskOVH {
  /**
   * Completion date
   * @nullable
   */
  readonly finishDate?: string | null;
  /** Function name */
  readonly function?: string;
  /** Unique identifier of the task */
  readonly id?: number;
  /** Task state */
  readonly status?: SaasCsp2TaskStatusEnumOVH;
  /** Creation date */
  readonly todoDate?: string;
}

/**
 * Office subscription
 */
export interface SaasCsp2OfficeSubscriptionOVH {
  /** Creation date */
  readonly creationDate?: string;
  /** Subscription's unique identifier */
  readonly id?: number;
  /**
   * Last update date
   * @nullable
   */
  readonly lastUpdate?: string | null;
  /** License's type id */
  readonly licenseId?: number;
  /** Number of available licenses */
  readonly quantity?: number;
  /** Subscription's status */
  readonly status?: string;
  /** Pending task's unique identifier */
  readonly taskPendingId?: number;
}

/**
 * Office license's type
 */
export type SaasCsp2LicenseTypeEnumOVH = typeof SaasCsp2LicenseTypeEnumOVH[keyof typeof SaasCsp2LicenseTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SaasCsp2LicenseTypeEnumOVH = {
  ADDON: 'ADDON',
  'NON-SPECIFIC': 'NON-SPECIFIC',
} as const;

/**
 * Office licence
 */
export interface SaasCsp2OfficeLicenceOVH {
  /** License unique identifier */
  readonly id?: number;
  /** License's type, indicates if the licence is standalone or an addon */
  readonly licenceType?: SaasCsp2LicenseTypeEnumOVH;
  /**
   * Maximum purchasable license
   * @nullable
   */
  readonly limit?: number | null;
  /** License name */
  readonly name?: string;
  /** Whether or not it is possible to add new seats on subscriptions of this licence type */
  readonly newSeatsAllowed?: boolean;
  /** Whether or not this licence type is allowed for new subscriptions */
  readonly newSubscriptionsAllowed?: boolean;
}

/**
 * Billing statistics line.
 */
export interface SaasCsp2BillingStatisticsLineOVH {
  /** Id of the Office license. */
  readonly licenceId?: number;
  /** Name of the Office license. */
  readonly licenceName?: string;
  /** Maximum count of simultaneous activated licences. */
  readonly peakCount?: number;
}

/**
 * Billing statistics for the current period
 */
export interface SaasCsp2BillingStatisticsOVH {
  /** End of the billing period */
  readonly endDate?: string;
  /** List of lines associated to this statistics entity. */
  readonly lines?: readonly SaasCsp2BillingStatisticsLineOVH[];
  /** Start of the billing period */
  readonly startDate?: string;
}

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * Office tenant
 */
export interface SaasCsp2OfficeTenantOVH {
  /** Contact's address line */
  address?: string;
  /** Contact's city */
  city?: string;
  /** Creation date */
  readonly creationDate?: string;
  /** Tenant's display name */
  displayName?: string;
  /** Contact's email address */
  email?: string;
  /** Contact's first name */
  firstName?: string;
  /** Contact's last name */
  lastName?: string;
  /**
   * Microsoft Partner Network identifier linked to this tenant
   * @nullable
   */
  mpnId?: string | null;
  /**
   * Code of any detected issue regarding the MPN Id
   * @nullable
   */
  readonly mpnIssueFlag?: string | null;
  /** Primary phone number */
  phone?: PhoneNumberOVH;
  /** Internal service name */
  readonly serviceName?: string;
  /** Tenant's status */
  readonly status?: SaasCsp2ServiceStateEnumOVH;
  /** Contact's zip code */
  zipCode?: string;
}

/**
 * Period of time used to determine license statistics
 */
export type MsServicesLicensePeriodEnumOVH = typeof MsServicesLicensePeriodEnumOVH[keyof typeof MsServicesLicensePeriodEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const MsServicesLicensePeriodEnumOVH = {
  lastMonth: 'lastMonth',
  lastQuarter: 'lastQuarter',
  lastWeek: 'lastWeek',
  lastYear: 'lastYear',
} as const;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

