/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetVeeamCloudConnectServiceNameTaskParams = {
/**
 * Filter the value of name property (like)
 */
name?: string;
/**
 * Filter the value of state property (=)
 */
state?: VeeamCloudConnectTaskStateEnumOVH;
};

export type PostVeeamCloudConnectServiceNameBackupRepositoryInventoryNameUpgradeQuotaBody = {
  /** New quota in GB */
  newQuota: number;
};

export type GetVeeamCloudConnectParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * Details about Veeam Cloud Connect offer
 */
export interface VeeamCloudConnectOfferCapabilitiesOVH {
  /** Default quota applied on new repositories in GB */
  defaultQuota?: number;
  /** Maximum quota you can apply on your repositories in GB */
  maxQuota?: number;
  /** Max number of repositories you can add on your account */
  maxStoragesCount?: number;
  /** Required usage on all repositories to add a new one (percent) */
  minimumUsage?: number;
  /** Is account allowed to add new repositories */
  multiStorages?: boolean;
  /** Are data replicated over two storages */
  replication?: boolean;
  /** Included storage per vm */
  vmCapacity?: number;
  /** Is wan accelerator enabled */
  wanAccelerator?: boolean;
}

/**
 * All states a Cloud Tenant Task can be in
 */
export type VeeamCloudConnectTaskStateEnumOVH = typeof VeeamCloudConnectTaskStateEnumOVH[keyof typeof VeeamCloudConnectTaskStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VeeamCloudConnectTaskStateEnumOVH = {
  canceled: 'canceled',
  doing: 'doing',
  done: 'done',
  error: 'error',
  fixing: 'fixing',
  problem: 'problem',
  toCreate: 'toCreate',
  todo: 'todo',
  unknown: 'unknown',
  waitingTodo: 'waitingTodo',
} as const;

/**
 * Operation
 */
export interface VeeamCloudConnectTaskOVH {
  /**
   * Done task date and time
   * @nullable
   */
  readonly endDate?: string | null;
  /** Task name */
  readonly name?: string;
  /** Current progress */
  readonly progress?: number;
  /**
   * Start task date and time
   * @nullable
   */
  readonly startDate?: string | null;
  /** Current Task state */
  readonly state?: VeeamCloudConnectTaskStateEnumOVH;
  readonly taskId?: number;
}

/**
 * All orderable Veeam Cloud Connect offers
 */
export type VeeamCloudConnectOfferOVH = typeof VeeamCloudConnectOfferOVH[keyof typeof VeeamCloudConnectOfferOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VeeamCloudConnectOfferOVH = {
  advanced: 'advanced',
  demo: 'demo',
  starter: 'starter',
} as const;

/**
 * All Location where cloud can be physically located
 */
export type VeeamCloudConnectLocationOVH = typeof VeeamCloudConnectLocationOVH[keyof typeof VeeamCloudConnectLocationOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VeeamCloudConnectLocationOVH = {
  bhs1: 'bhs1',
  rbx2: 'rbx2',
  sbg1: 'sbg1',
} as const;

/**
 * All states a Cloud Tenant backup repository can be in
 */
export type VeeamCloudConnectBackupRepositoryStateEnumOVH = typeof VeeamCloudConnectBackupRepositoryStateEnumOVH[keyof typeof VeeamCloudConnectBackupRepositoryStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VeeamCloudConnectBackupRepositoryStateEnumOVH = {
  configuring: 'configuring',
  delivered: 'delivered',
  disabled: 'disabled',
  disabling: 'disabling',
  error: 'error',
  migrating: 'migrating',
  removing: 'removing',
} as const;

/**
 * The replication zone of your repository
 * @nullable
 */
export type VeeamCloudConnectBackupRepositoryOVHReplicationZone = VeeamCloudConnectLocationOVH | null;

/**
 * The quota used on this Backup repository
 * @nullable
 */
export type VeeamCloudConnectBackupRepositoryOVHQuotaUsed = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Veeam backup repository
 */
export interface VeeamCloudConnectBackupRepositoryOVH {
  /** The inventory name of your backup repository */
  readonly inventoryName?: string;
  /** The quota allowed on this Backup repository */
  readonly quota?: ComplexTypeUnitAndValueLongOVH;
  /**
   * The quota used on this Backup repository
   * @nullable
   */
  readonly quotaUsed?: VeeamCloudConnectBackupRepositoryOVHQuotaUsed;
  /**
   * The replication zone of your repository
   * @nullable
   */
  readonly replicationZone?: VeeamCloudConnectBackupRepositoryOVHReplicationZone;
  /** The state of your backup repository */
  readonly state?: VeeamCloudConnectBackupRepositoryStateEnumOVH;
  /**
   * The usage in percent of this backup repository
   * @nullable
   */
  readonly usage?: number | null;
}

/**
 * IAM resource metadata
 * @nullable
 */
export type VeeamCloudConnectAccountWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * Veeam Cloud Connect
 */
export interface VeeamCloudConnectAccountWithIAMOVH {
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: VeeamCloudConnectAccountWithIAMOVHIam;
  /** Datacenter where your Cloud is physically located */
  readonly location?: VeeamCloudConnectLocationOVH;
  /** The commercial offer linked to your veeam cloud connect */
  readonly productOffer?: VeeamCloudConnectOfferOVH;
  /** Your login in the Veeam Cloud Connect interface */
  readonly serviceName?: string;
  /**
   * Backuped VMs quantity on your account
   * @nullable
   */
  readonly vmCount?: number | null;
}

/**
 * Veeam Cloud Connect
 */
export interface VeeamCloudConnectAccountOVH {
  /** Datacenter where your Cloud is physically located */
  readonly location?: VeeamCloudConnectLocationOVH;
  /** The commercial offer linked to your veeam cloud connect */
  readonly productOffer?: VeeamCloudConnectOfferOVH;
  /** Your login in the Veeam Cloud Connect interface */
  readonly serviceName?: string;
  /**
   * Backuped VMs quantity on your account
   * @nullable
   */
  readonly vmCount?: number | null;
}

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

export type ServiceStateEnumOVH = typeof ServiceStateEnumOVH[keyof typeof ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceStateEnumOVH = {
  autorenewInProgress: 'autorenewInProgress',
  expired: 'expired',
  inCreation: 'inCreation',
  ok: 'ok',
  pendingDebt: 'pendingDebt',
  unPaid: 'unPaid',
} as const;

/**
 * Detailed renewal type of a service
 */
export type ServiceRenewalTypeEnumOVH = typeof ServiceRenewalTypeEnumOVH[keyof typeof ServiceRenewalTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewalTypeEnumOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  automaticV2024: 'automaticV2024',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Details about a Service
 */
export interface ServicesServiceOVH {
  /** Indicates that the service can be set up to be deleted at expiration */
  readonly canDeleteAtExpiration?: boolean;
  readonly contactAdmin?: string;
  readonly contactBilling?: string;
  readonly contactTech?: string;
  readonly creation?: string;
  readonly domain?: string;
  /** @nullable */
  readonly engagedUpTo?: string | null;
  readonly expiration?: string;
  /**
   * All the possible renew period of your service in month
   * @nullable
   */
  readonly possibleRenewPeriod?: readonly number[] | null;
  /**
   * Way of handling the renew
   * @nullable
   */
  renew?: ServicesServiceOVHRenew;
  readonly renewalType?: ServiceRenewalTypeEnumOVH;
  readonly serviceId?: number;
  readonly status?: ServiceStateEnumOVH;
}

/**
 * Map a possible renew for a specific service
 */
export interface ServiceRenewTypeOVH {
  /** The service is automatically renewed */
  automatic?: boolean;
  /** The service will be deleted at expiration */
  deleteAtExpiration?: boolean;
  /** The service forced to be renewed */
  forced?: boolean;
  /**
   * The service needs to be manually renewed and paid
   * @nullable
   */
  manualPayment?: boolean | null;
  /**
   * period of renew in month
   * @nullable
   */
  period?: number | null;
}

/**
 * Way of handling the renew
 * @nullable
 */
export type ServicesServiceOVHRenew = ServiceRenewTypeOVH | null;

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * A numeric value tagged with its unit
 */
export interface ComplexTypeUnitAndValueLongOVH {
  unit?: string;
  value?: number;
}

