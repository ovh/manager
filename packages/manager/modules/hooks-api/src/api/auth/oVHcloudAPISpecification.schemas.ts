/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type PostAuthCredentialBody = {
  /** Access required for your application */
  accessRules: AuthAccessRuleOVH[];
  /** Where you want to redirect the user after sucessfull authentication */
  redirection?: string;
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * All HTTP methods available
 */
export type HttpMethodEnumOVH = typeof HttpMethodEnumOVH[keyof typeof HttpMethodEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HttpMethodEnumOVH = {
  DELETE: 'DELETE',
  GET: 'GET',
  POST: 'POST',
  PUT: 'PUT',
} as const;

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * Status of a User
 */
export type AuthUserStatusEnumOVH = typeof AuthUserStatusEnumOVH[keyof typeof AuthUserStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AuthUserStatusEnumOVH = {
  DISABLED: 'DISABLED',
  OK: 'OK',
  PASSWORD_CHANGE_REQUIRED: 'PASSWORD_CHANGE_REQUIRED',
} as const;

/**
 * An IAM user creation request
 */
export interface AuthUserRequestOVH {
  /** User's description */
  description?: string;
  /** User's email */
  email: string;
  /** User's group */
  group?: string;
  /** User's login */
  login: string;
  /** User's password */
  password: string;
}

/**
 * An IAM User
 */
export interface AuthUserOVH {
  /** Creation date of this user */
  readonly creation?: string;
  /** User's description */
  description?: string;
  /** User's email */
  email?: string;
  /** User's group */
  group?: string;
  /** User's last update date */
  readonly lastUpdate?: string;
  /** User's login suffix */
  readonly login?: string;
  /** User's password last update date */
  readonly passwordLastUpdate?: string;
  /** Current user's status */
  readonly status?: AuthUserStatusEnumOVH;
  /** IAM identity URN of the user */
  readonly urn?: string;
}

/**
 * One-time token usable on OVHcloud's applications (only supported by chatbot for the moment)
 */
export interface AuthTokenOVH {
  /** One-time token */
  readonly token?: string;
}

/**
 * All ShouldDisplayMFAEnrollment values
 */
export type AuthShouldDisplayMFAEnrollmentEnumOVH = typeof AuthShouldDisplayMFAEnrollmentEnumOVH[keyof typeof AuthShouldDisplayMFAEnrollmentEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AuthShouldDisplayMFAEnrollmentEnumOVH = {
  false: 'false',
  forced: 'forced',
  true: 'true',
} as const;

/**
 * Permission given on the account
 */
export type AuthRoleEnumOVH = typeof AuthRoleEnumOVH[keyof typeof AuthRoleEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AuthRoleEnumOVH = {
  ADMIN: 'ADMIN',
  NONE: 'NONE',
  REGULAR: 'REGULAR',
  UNPRIVILEGED: 'UNPRIVILEGED',
} as const;

/**
 * A SAML 2.0 requested attribute that should be added to SAML requests when using this provider
 */
export interface AuthProviderRequestedAttributesOVH {
  /** Expresses that this RequestedAttribute is mandatory (remains advisory) */
  isRequired: boolean;
  /** Name of the SAML RequestedAttribute */
  name: string;
  /**
   * NameFormat of the SAML RequestedAttribute
   * @nullable
   */
  nameFormat?: string | null;
  /**
   * List of AttributeValues allowed for this RequestedAttribute
   * @nullable
   */
  values?: string[] | null;
}

/**
 * A SAML 2.0 Extension that should be added to SAML requests when using this provider
 */
export interface AuthProviderExtensionsOVH {
  /**
   * List of SAML RequestedAttribute to add to SAML requests
   * @nullable
   */
  requestedAttributes?: AuthProviderRequestedAttributesOVH[] | null;
}

/**
 * An IAM Federation Provider creation request
 */
export interface AuthProviderRequestOVH {
  /**
   * Whether account users should still be usable as a login method or not
   * @nullable
   */
  disableUsers?: boolean | null;
  /** SAML Extensions to embed inside the SAML requests */
  extensions?: AuthProviderExtensionsOVH;
  /**
   * SAML Group attribute name
   * @nullable
   */
  groupAttributeName?: string | null;
  /** IdP's signing certificate */
  metadata: string;
  /**
   * Whether SAML Authn Requests should be signed
   * @nullable
   */
  signRequests?: boolean | null;
  /**
   * SAML User attribute name
   * @nullable
   */
  userAttributeName?: string | null;
}

/**
 * An IAM Federation Provider
 */
export interface AuthProviderOVH {
  /** Creation date of the identity provider */
  readonly creation?: string;
  /**
   * Whether account users should still be usable as a login method or not
   * @nullable
   */
  disableUsers?: boolean | null;
  /** SAML Extensions to embed inside the SAML requests */
  extensions?: AuthProviderExtensionsOVH;
  /** SAML Group attribute name */
  groupAttributeName?: string;
  /** IdP's signing certificate */
  readonly idpSigningCertificates?: readonly AuthCertificateOVH[];
  /** Last update of the identity provider */
  readonly lastUpdate?: string;
  /**
   * Whether SAML Authn Requests should be signed
   * @nullable
   */
  signRequests?: boolean | null;
  /** IdP's Single Sign On Service Url */
  readonly ssoServiceUrl?: string;
  /** SAML User attribute name */
  userAttributeName?: string;
}

/**
 * All authentication methods available
 */
export type AuthMethodEnumOVH = typeof AuthMethodEnumOVH[keyof typeof AuthMethodEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AuthMethodEnumOVH = {
  account: 'account',
  oauth2_client_credentials: 'oauth2_client_credentials',
  provider: 'provider',
  user: 'user',
} as const;

/**
 * All HTTP methods available
 */
export type AuthHTTPMethodEnumOVH = typeof AuthHTTPMethodEnumOVH[keyof typeof AuthHTTPMethodEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AuthHTTPMethodEnumOVH = {
  DELETE: 'DELETE',
  GET: 'GET',
  POST: 'POST',
  PUT: 'PUT',
} as const;

/**
 * A new IAM group
 */
export interface AuthGroupRequestOVH {
  /**
   * Group's description
   * @nullable
   */
  description?: string | null;
  /** Group's name */
  name: string;
  /** Group's role */
  role?: AuthRoleEnumOVH;
}

/**
 * An IAM Group
 */
export interface AuthGroupOVH {
  /** Creation date of this group */
  readonly creation?: string;
  /** Whether it is a default group. This kind of group can't be edited or deleted */
  readonly defaultGroup?: boolean;
  /**
   * Group's description
   * @nullable
   */
  description?: string | null;
  /** Last update of this group */
  readonly lastUpdate?: string;
  /** Group's name */
  readonly name?: string;
  /** Group's role */
  role?: AuthRoleEnumOVH;
  /** IAM identity URN of the group */
  readonly urn?: string;
}

/**
 * Details about the authentication used
 */
export interface AuthDetailsOVH {
  /** Customer identifier */
  readonly account?: string;
  /**
   * Allowed API routes, null means everything
   * @nullable
   */
  readonly allowedRoutes?: readonly AuthAccessRuleOVH[] | null;
  /**
   * Description of the authenticated identity
   * @nullable
   */
  readonly description?: string | null;
  /** Identities of the current session: corresponds to all the authentication provider identities that could be used to match IAM policies */
  readonly identities?: readonly string[];
  /** Authentication method */
  readonly method?: AuthMethodEnumOVH;
  /**
   * Roles of the authenticated identity
   * @nullable
   */
  readonly roles?: readonly string[] | null;
  /**
   * Username of the authenticated identity
   * @nullable
   */
  readonly user?: string | null;
}

/**
 * All states a Credential can be in
 */
export type AuthCredentialStateEnumOVH = typeof AuthCredentialStateEnumOVH[keyof typeof AuthCredentialStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AuthCredentialStateEnumOVH = {
  expired: 'expired',
  pendingValidation: 'pendingValidation',
  refused: 'refused',
  validated: 'validated',
} as const;

/**
 * Credential request to get access to the API
 */
export interface AuthCredentialOVH {
  consumerKey?: string;
  state?: AuthCredentialStateEnumOVH;
  /** @nullable */
  validationUrl?: string | null;
}

/**
 * X509 Certificate
 */
export interface AuthCertificateOVH {
  /** Certificate's expiration */
  readonly expiration?: string;
  /** Certificate's subject */
  readonly subject?: string;
}

/**
 * All states an API Application can be in
 */
export type AuthApplicationStatusEnumOVH = typeof AuthApplicationStatusEnumOVH[keyof typeof AuthApplicationStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AuthApplicationStatusEnumOVH = {
  active: 'active',
  blocked: 'blocked',
  inactive: 'inactive',
  trusted: 'trusted',
} as const;

/**
 * API Credential
 */
export interface AuthApiCredentialOVH {
  /**
   * If defined, list of ip blocks which are allowed to call API with this credential
   * @nullable
   */
  allowedIPs?: IpBlockOVH[] | null;
  /** ID of associated API Application */
  readonly applicationId?: number;
  /** Creation date of this credential */
  readonly creation?: string;
  /** ID of this credential */
  readonly credentialId?: number;
  /**
   * Expiration date of this credential
   * @nullable
   */
  readonly expiration?: string | null;
  /**
   * Last use date of this credential
   * @nullable
   */
  readonly lastUse?: string | null;
  /** States whether this credential has been created by yourself or by the OVH support team */
  readonly ovhSupport?: boolean;
  /** API routes allowed to this credential */
  readonly rules?: readonly AuthAccessRuleOVH[];
  /** State of to this credential */
  readonly status?: AuthCredentialStateEnumOVH;
}

/**
 * API Application
 */
export interface AuthApiApplicationOVH {
  /** ID of this Application */
  readonly applicationId?: number;
  /** Key of this application */
  readonly applicationKey?: string;
  /** Description of this application */
  readonly description?: string;
  /** Name of this application */
  readonly name?: string;
  /** Status of this application */
  readonly status?: AuthApplicationStatusEnumOVH;
}

/**
 * Access rule allowed to an application
 */
export interface AuthAccessRuleOVH {
  /** Allowed Method */
  readonly method?: AuthHTTPMethodEnumOVH;
  /** Allowed path */
  readonly path?: string;
}

/**
 * API Credential
 */
export interface ApiCredentialOVH {
  /**
   * If defined, list of ip blocks which are allowed to call API with this credential
   * @nullable
   */
  allowedIPs?: IpBlockOVH[] | null;
  readonly applicationId?: number;
  readonly creation?: string;
  readonly credentialId?: number;
  /** @nullable */
  readonly expiration?: string | null;
  /** @nullable */
  readonly lastUse?: string | null;
  /** States whether this credential has been created by yourself or by the OVH support team */
  readonly ovhSupport?: boolean;
  readonly rules?: readonly AuthAccessRuleOVH[];
  readonly status?: AuthCredentialStateEnumOVH;
}

