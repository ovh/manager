/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type PostSupportTicketsTicketIdScoreBody = {
  /** ticket score */
  score: string;
  /** ticket comment about the score */
  scoreComment?: string;
};

export type PostSupportTicketsTicketIdReplyBody = {
  /** text body of ticket response */
  body: string;
};

export type PostSupportTicketsTicketIdReopenBody = {
  /** ticket reopen reason */
  body: string;
};

/**
 * Common error model
 */
export type PostSupportTickets500 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PostSupportTickets404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PostSupportTickets400 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetSupportTicketsParams = {
/**
 * Search archived tickets
 */
archived?: boolean;
/**
 * Search by ticket category
 */
category?: SupportTicketCategoryEnumOVH;
/**
 * Tickets pending a customer reply
 */
customerReplyNeeded?: boolean;
/**
 * Exclude auto-generated tickets
 */
excludeAutogenerated?: boolean;
/**
 * Maximum creation date
 */
maxCreationDate?: string;
/**
 * Minimum creation date
 */
minCreationDate?: string;
/**
 * Page of tickets to fetch (only if pageSize is defined)
 */
page?: number;
/**
 * Number of ticket to fetch
 */
pageSize?: number;
/**
 * Search by ticket product
 */
product?: SupportTicketProductEnumOVH;
/**
 * Ticket message service name
 */
serviceName?: string;
/**
 * Status of ticket
 */
status?: SupportTicketStatusEnumOVH;
/**
 * Search by ticket subject
 */
subject?: string;
/**
 * Search by ticket number
 */
ticketNumber?: string;
};

/**
 * Common error model
 */
export type GetSupportServiceTypes500 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetSupportIssueTypes500 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetSupportIssueTypes404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type GetSupportIssueTypes400 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetSupportIssueTypesParams = {
/**
 * Support type (incident, assistance...)
 */
category: SupportTicketsCategoryEnumOVH;
/**
 * Issue types node identifier (root if omitted)
 */
issueTypeId?: number;
/**
 * Localization for the node - the default and fallback is en_GB
 */
language?: SupportIssueTypeLanguageEnumOVH;
/**
 * Type of product to get help with, as retrieved from /support/serviceTypes. Mandatory except if category is 'account'.
 */
serviceType?: string;
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Customer issue urgency
 */
export type SupportTicketsUrgencyEnumOVH = typeof SupportTicketsUrgencyEnumOVH[keyof typeof SupportTicketsUrgencyEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SupportTicketsUrgencyEnumOVH = {
  high: 'high',
  low: 'low',
  medium: 'medium',
} as const;

/**
 * Customer issue impact
 */
export type SupportTicketsImpactEnumOVH = typeof SupportTicketsImpactEnumOVH[keyof typeof SupportTicketsImpactEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SupportTicketsImpactEnumOVH = {
  high: 'high',
  low: 'low',
  medium: 'medium',
} as const;

/**
 * Support issue category
 */
export type SupportTicketsCategoryEnumOVH = typeof SupportTicketsCategoryEnumOVH[keyof typeof SupportTicketsCategoryEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SupportTicketsCategoryEnumOVH = {
  account: 'account',
  assistance: 'assistance',
  billing: 'billing',
  incident: 'incident',
} as const;

/**
 * Self-care link type
 */
export type SupportIssueTypeLinkTypeEnumOVH = typeof SupportIssueTypeLinkTypeEnumOVH[keyof typeof SupportIssueTypeLinkTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SupportIssueTypeLinkTypeEnumOVH = {
  guide: 'guide',
  tip: 'tip',
} as const;

/**
 * Support ticket self-care link or tip
 */
export interface SupportIssueTypeSelfCareResourceOVH {
  /** Resource ID */
  readonly id?: number;
  /** Display label */
  readonly label?: string;
  /** Display rank (position) */
  readonly rank?: number;
  /** Raw text to display in place of OR (if defined) in addition to the link */
  readonly tip?: string;
  /** Type of link */
  readonly type?: SupportIssueTypeLinkTypeEnumOVH;
  /** URL to point the link to (usually a guide or faq) */
  readonly url?: string;
}

/**
 * Issue type localizations
 */
export type SupportIssueTypeLanguageEnumOVH = typeof SupportIssueTypeLanguageEnumOVH[keyof typeof SupportIssueTypeLanguageEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SupportIssueTypeLanguageEnumOVH = {
  de_DE: 'de_DE',
  en_GB: 'en_GB',
  es_ES: 'es_ES',
  fi_FI: 'fi_FI',
  fr_CA: 'fr_CA',
  fr_FR: 'fr_FR',
  it_IT: 'it_IT',
  lt_LT: 'lt_LT',
  pl_PL: 'pl_PL',
  pt_PT: 'pt_PT',
} as const;

/**
 * Ticket creation form field type
 */
export type SupportIssueTypeFieldTypeEnumOVH = typeof SupportIssueTypeFieldTypeEnumOVH[keyof typeof SupportIssueTypeFieldTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SupportIssueTypeFieldTypeEnumOVH = {
  text: 'text',
  text_multi: 'text_multi',
} as const;

/**
 * Prequalified support ticket template field
 */
export interface SupportIssueTypeFieldOVH {
  /** Default value for the field */
  readonly default?: string;
  /** Additional information about the field, to display on hover or similar */
  readonly description?: string;
  /** Field ID */
  readonly id?: number;
  /** Display label */
  readonly label?: string;
  /** True if this field needs to be filled to submit a ticket */
  readonly mandatory?: boolean;
  /** Display rank (position) */
  readonly rank?: number;
  /** Type of input field */
  readonly type?: SupportIssueTypeFieldTypeEnumOVH;
}

/**
 * DEPRECATED - Ticket type (criticalIntervention requires VIP support level)
 */
export type SupportTicketTypeEnumOVH = typeof SupportTicketTypeEnumOVH[keyof typeof SupportTicketTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SupportTicketTypeEnumOVH = {
  criticalIntervention: 'criticalIntervention',
  genericRequest: 'genericRequest',
} as const;

/**
 * Ticket request subcategory
 */
export type SupportTicketSubCategoryEnumOVH = typeof SupportTicketSubCategoryEnumOVH[keyof typeof SupportTicketSubCategoryEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SupportTicketSubCategoryEnumOVH = {
  alerts: 'alerts',
  autorenew: 'autorenew',
  bill: 'bill',
  down: 'down',
  inProgress: 'inProgress',
  new: 'new',
  other: 'other',
  perfs: 'perfs',
  start: 'start',
  usage: 'usage',
} as const;

/**
 * Support ticket statuses
 */
export type SupportTicketStatusEnumOVH = typeof SupportTicketStatusEnumOVH[keyof typeof SupportTicketStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SupportTicketStatusEnumOVH = {
  closed: 'closed',
  open: 'open',
  unknown: 'unknown',
} as const;

/**
 * Ticket product
 */
export type SupportTicketProductEnumOVH = typeof SupportTicketProductEnumOVH[keyof typeof SupportTicketProductEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SupportTicketProductEnumOVH = {
  adsl: 'adsl',
  cdn: 'cdn',
  dedicated: 'dedicated',
  'dedicated-billing': 'dedicated-billing',
  'dedicated-other': 'dedicated-other',
  dedicatedcloud: 'dedicatedcloud',
  domain: 'domain',
  exchange: 'exchange',
  fax: 'fax',
  hosting: 'hosting',
  housing: 'housing',
  iaas: 'iaas',
  mail: 'mail',
  network: 'network',
  publiccloud: 'publiccloud',
  sms: 'sms',
  ssl: 'ssl',
  storage: 'storage',
  'telecom-billing': 'telecom-billing',
  'telecom-other': 'telecom-other',
  vac: 'vac',
  voip: 'voip',
  vps: 'vps',
  'web-billing': 'web-billing',
  'web-other': 'web-other',
} as const;

/**
 * Ticket level of impact or urgency (reserved for Business or Enterprise support level accounts)
 */
export type SupportTicketImpactUrgencyEnumOVH = typeof SupportTicketImpactUrgencyEnumOVH[keyof typeof SupportTicketImpactUrgencyEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SupportTicketImpactUrgencyEnumOVH = {
  high: 'high',
  low: 'low',
  medium: 'medium',
} as const;

/**
 * Ticket request category
 */
export type SupportTicketCategoryEnumOVH = typeof SupportTicketCategoryEnumOVH[keyof typeof SupportTicketCategoryEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SupportTicketCategoryEnumOVH = {
  assistance: 'assistance',
  billing: 'billing',
  incident: 'incident',
} as const;

export type PostSupportTicketsCreateBody = {
  /** Ticket message body */
  body: string;
  /** Ticket message category */
  category?: SupportTicketCategoryEnumOVH;
  /** Ticket impact (reserved for Business or Enterprise support level accounts) */
  impact?: SupportTicketImpactUrgencyEnumOVH;
  /** Ticket message product */
  product?: SupportTicketProductEnumOVH;
  /** Ticket message service name */
  serviceName?: string;
  /** Ticket message subcategory */
  subcategory?: SupportTicketSubCategoryEnumOVH;
  /** Ticket message subject */
  subject: string;
  /** DEPRECATED - Ticket type (criticalIntervention requires VIP support level) */
  type?: SupportTicketTypeEnumOVH;
  /** Ticket urgency (reserved for Business or Enterprise support level accounts) */
  urgency?: SupportTicketImpactUrgencyEnumOVH;
  /** List of e-mail addresses to notify on ticket updates (max. 10) */
  watchers?: string[];
};

/**
 * Product service concerned by ticket
 * @nullable
 */
export type SupportTicketOVHProduct = SupportTicketProductEnumOVH | null;

/**
 * Ticket request category
 * @nullable
 */
export type SupportTicketOVHCategory = SupportTicketCategoryEnumOVH | null;

/**
 * Support Ticket
 */
export interface SupportTicketOVH {
  /** Customer account identifier */
  accountId?: string;
  /** Can this ticket be closed or not */
  canBeClosed?: boolean;
  /**
   * Ticket request category
   * @nullable
   */
  category?: SupportTicketOVHCategory;
  /** Ticket creation date */
  creationDate?: string;
  /** Sender type of last message */
  lastMessageFrom?: SupportMessageSenderEnumOVH;
  /**
   * Product service concerned by ticket
   * @nullable
   */
  product?: SupportTicketOVHProduct;
  /** Ticket score */
  score?: string;
  /**
   * Name of service concerned by ticket
   * @nullable
   */
  serviceName?: string | null;
  /** State of ticket */
  state?: SupportTicketStatusEnumOVH;
  /** Ticket subject */
  subject?: string;
  /** Ticket identifier */
  ticketId?: number;
  /** Ticket external number */
  ticketNumber?: number;
  /** Ticket type */
  type?: SupportTicketTypeEnumOVH;
  /** Ticket last update date */
  updateDate?: string;
}

/**
 * Type of product to get help with
 */
export interface SupportServiceTypeOVH {
  /** Service designation */
  readonly name?: string;
  /** Service APIv6 route */
  readonly route?: string;
}

/**
 * Support ticket creation payload. Replacement for the legacy support.Ticket format, to be used with the newer POST /support/tickets endpoint)
 */
export interface SupportPrequalifiedTicketOVH {
  /** Ticket contents */
  body?: string;
  /** Level of impact */
  impact?: SupportTicketsImpactEnumOVH;
  /**
   * If applicable, name of the impacted resource (e.g. a kubernetes instance within a cloud project)
   * @nullable
   */
  impactedResource?: string | null;
  /** Issue type identifier, as retrieved from /support/issueTypes */
  issueTypeId?: number;
  /** Name of the customer's impacted service */
  serviceName?: string;
  /** Ticket subject */
  subject?: string;
  /** Degree of urgency */
  urgency?: SupportTicketsUrgencyEnumOVH;
}

/**
 * Support ticket creation confirmation
 */
export interface SupportNewTicketConfirmationOVH {
  /** Support ticket identifier */
  readonly ticketId?: number;
}

/**
 * Newly created support identifiers
 */
export interface SupportNewMessageInfoOVH {
  /**
   * Notice or warning
   * @nullable
   */
  additionalNotice?: string | null;
  /** Message identifier */
  messageId?: number;
  /** Ticket identifier */
  ticketId?: number;
  /** Ticket external number */
  ticketNumber?: number;
}

/**
 * Message sender type
 */
export type SupportMessageSenderEnumOVH = typeof SupportMessageSenderEnumOVH[keyof typeof SupportMessageSenderEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SupportMessageSenderEnumOVH = {
  customer: 'customer',
  support: 'support',
} as const;

/**
 * Support ticket message
 */
export interface SupportMessageOVH {
  /** Message body */
  body?: string;
  /** Message creation date */
  creationDate?: string;
  /** Message sender type */
  from?: SupportMessageSenderEnumOVH;
  /** Message identifier */
  messageId?: number;
  /** Ticket identifier */
  ticketId?: number;
  /** Message last update date */
  updateDate?: string;
}

/**
 * Support issue type
 */
export interface SupportIssueTypeOVH {
  /** Ticket template fields */
  readonly fields?: readonly SupportIssueTypeFieldOVH[];
  /** True if the issue type has sub-issues */
  readonly hasChildren?: boolean;
  /** Support issue type ID, use to create ticket */
  readonly id?: number;
  /** Issue type label */
  readonly label?: string;
  /** Display rank (position) */
  readonly rank?: number;
  /**
   * If true then this issue type is for information purposes only and does now allow the creation of a ticket
   * @nullable
   */
  readonly readOnly?: boolean | null;
  /** Tips and links to guides or faqs for self-care */
  readonly selfCareResources?: readonly SupportIssueTypeSelfCareResourceOVH[];
  /** Issue type subject: freeform if blank, imposed otherwise */
  readonly subject?: string;
}

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

