/**
 * Generated by orval v7.3.0 🍺
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetEmailDomainDomainTaskResponderParams = {
/**
 * Name of responder
 */
account?: string;
};

export type GetEmailDomainDomainTaskRedirectionParams = {
/**
 * Account name
 */
account?: string;
};

export type GetEmailDomainDomainTaskMailinglistParams = {
/**
 * Account name
 */
account?: string;
};

export type GetEmailDomainDomainTaskFilterParams = {
/**
 * Account name
 */
account?: string;
};

export type GetEmailDomainDomainTaskAccountParams = {
/**
 * Account name
 */
name?: string;
};

export type PostEmailDomainDomainResponderBody = {
  /** Account of domain */
  account: string;
  /** Content of responder */
  content: string;
  /** If false, emails will be dropped. If true and copyTo field is empty, emails will be delivered to your mailbox. If true and copyTo is set with an address, emails will be delivered to this address */
  copy: boolean;
  /** Account where copy emails */
  copyTo?: string;
  /** Date of start responder */
  from?: string;
  /** Date of end responder */
  to?: string;
};

export type GetEmailDomainDomainResponderParams = {
/**
 * Responder name
 */
account?: string;
};

export type GetEmailDomainDomainRedirectionParams = {
/**
 * Name of redirection
 */
from?: string;
/**
 * Email of redirection target
 */
to?: string;
};

export type PostEmailDomainDomainMailingListNameSubscriberBody = {
  /** Email of subscriber */
  email: string;
};

export type GetEmailDomainDomainMailingListNameSubscriberParams = {
/**
 * Subscriber email
 */
email?: string;
};

export type PostEmailDomainDomainMailingListNameSendListByEmailBody = {
  /** Email destination */
  email: string;
};

export type PostEmailDomainDomainMailingListNameModeratorBody = {
  /** Email of moderator */
  email: string;
};

export type GetEmailDomainDomainMailingListNameModeratorParams = {
/**
 * Moderator email
 */
email?: string;
};

export type PostEmailDomainDomainMailingListNameChangeOptionsBody = {
  /** Options of mailing list */
  options: DomainDomainMlOptionsStructOVH;
};

export type PostEmailDomainDomainMailingListBody = {
  /** Language of mailing list */
  language: DomainDomainMlLanguageEnumOVH;
  /** Mailing list name */
  name: string;
  /** Options of mailing list */
  options: DomainDomainMlOptionsStructOVH;
  /** Owner Email */
  ownerEmail: string;
  /** Email to reply of mailing list */
  replyTo?: string;
};

export type GetEmailDomainDomainMailingListParams = {
/**
 * Mailing list name
 */
name?: string;
};

export type GetEmailDomainDomainDnsMXRecordsParams = {
/**
 * Sub domain
 */
subDomain?: string;
};

export type GetEmailDomainDomainDnsMXFilterParams = {
/**
 * Sub domain
 */
subDomain?: string;
};

export type PostEmailDomainDomainDiagnoseBody = {
  /** Function of diagnose */
  function: EmailDomainDomainDiagnoseFunctionEnumOVH;
};

export type GetEmailDomainDomainDiagnoseParams = {
/**
 * Filter the value of date property (>=)
 */
'date.from'?: string;
/**
 * Filter the value of date property (<=)
 */
'date.to'?: string;
/**
 * Diagnose function
 */
function?: EmailDomainDomainDiagnoseFunctionEnumOVH;
/**
 * Diagnose of account name
 */
name?: string;
/**
 * Diagnose result
 */
result?: EmailDomainDomainDiagnoseResultEnumOVH;
};

export type PostEmailDomainDomainConfirmTerminationBody = {
  /** Commentary about your termination request */
  commentary?: string;
  /** Reason of your termination request */
  reason?: ServiceTerminationReasonEnumOVH;
  /** The termination token sent by mail to the admin contact */
  token: string;
};

export type PostEmailDomainDomainChangeDnsMXFilterBody = {
  /** Target server for custom MX */
  customTarget?: string;
  /** New MX filter */
  mxFilter: DomainDomainMXFilterEnumOVH;
  /** Sub domain */
  subDomain?: string;
};

export type PostEmailDomainDomainChangeContactBody = {
  /** The contact to set as admin contact */
  contactAdmin?: string;
  /** The contact to set as billing contact */
  contactBilling?: string;
  /** The contact to set as tech contact */
  contactTech?: string;
};

export type PostEmailDomainDomainAclBody = {
  /** Deleguates rights to */
  accountId: string;
};

export type PostEmailDomainDomainAccountAccountNameMigrateDestinationServiceNameDestinationEmailAddressDestinationEmailAddressMigrateBody = {
  /** New password used for migration */
  password: string;
};

export type GetEmailDomainDomainAccountAccountNameMigrateDestinationServiceNameDestinationEmailAddressParams = {
/**
 * Account maximum size
 */
quota?: number;
};

export type GetEmailDomainDomainAccountAccountNameMigrateParams = {
/**
 * Type of migration service
 */
type?: EmailDomainMigrationServiceTypeOVH;
};

export type PostEmailDomainDomainAccountAccountNameFilterNameRuleBody = {
  /** Header to be filtered */
  header: string;
  /** Rule of filter */
  operand: DomainDomainFilterOperandEnumOVH;
  /** Rule parameter of filter */
  value: string;
};

export type PostEmailDomainDomainAccountAccountNameFilterNameChangePriorityBody = {
  /** New priority */
  priority: number;
};

export type PostEmailDomainDomainAccountAccountNameFilterNameChangeActivityBody = {
  /** New activity */
  activity: boolean;
};

export type PostEmailDomainDomainAccountAccountNameFilterBody = {
  /** Action of filter */
  action: DomainDomainFilterActionEnumOVH;
  /** Action parameter of filter */
  actionParam?: string;
  /** If true filter is active */
  active: boolean;
  /** Header to be filtered */
  header: string;
  /** Filter name */
  name: string;
  /** Rule of filter */
  operand: DomainDomainFilterOperandEnumOVH;
  /** Priority of filter */
  priority: number;
  /** Rule parameter of filter */
  value: string;
};

export type PostEmailDomainDomainAccountAccountNameDelegationBody = {
  /** OVH customer unique identifier */
  accountId: string;
};

export type PostEmailDomainDomainAccountAccountNameChangePasswordBody = {
  /** New password */
  password: string;
};

export type PostEmailDomainDomainAccountBody = {
  /** Account name */
  accountName: string;
  /** Description Account */
  description?: string;
  /** Account password */
  password: string;
  /** Account size in bytes (default : 5000000000) (possible values : /email/domain/{domain}/allowedAccountSize ) */
  size?: number;
};

export type GetEmailDomainDomainAccountParams = {
/**
 * Account name
 */
accountName?: string;
/**
 * Account description
 */
description?: string;
};

export type GetEmailDomainMailingListLimitsParams = {
/**
 * If true, messages are moderate
 */
moderatorMessage: boolean;
};

export type PostEmailDomainDelegatedAccountEmailResponderBody = {
  /** Content of responder */
  content: string;
  /** If true, emails will be copy to emailToCopy address */
  copy: boolean;
  /** Account where copy emails */
  copyTo?: string;
  /** Date of start responder */
  from?: string;
  /** Date of end responder */
  to?: string;
};

export type PostEmailDomainDelegatedAccountEmailFilterNameRuleBody = {
  /** Header to be filtered */
  header: string;
  /** Rule of filter */
  operand: DomainDomainFilterOperandEnumOVH;
  /** Rule parameter of filter */
  value: string;
};

export type PostEmailDomainDelegatedAccountEmailFilterNameChangePriorityBody = {
  /** New priority */
  priority: number;
};

export type PostEmailDomainDelegatedAccountEmailFilterNameChangeActivityBody = {
  /** New activity */
  activity: boolean;
};

export type PostEmailDomainDelegatedAccountEmailFilterBody = {
  /** Action of filter */
  action: DomainDomainFilterActionEnumOVH;
  /** Action parameter of filter */
  actionParam?: string;
  /** If true filter is active */
  active: boolean;
  /** Header to be filtered */
  header: string;
  /** Filter name */
  name: string;
  /** Rule of filter */
  operand: DomainDomainFilterOperandEnumOVH;
  /** Priority of filter */
  priority: number;
  /** Rule parameter of filter */
  value: string;
};

export type PostEmailDomainDelegatedAccountEmailChangePasswordBody = {
  /** New password */
  password: string;
};

export type GetEmailDomainDelegatedAccountParams = {
/**
 * Name of email address
 */
accountName?: string;
/**
 * Domain of email address
 */
domain?: string;
};

export type GetEmailDomainParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * Resource record fieldType
 */
export type ZoneNamedResolutionFieldTypeEnumOVH = typeof ZoneNamedResolutionFieldTypeEnumOVH[keyof typeof ZoneNamedResolutionFieldTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ZoneNamedResolutionFieldTypeEnumOVH = {
  A: 'A',
  AAAA: 'AAAA',
  CAA: 'CAA',
  CNAME: 'CNAME',
  DKIM: 'DKIM',
  DMARC: 'DMARC',
  DNAME: 'DNAME',
  LOC: 'LOC',
  MX: 'MX',
  NAPTR: 'NAPTR',
  NS: 'NS',
  PTR: 'PTR',
  SPF: 'SPF',
  SRV: 'SRV',
  SSHFP: 'SSHFP',
  TLSA: 'TLSA',
  TXT: 'TXT',
} as const;

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Way of handling the renew
 * @nullable
 */
export type ServicesServiceOVHRenew = ServiceRenewTypeOVH | null;

/**
 * All reasons you can provide for a service termination
 */
export type ServiceTerminationReasonEnumOVH = typeof ServiceTerminationReasonEnumOVH[keyof typeof ServiceTerminationReasonEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationReasonEnumOVH = {
  FEATURES_DONT_SUIT_ME: 'FEATURES_DONT_SUIT_ME',
  LACK_OF_PERFORMANCES: 'LACK_OF_PERFORMANCES',
  MIGRATED_TO_ANOTHER_OVH_PRODUCT: 'MIGRATED_TO_ANOTHER_OVH_PRODUCT',
  MIGRATED_TO_COMPETITOR: 'MIGRATED_TO_COMPETITOR',
  NOT_ENOUGH_RECOGNITION: 'NOT_ENOUGH_RECOGNITION',
  NOT_NEEDED_ANYMORE: 'NOT_NEEDED_ANYMORE',
  NOT_RELIABLE: 'NOT_RELIABLE',
  NO_ANSWER: 'NO_ANSWER',
  OTHER: 'OTHER',
  PRODUCT_DIMENSION_DONT_SUIT_ME: 'PRODUCT_DIMENSION_DONT_SUIT_ME',
  PRODUCT_TOOLS_DONT_SUIT_ME: 'PRODUCT_TOOLS_DONT_SUIT_ME',
  TOO_EXPENSIVE: 'TOO_EXPENSIVE',
  TOO_HARD_TO_USE: 'TOO_HARD_TO_USE',
  UNSATIFIED_BY_CUSTOMER_SUPPORT: 'UNSATIFIED_BY_CUSTOMER_SUPPORT',
} as const;

export type ServiceStateEnumOVH = typeof ServiceStateEnumOVH[keyof typeof ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceStateEnumOVH = {
  autorenewInProgress: 'autorenewInProgress',
  expired: 'expired',
  inCreation: 'inCreation',
  ok: 'ok',
  pendingDebt: 'pendingDebt',
  unPaid: 'unPaid',
} as const;

/**
 * Detailed renewal type of a service
 */
export type ServiceRenewalTypeEnumOVH = typeof ServiceRenewalTypeEnumOVH[keyof typeof ServiceRenewalTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewalTypeEnumOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  automaticV2024: 'automaticV2024',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Details about a Service
 */
export interface ServicesServiceOVH {
  /** Indicates that the service can be set up to be deleted at expiration */
  readonly canDeleteAtExpiration?: boolean;
  readonly contactAdmin?: string;
  readonly contactBilling?: string;
  readonly contactTech?: string;
  readonly creation?: string;
  readonly domain?: string;
  /** @nullable */
  readonly engagedUpTo?: string | null;
  readonly expiration?: string;
  /**
   * All the possible renew period of your service in month
   * @nullable
   */
  readonly possibleRenewPeriod?: readonly number[] | null;
  /**
   * Way of handling the renew
   * @nullable
   */
  renew?: ServicesServiceOVHRenew;
  readonly renewalType?: ServiceRenewalTypeEnumOVH;
  readonly serviceId?: number;
  readonly status?: ServiceStateEnumOVH;
}

/**
 * Map a possible renew for a specific service
 */
export interface ServiceRenewTypeOVH {
  /** The service is automatically renewed */
  automatic?: boolean;
  /** The service will be deleted at expiration */
  deleteAtExpiration?: boolean;
  /** The service forced to be renewed */
  forced?: boolean;
  /**
   * The service needs to be manually renewed and paid
   * @nullable
   */
  manualPayment?: boolean | null;
  /**
   * period of renew in month
   * @nullable
   */
  period?: number | null;
}

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * DKIM for a domain
 */
export interface EmailDomainDkimSimplifiedOVH {
  /**
   * activeSelector
   * @nullable
   */
  readonly activeSelector?: string | null;
  /**
   * If true your DNS CNAME configuration is valid
   * @nullable
   */
  readonly autoconfig?: boolean | null;
  /**
   * DKIM status
   * @nullable
   */
  readonly selectors?: readonly EmailDomainDKIMSelectorOVH[] | null;
  /** DKIM status */
  readonly status?: EmailDomainDKIMStatusEnumOVH;
}

/**
 * Possible values for domain task status
 */
export type EmailDomainTaskStatusEnumOVH = typeof EmailDomainTaskStatusEnumOVH[keyof typeof EmailDomainTaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EmailDomainTaskStatusEnumOVH = {
  cancelled: 'cancelled',
  customerError: 'customerError',
  doing: 'doing',
  done: 'done',
  init: 'init',
  ovhError: 'ovhError',
  todo: 'todo',
} as const;

/**
 * Tasks
 */
export interface EmailDomainTaskOVH {
  /** Domain name of the task */
  readonly domain?: string;
  /** Function of the task */
  readonly function?: string;
  /** Id of the task */
  readonly id?: number;
  /** Status of the task */
  readonly status?: EmailDomainTaskStatusEnumOVH;
}

/**
 * Task special account List
 */
export interface EmailDomainTaskSpecialAccountOVH {
  /** Account name of task */
  readonly account?: string;
  /** Action of task */
  readonly action?: DomainDomainSpecialAccountActionEnumOVH;
  /** Creation date of task */
  readonly date?: string;
  /** Domain name of task */
  readonly domain?: string;
  /** Id of task */
  readonly id?: string;
  /** Type of action filter */
  readonly type?: DomainDomainSpecialAccountTypeEnumOVH;
}

/**
 * Task Pop List
 */
export interface EmailDomainTaskPopOVH {
  /** Action of task */
  readonly action?: DomainDomainPopActionEnumOVH;
  /** Creation date of task */
  readonly date?: string;
  /** Domain name of task */
  readonly domain?: string;
  /** Id of task */
  readonly id?: number;
  /** Account name of task */
  readonly name?: string;
}

/**
 * Task Mailing List
 */
export interface EmailDomainTaskMlOVH {
  readonly account?: string;
  readonly action?: string;
  readonly date?: string;
  readonly domain?: string;
  readonly id?: number;
  readonly language?: DomainDomainMlLanguageEnumOVH;
}

/**
 * Task filter List
 */
export interface EmailDomainTaskFilterOVH {
  /** Account name of task */
  readonly account?: string;
  /** Action of task */
  readonly action?: string;
  /** Domain name of task */
  readonly domain?: string;
  /** Id of task */
  readonly id?: number;
  /** Creation date of task */
  readonly timestamp?: string;
}

/**
 * Subscribers List
 */
export interface EmailDomainSubscriberOVH {
  readonly domain?: string;
  readonly email?: string;
  readonly mailinglist?: string;
}

/**
 * Rule List
 */
export interface EmailDomainRuleOVH {
  /** Header to be filtered */
  readonly header?: string;
  readonly id?: number;
  /** Rule of filter */
  readonly operand?: DomainDomainFilterOperandEnumOVH;
  /** Rule parameter of filter */
  readonly value?: string;
}

/**
 * Responder of account
 */
export interface EmailDomainResponderAccountOVH {
  /** Name of account */
  readonly account?: string;
  /** Content of responder */
  content?: string;
  /** If true, emails will be copy to emailToCopy address */
  readonly copy?: boolean;
  /**
   * Account where copy emails
   * @nullable
   */
  readonly copyTo?: string | null;
  /**
   * Date of start responder
   * @nullable
   */
  from?: string | null;
  /**
   * Date of end responder
   * @nullable
   */
  to?: string | null;
}

/**
 * Responder
 */
export interface EmailDomainResponderOVH {
  /** Name of account */
  readonly account?: string;
  /** Content of responder */
  content?: string;
  /** If false, emails will be dropped. If true and copyTo field is empty, emails will be delivered to your mailbox. If true and copyTo is set with an address, emails will be delivered to this address */
  readonly copy?: boolean;
  /**
   * Account where copy emails
   * @nullable
   */
  readonly copyTo?: string | null;
  /**
   * Date of start responder
   * @nullable
   */
  from?: string | null;
  /**
   * Date of end responder
   * @nullable
   */
  to?: string | null;
}

/**
 * Global Redirection
 */
export interface EmailDomainRedirectionGlobalOVH {
  /** Name of redirection */
  readonly from?: string;
  /** Id of redirection */
  readonly id?: string;
  /** Target of redirection */
  readonly to?: string;
}

/**
 * Create redirection
 */
export interface EmailDomainRedirectionCreationOVH {
  /** Name of redirection */
  from: string;
  /** If true keep a local copy */
  localCopy: boolean;
  /** Target of account */
  to: string;
}

/**
 * Change redirection
 */
export interface EmailDomainRedirectionChangeRedirectionCreationOVH {
  /** Target of account */
  to: string;
}

/**
 * Moderators List
 */
export interface EmailDomainModeratorOVH {
  readonly domain?: string;
  readonly email?: string;
  readonly mailinglist?: string;
}

/**
 * Types of migration service
 */
export type EmailDomainMigrationServiceTypeOVH = typeof EmailDomainMigrationServiceTypeOVH[keyof typeof EmailDomainMigrationServiceTypeOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EmailDomainMigrationServiceTypeOVH = {
  EMAIL_PRO: 'EMAIL PRO',
  HOSTED_EXCHANGE: 'HOSTED EXCHANGE',
  PRIVATE_EXCHANGE: 'PRIVATE EXCHANGE',
  PROVIDER_EXCHANGE: 'PROVIDER EXCHANGE',
} as const;

/**
 * Migration service
 */
export interface EmailDomainMigrationServiceOVH {
  /** Admin contact of service */
  readonly contactAdmin?: string;
  /** Billing contact of service */
  readonly contactBilling?: string;
  /** Tech contact of service */
  readonly contactTech?: string;
  /** Creation date of service */
  readonly creation?: string;
  /** Service name allowed as migration destination */
  readonly destinationServiceName?: string;
  /** Expiration date of service */
  readonly expiration?: string;
  /** Offer type of service */
  readonly type?: EmailDomainMigrationServiceTypeOVH;
}

/**
 * Result code of check migration
 */
export type EmailDomainMigrationCheckCodeEnumOVH = typeof EmailDomainMigrationCheckCodeEnumOVH[keyof typeof EmailDomainMigrationCheckCodeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EmailDomainMigrationCheckCodeEnumOVH = {
  ACCOUNT_EMPTY: 'ACCOUNT_EMPTY',
  ACCOUNT_INPROGRESS: 'ACCOUNT_INPROGRESS',
  DELEGATION_EXIST: 'DELEGATION_EXIST',
  DOMAIN_EMPTY: 'DOMAIN_EMPTY',
  FILTER_EXIST: 'FILTER_EXIST',
  FORWARD_EXIST: 'FORWARD_EXIST',
  FORWARD_LOCAL: 'FORWARD_LOCAL',
  MAILINGLIST_EXIST: 'MAILINGLIST_EXIST',
  MAILINGLIST_INPROGRESS: 'MAILINGLIST_INPROGRESS',
  MAILPROXY_BAD_INFRA: 'MAILPROXY_BAD_INFRA',
  MAILPROXY_EMPTY: 'MAILPROXY_EMPTY',
  MAILPROXY_INPROGRESS: 'MAILPROXY_INPROGRESS',
  MAILPROXY_RESERVATION: 'MAILPROXY_RESERVATION',
  REDIRECTION_INPROGRESS: 'REDIRECTION_INPROGRESS',
  RESPONDER_EXIST: 'RESPONDER_EXIST',
  RESPONDER_INPROGRESS: 'RESPONDER_INPROGRESS',
  UNKNOW: 'UNKNOW',
} as const;

/**
 * Check Migration result
 */
export interface EmailDomainMigrationCheckResultStructOVH {
  /** Result code of check migration */
  code?: EmailDomainMigrationCheckCodeEnumOVH;
  /**
   * Details of result code
   * @nullable
   */
  details?: string | null;
}

/**
 * Check Migration result
 */
export interface EmailDomainMigrationCheckStructOVH {
  /**
   * List of aliases
   * @nullable
   */
  alias?: string[] | null;
  /**
   * List of errors
   * @nullable
   */
  error?: EmailDomainMigrationCheckResultStructOVH[] | null;
  /**
   * List of filters
   * @nullable
   */
  filter?: string[] | null;
  /**
   * List of forwards
   * @nullable
   */
  forward?: string[] | null;
  /**
   * List of warnings
   * @nullable
   */
  warning?: EmailDomainMigrationCheckResultStructOVH[] | null;
}

/**
 * Migration account
 */
export interface EmailDomainMigrationAccountOVH {
  /** Destination account name */
  readonly destinationEmailAddress?: string;
  /** Account maximum size */
  readonly quota?: number;
}

/**
 * Language of mailing list
 * @nullable
 */
export type EmailDomainMailingListOVHLanguage = DomainDomainMlLanguageEnumOVH | null;

/**
 * Mailing List
 */
export interface EmailDomainMailingListOVH {
  /** Id of mailing list */
  readonly id?: number;
  /**
   * Language of mailing list
   * @nullable
   */
  language?: EmailDomainMailingListOVHLanguage;
  /** Name of mailing list */
  readonly name?: string;
  /**
   * Subscribers number of mailing list
   * @nullable
   */
  readonly nbSubscribers?: number | null;
  /**
   * Last update subscribers
   * @nullable
   */
  readonly nbSubscribersUpdateDate?: string | null;
  /** Options of mailing list */
  readonly options?: DomainDomainMlOptionsStructOVH;
  /** Owner email of mailing list */
  ownerEmail?: string;
  /** Email to reply of mailing list */
  replyTo?: string;
}

/**
 * Action of filter
 * @nullable
 */
export type EmailDomainFilterOVHAction = DomainDomainFilterActionEnumOVH | null;

/**
 * Filter List
 */
export interface EmailDomainFilterOVH {
  /**
   * Action of filter
   * @nullable
   */
  readonly action?: EmailDomainFilterOVHAction;
  /**
   * Action parameter of filter
   * @nullable
   */
  readonly actionParam?: string | null;
  /** If true filter is active */
  readonly active?: boolean;
  /** Domain name of filter */
  readonly domain?: string;
  /** Filter name */
  readonly name?: string;
  /** Account name of filter */
  readonly pop?: string;
  /** Priority of filter */
  readonly priority?: number;
}

/**
 * IAM resource metadata
 * @nullable
 */
export type EmailDomainDomainServiceWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * Result of diagnose
 */
export type EmailDomainDomainDiagnoseResultEnumOVH = typeof EmailDomainDomainDiagnoseResultEnumOVH[keyof typeof EmailDomainDomainDiagnoseResultEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EmailDomainDomainDiagnoseResultEnumOVH = {
  CUSTOM: 'CUSTOM',
  DEPRECATED: 'DEPRECATED',
  KO: 'KO',
  OK: 'OK',
} as const;

/**
 * Test and result, with proper test strings
 */
export interface EmailDomainDomainDiagnoseTraceStructEmailDomainDomainDiagnoseResultEnumOVH {
  result?: EmailDomainDomainDiagnoseResultEnumOVH;
  test?: string;
}

/**
 * Function of diagnose
 */
export type EmailDomainDomainDiagnoseFunctionEnumOVH = typeof EmailDomainDomainDiagnoseFunctionEnumOVH[keyof typeof EmailDomainDomainDiagnoseFunctionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EmailDomainDomainDiagnoseFunctionEnumOVH = {
  MX: 'MX',
} as const;

/**
 * Result value for diagnose
 */
export type EmailDomainDiagnoseEnumOVH = typeof EmailDomainDiagnoseEnumOVH[keyof typeof EmailDomainDiagnoseEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EmailDomainDiagnoseEnumOVH = {
  checkFail: 'checkFail',
  invalid: 'invalid',
  none: 'none',
  unknown: 'unknown',
  valid: 'valid',
} as const;

/**
 * Domain service
 */
export interface EmailDomainDomainServiceWithIAMOVH {
  /**
   * List of allowed sizes for this domain in bytes
   * @nullable
   */
  readonly allowedAccountSize?: readonly number[] | null;
  /**
   * Creation date of domain
   * @nullable
   */
  readonly creationDate?: string | null;
  /** Name of domain */
  readonly domain?: string;
  /**
   * Filerz of domain
   * @nullable
   */
  readonly filerz?: number | null;
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: EmailDomainDomainServiceWithIAMOVHIam;
  /** Result of MX check if current MX fit to OVH recommendations */
  readonly isMXValid?: EmailDomainDiagnoseEnumOVH;
  /** Result of SPF check if current SPF fit to OVH recommendations */
  readonly isSPFValid?: EmailDomainDiagnoseEnumOVH;
  /**
   * Name of servicelinked with this domain
   * @nullable
   */
  readonly linkTo?: string | null;
  /**
   * Name of new MXPlan service
   * @nullable
   */
  readonly migratedMXPlanServiceName?: string | null;
  /**
   * Offer of email service
   * @nullable
   */
  readonly offer?: string | null;
  /** Domain Status */
  readonly status?: DomainDomainStatusEnumOVH;
}

/**
 * Domain service
 */
export interface EmailDomainDomainServiceOVH {
  /**
   * List of allowed sizes for this domain in bytes
   * @nullable
   */
  readonly allowedAccountSize?: readonly number[] | null;
  /**
   * Creation date of domain
   * @nullable
   */
  readonly creationDate?: string | null;
  /** Name of domain */
  readonly domain?: string;
  /**
   * Filerz of domain
   * @nullable
   */
  readonly filerz?: number | null;
  /** Result of MX check if current MX fit to OVH recommendations */
  readonly isMXValid?: EmailDomainDiagnoseEnumOVH;
  /** Result of SPF check if current SPF fit to OVH recommendations */
  readonly isSPFValid?: EmailDomainDiagnoseEnumOVH;
  /**
   * Name of servicelinked with this domain
   * @nullable
   */
  readonly linkTo?: string | null;
  /**
   * Name of new MXPlan service
   * @nullable
   */
  readonly migratedMXPlanServiceName?: string | null;
  /**
   * Offer of email service
   * @nullable
   */
  readonly offer?: string | null;
  /** Domain Status */
  readonly status?: DomainDomainStatusEnumOVH;
}

/**
 * Result of diagnose
 * @nullable
 */
export type EmailDomainDiagnoseOVHResult = EmailDomainDomainDiagnoseResultEnumOVH | null;

/**
 * Email diagnoses
 */
export interface EmailDomainDiagnoseOVH {
  /** Creation date of diagnose */
  readonly date?: string;
  /** Function of diagnose */
  readonly function?: EmailDomainDomainDiagnoseFunctionEnumOVH;
  /** Id of diagnose */
  readonly id?: number;
  /**
   * Name of account
   * @nullable
   */
  readonly name?: string | null;
  /**
   * Result of diagnose
   * @nullable
   */
  readonly result?: EmailDomainDiagnoseOVHResult;
  /**
   * Trace of diagnose
   * @nullable
   */
  readonly trace?: readonly EmailDomainDomainDiagnoseTraceStructEmailDomainDomainDiagnoseResultEnumOVH[] | null;
}

/**
 * Delegation List
 */
export interface EmailDomainDelegationOVH {
  /** OVH customer unique identifier */
  readonly accountId?: string;
}

/**
 * Status of DKIM deployment
 */
export type EmailDomainDKIMStatusEnumOVH = typeof EmailDomainDKIMStatusEnumOVH[keyof typeof EmailDomainDKIMStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EmailDomainDKIMStatusEnumOVH = {
  disabled: 'disabled',
  enabled: 'enabled',
  error: 'error',
  modifying: 'modifying',
  toConfigure: 'toConfigure',
} as const;

/**
 * Status of DKIM selector
 */
export type EmailDomainDKIMSelectorStatusEnumOVH = typeof EmailDomainDKIMSelectorStatusEnumOVH[keyof typeof EmailDomainDKIMSelectorStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EmailDomainDKIMSelectorStatusEnumOVH = {
  set: 'set',
  toFix: 'toFix',
  toSet: 'toSet',
} as const;

/**
 * DKIM selector data for a domain
 */
export interface EmailDomainDKIMSelectorOVH {
  /** CNAME record */
  cname?: string;
  /** Internal name of selector */
  selectorName?: string;
  /** Status of selector */
  status?: EmailDomainDKIMSelectorStatusEnumOVH;
}

/**
 * Email ACL
 */
export interface EmailDomainAclOVH {
  /** OVH customer unique identifier */
  readonly accountId?: string;
}

/**
 * Account List
 */
export interface EmailDomainAccountDelegatedOVH {
  /** Name of account */
  readonly accountName?: string;
  /**
   * List of allowed sizes for this account in bytes
   * @nullable
   */
  readonly allowedAccountSize?: readonly number[] | null;
  /** Account description */
  description?: string;
  /** Name of domain */
  readonly domain?: string;
  /** Email */
  readonly email?: string;
  /** If true your account is blocked */
  readonly isBlocked?: boolean;
  /** Size of your account in bytes */
  size?: number;
}

/**
 * Account List
 */
export interface EmailDomainAccountOVH {
  /** Name of account */
  readonly accountName?: string;
  /** Account description */
  description?: string;
  /** Name of domain */
  readonly domain?: string;
  /** Email */
  readonly email?: string;
  /** If true your account is blocked */
  readonly isBlocked?: boolean;
  /** Size of your account in bytes */
  size?: number;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * Resource record name
 */
export type DomainZoneRecordTypeEnumOVH = typeof DomainZoneRecordTypeEnumOVH[keyof typeof DomainZoneRecordTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DomainZoneRecordTypeEnumOVH = {
  A: 'A',
  AAAA: 'AAAA',
  CAA: 'CAA',
  CNAME: 'CNAME',
  DKIM: 'DKIM',
  DMARC: 'DMARC',
  DNAME: 'DNAME',
  LOC: 'LOC',
  MX: 'MX',
  NAPTR: 'NAPTR',
  NS: 'NS',
  PTR: 'PTR',
  SPF: 'SPF',
  SRV: 'SRV',
  SSHFP: 'SSHFP',
  TLSA: 'TLSA',
  TXT: 'TXT',
} as const;

/**
 * Zone resource records
 */
export interface DomainZoneRecordOVH {
  /** Resource record Name */
  readonly fieldType?: ZoneNamedResolutionFieldTypeEnumOVH;
  /** Id of the zone resource record */
  readonly id?: number;
  /**
   * Resource record subdomain
   * @nullable
   */
  subDomain?: string | null;
  /** Resource record target */
  target?: string;
  /**
   * Resource record ttl
   * @nullable
   */
  ttl?: number | null;
  /** Resource record zone */
  readonly zone?: string;
}

/**
 * Structure of usage account
 */
export interface DomainDomainUsageAccountStructOVH {
  /**
   * Timestamp
   * @nullable
   */
  date?: string | null;
  /**
   * Number of message in mailbox
   * @nullable
   */
  emailCount?: number | null;
  /**
   * Size of mailbox (bytes)
   * @nullable
   */
  quota?: number | null;
}

/**
 * Values of number account (account, mailing list, redirection and responder)
 */
export interface DomainDomainSummaryOVH {
  /** Number of mailboxes */
  account?: number;
  /** Number of mailing lists */
  mailingList?: number;
  /** Number of redirections */
  redirection?: number;
  /** Number of responders */
  responder?: number;
}

/**
 * Possible values for status domain
 */
export type DomainDomainStatusEnumOVH = typeof DomainDomainStatusEnumOVH[keyof typeof DomainDomainStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DomainDomainStatusEnumOVH = {
  close: 'close',
  ok: 'ok',
  readOnly: 'readOnly',
  unknown: 'unknown',
} as const;

/**
 * Possible type task
 */
export type DomainDomainSpecialAccountTypeEnumOVH = typeof DomainDomainSpecialAccountTypeEnumOVH[keyof typeof DomainDomainSpecialAccountTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DomainDomainSpecialAccountTypeEnumOVH = {
  '25g': '25g',
  alias: 'alias',
  delete: 'delete',
  filter: 'filter',
  forward: 'forward',
  responder: 'responder',
} as const;

/**
 * Possible values for pop action task
 */
export type DomainDomainSpecialAccountActionEnumOVH = typeof DomainDomainSpecialAccountActionEnumOVH[keyof typeof DomainDomainSpecialAccountActionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DomainDomainSpecialAccountActionEnumOVH = {
  add: 'add',
  change: 'change',
  delete: 'delete',
} as const;

/**
 * Values of quota account (pop, mailing list, redirection, responder and big pop)
 */
export interface DomainDomainQuotaOVH {
  /** Maximum number of mailboxes */
  account?: number;
  /** Maximum number of aliases */
  alias?: number;
  /** Maximum number of mailing lists */
  mailingList?: number;
  /** Maximum number of redirections */
  redirection?: number;
  /** Maximum number of responders */
  responder?: number;
}

/**
 * Possible values for pop action task
 */
export type DomainDomainPopActionEnumOVH = typeof DomainDomainPopActionEnumOVH[keyof typeof DomainDomainPopActionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DomainDomainPopActionEnumOVH = {
  addAccount: 'addAccount',
  changeAccount: 'changeAccount',
  changePassword: 'changePassword',
  deleteAccount: 'deleteAccount',
  internalMigration: 'internalMigration',
  migration: 'migration',
  temporaryTask: 'temporaryTask',
  unknown: 'unknown',
} as const;

/**
 * Structure of imapCopy
 */
export interface DomainDomainMlOptionsStructOVH {
  /** If true, messages are moderate */
  moderatorMessage?: boolean;
  /** If true, enabled moderation for subscribe */
  subscribeByModerator?: boolean;
  /** If true, just user can post */
  usersPostOnly?: boolean;
}

/**
 * Structure of mailinglist limits
 */
export interface DomainDomainMlLimitsOVH {
  /** Maximum number of subscribers */
  subscribers?: number;
}

/**
 * Possible values for mailing list language
 */
export type DomainDomainMlLanguageEnumOVH = typeof DomainDomainMlLanguageEnumOVH[keyof typeof DomainDomainMlLanguageEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DomainDomainMlLanguageEnumOVH = {
  de: 'de',
  en: 'en',
  es: 'es',
  fr: 'fr',
  it: 'it',
  nl: 'nl',
  pl: 'pl',
  pt: 'pt',
} as const;

/**
 * Possible values for MX filter
 */
export type DomainDomainMXFilterEnumOVH = typeof DomainDomainMXFilterEnumOVH[keyof typeof DomainDomainMXFilterEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DomainDomainMXFilterEnumOVH = {
  CUSTOM: 'CUSTOM',
  FULL_FILTERING: 'FULL_FILTERING',
  NO_FILTERING: 'NO_FILTERING',
  REDIRECT: 'REDIRECT',
  SIMPLE_FILTERING: 'SIMPLE_FILTERING',
} as const;

/**
 * Possible values for filter operation
 */
export type DomainDomainFilterOperandEnumOVH = typeof DomainDomainFilterOperandEnumOVH[keyof typeof DomainDomainFilterOperandEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DomainDomainFilterOperandEnumOVH = {
  checkspf: 'checkspf',
  contains: 'contains',
  noContains: 'noContains',
} as const;

/**
 * Possible values for filter action
 */
export type DomainDomainFilterActionEnumOVH = typeof DomainDomainFilterActionEnumOVH[keyof typeof DomainDomainFilterActionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DomainDomainFilterActionEnumOVH = {
  accept: 'accept',
  account: 'account',
  delete: 'delete',
  redirect: 'redirect',
} as const;

