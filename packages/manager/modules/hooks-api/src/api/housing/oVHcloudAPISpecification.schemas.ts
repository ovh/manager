/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetDedicatedHousingServiceNameTaskParams = {
/**
 * Filter the value of function property (=)
 */
function?: DedicatedHousingTaskFunctionEnumOVH;
/**
 * Filter the value of status property (=)
 */
status?: DedicatedTaskStatusEnumOVH;
};

export type PostDedicatedHousingServiceNameFeaturesBackupFTPAccessBody = {
  /** Whether to allow the CIFS (SMB) protocol for this ACL */
  cifs: boolean;
  /** Whether to allow the FTP protocol for this ACL */
  ftp?: boolean;
  /** The IP Block specific to this ACL. It musts belong to your server. */
  ipBlock: IpBlockOVH;
  /** Whether to allow the NFS protocol for this ACL */
  nfs: boolean;
};

export type GetDedicatedHousingParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Way of handling the renew
 * @nullable
 */
export type ServicesServiceOVHRenew = ServiceRenewTypeOVH | null;

export type ServiceStateEnumOVH = typeof ServiceStateEnumOVH[keyof typeof ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceStateEnumOVH = {
  autorenewInProgress: 'autorenewInProgress',
  expired: 'expired',
  inCreation: 'inCreation',
  ok: 'ok',
  pendingDebt: 'pendingDebt',
  unPaid: 'unPaid',
} as const;

/**
 * Detailed renewal type of a service
 */
export type ServiceRenewalTypeEnumOVH = typeof ServiceRenewalTypeEnumOVH[keyof typeof ServiceRenewalTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewalTypeEnumOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  automaticV2024: 'automaticV2024',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Details about a Service
 */
export interface ServicesServiceOVH {
  /** Indicates that the service can be set up to be deleted at expiration */
  readonly canDeleteAtExpiration?: boolean;
  readonly contactAdmin?: string;
  readonly contactBilling?: string;
  readonly contactTech?: string;
  readonly creation?: string;
  readonly domain?: string;
  /** @nullable */
  readonly engagedUpTo?: string | null;
  readonly expiration?: string;
  /**
   * All the possible renew period of your service in month
   * @nullable
   */
  readonly possibleRenewPeriod?: readonly number[] | null;
  /**
   * Way of handling the renew
   * @nullable
   */
  renew?: ServicesServiceOVHRenew;
  readonly renewalType?: ServiceRenewalTypeEnumOVH;
  readonly serviceId?: number;
  readonly status?: ServiceStateEnumOVH;
}

/**
 * Map a possible renew for a specific service
 */
export interface ServiceRenewTypeOVH {
  /** The service is automatically renewed */
  automatic?: boolean;
  /** The service will be deleted at expiration */
  deleteAtExpiration?: boolean;
  /** The service forced to be renewed */
  forced?: boolean;
  /**
   * The service needs to be manually renewed and paid
   * @nullable
   */
  manualPayment?: boolean | null;
  /**
   * period of renew in month
   * @nullable
   */
  period?: number | null;
}

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * Server tasks
 */
export interface DedicatedServerTaskOVH {
  /**
   * Details of this task
   * @nullable
   */
  readonly comment?: string | null;
  /**
   * Completion date
   * @nullable
   */
  readonly doneDate?: string | null;
  /** Function name */
  readonly function?: DedicatedTaskFunctionEnumOVH;
  /**
   * last update
   * @nullable
   */
  readonly lastUpdate?: string | null;
  /** Whether this task need to be scheduled or not */
  readonly needSchedule?: boolean;
  /**
   * Extra information about this task
   * @nullable
   */
  readonly note?: string | null;
  /**
   * ID of the planned intervention for this task
   * @nullable
   */
  readonly plannedInterventionId?: number | null;
  /** Task Creation date */
  readonly startDate?: string;
  /** Task status */
  readonly status?: DedicatedTaskStatusEnumOVH;
  /**
   * Task result tags output
   * @nullable
   */
  readonly tags?: readonly ComplexTypeSafeKeyValueCanBeNullStringOVH[] | null;
  /** the id of the task */
  readonly taskId?: number;
  /**
   * Reference of the thread on the support tool
   * @nullable
   */
  readonly ticketReference?: string | null;
}

/**
 * Different backup storage type
 */
export type DedicatedServerBackupStorageTypeEnumOVH = typeof DedicatedServerBackupStorageTypeEnumOVH[keyof typeof DedicatedServerBackupStorageTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerBackupStorageTypeEnumOVH = {
  included: 'included',
  storage: 'storage',
} as const;

/**
 * Backup Ftp ACL for this server and Backup Ftp
 */
export interface DedicatedServerBackupFtpAclOVH {
  /** Whether to allow the CIFS (SMB) protocol for this ACL */
  cifs?: boolean;
  /** Whether to allow the FTP protocol for this ACL */
  ftp?: boolean;
  /** The IP Block specific to this ACL */
  readonly ipBlock?: IpBlockOVH;
  /** Whether the rule has been applied on the Backup Ftp */
  readonly isApplied?: boolean;
  /** Date of the last object modification */
  readonly lastUpdate?: string;
  /** Whether to allow the NFS protocol for this ACL */
  nfs?: boolean;
}

/**
 * The disk space currently used on your backup FTP in percent
 * @nullable
 */
export type DedicatedServerBackupFtpOVHUsage = ComplexTypeUnitAndValueLongOVH | null;

/**
 * The disk space available in gigabytes
 * @nullable
 */
export type DedicatedServerBackupFtpOVHQuota = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Backup Ftp assigned to this server
 */
export interface DedicatedServerBackupFtpOVH {
  /** The backup FTP server name */
  readonly ftpBackupName?: string;
  /**
   * The disk space available in gigabytes
   * @nullable
   */
  readonly quota?: DedicatedServerBackupFtpOVHQuota;
  /**
   * If not-null, gives the date since when your account was set in read-only mode because the quota was exceeded
   * @nullable
   */
  readonly readOnlyDate?: string | null;
  /** The backup FTP type */
  readonly type?: DedicatedServerBackupStorageTypeEnumOVH;
  /**
   * The disk space currently used on your backup FTP in percent
   * @nullable
   */
  readonly usage?: DedicatedServerBackupFtpOVHUsage;
}

/**
 * Distincts task
 */
export type DedicatedHousingTaskFunctionEnumOVH = typeof DedicatedHousingTaskFunctionEnumOVH[keyof typeof DedicatedHousingTaskFunctionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedHousingTaskFunctionEnumOVH = {
  applyBackupFtpAcls: 'applyBackupFtpAcls',
  applyBackupFtpQuota: 'applyBackupFtpQuota',
  changePasswordBackupFTP: 'changePasswordBackupFTP',
  createBackupFTP: 'createBackupFTP',
  migrateBackupFTP: 'migrateBackupFTP',
  removeBackupFTP: 'removeBackupFTP',
} as const;

/**
 * Housing tasks
 */
export interface DedicatedHousingTaskOVH {
  /**
   * Details of this task
   * @nullable
   */
  readonly comment?: string | null;
  /**
   * Completion date
   * @nullable
   */
  readonly doneDate?: string | null;
  /** Function name */
  readonly function?: DedicatedHousingTaskFunctionEnumOVH;
  /**
   * last update
   * @nullable
   */
  readonly lastUpdate?: string | null;
  /** Task Creation date */
  readonly startDate?: string;
  /** Task status */
  readonly status?: DedicatedTaskStatusEnumOVH;
  /** the id of the task */
  readonly taskId?: number;
}

/**
 * A structure describing current housing options
 */
export interface DedicatedHousingOptionsOVH {
  /** Number of APC connected to this housing bay */
  apcCount?: number;
  /** Is this housing bay have handsneyes service */
  handsneyes?: boolean;
  /** High Availability routing service offer */
  highAvailabilityRouting?: string;
}

/**
 * A structure describing the Bay`s link information
 */
export interface DedicatedHousingLinkInfoOVH {
  /** Router port number */
  port?: string;
  /** Router in charge of your network */
  router?: string;
}

/**
 * Router related information
 * @nullable
 */
export type DedicatedHousingNetworkInfoOVHLink = DedicatedHousingLinkInfoOVH | null;

/**
 * Network gateway of the bay
 * @nullable
 */
export type DedicatedHousingIpInfoOVHGateway = IpOVH | null;

/**
 * A structure describing the Bay's network configuration
 */
export interface DedicatedHousingIpInfoOVH {
  /**
   * Network gateway of the bay
   * @nullable
   */
  gateway?: DedicatedHousingIpInfoOVHGateway;
  /** Network address of the bay */
  network?: IpBlockOVH;
  /**
   * Reserved addresses. You should not use them in your network
   * @nullable
   */
  reservedAddresses?: IpOVH[] | null;
}

/**
 * IPv6 network information
 * @nullable
 */
export type DedicatedHousingNetworkInfoOVHIpv6 = DedicatedHousingIpInfoOVH | null;

/**
 * IPv4 network information
 * @nullable
 */
export type DedicatedHousingNetworkInfoOVHIpv4 = DedicatedHousingIpInfoOVH | null;

/**
 * A structure describing the Bay`s network configuration
 */
export interface DedicatedHousingNetworkInfoOVH {
  /**
   * IPv4 network information
   * @nullable
   */
  ipv4?: DedicatedHousingNetworkInfoOVHIpv4;
  /**
   * IPv6 network information
   * @nullable
   */
  ipv6?: DedicatedHousingNetworkInfoOVHIpv6;
  /**
   * Router related information
   * @nullable
   */
  link?: DedicatedHousingNetworkInfoOVHLink;
}

/**
 * IAM resource metadata
 * @nullable
 */
export type DedicatedHousingHousingWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * Housing bay datacenter
 * @nullable
 */
export type DedicatedHousingHousingWithIAMOVHDatacenter = DedicatedHousingDatacenterEnumOVH | null;

/**
 * Housing bay
 */
export interface DedicatedHousingHousingWithIAMOVH {
  /**
   * Housing bay datacenter
   * @nullable
   */
  readonly datacenter?: DedicatedHousingHousingWithIAMOVHDatacenter;
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: DedicatedHousingHousingWithIAMOVHIam;
  /** The name you give to the bay */
  readonly name?: string;
  /** Housing bay network */
  readonly network?: readonly DedicatedHousingNetworkInfoOVH[];
  /** Housing bay options */
  readonly options?: DedicatedHousingOptionsOVH;
  /** The bay's description */
  readonly rack?: string;
  /** Bay Security code */
  readonly securityCode?: string;
}

/**
 * Housing bay
 */
export interface DedicatedHousingHousingOVH {
  /**
   * Housing bay datacenter
   * @nullable
   */
  readonly datacenter?: DedicatedHousingHousingOVHDatacenter;
  /** The name you give to the bay */
  readonly name?: string;
  /** Housing bay network */
  readonly network?: readonly DedicatedHousingNetworkInfoOVH[];
  /** Housing bay options */
  readonly options?: DedicatedHousingOptionsOVH;
  /** The bay's description */
  readonly rack?: string;
  /** Bay Security code */
  readonly securityCode?: string;
}

/**
 * Housing bay High Availablility offers
 */
export type DedicatedHousingHaRoutingOfferEnumOVH = typeof DedicatedHousingHaRoutingOfferEnumOVH[keyof typeof DedicatedHousingHaRoutingOfferEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedHousingHaRoutingOfferEnumOVH = {
  ha2x2: 'ha2x2',
  ha2x4: 'ha2x4',
} as const;

/**
 * A structure describing informations for High Availability routing service orderable for this housing bay
 */
export interface DedicatedHousingHaRoutingOrderableOVH {
  /** High Availability routing service offers */
  offer?: DedicatedHousingHaRoutingOfferEnumOVH[];
  /** Is a routing service is orderable for this housing bay */
  orderable?: boolean;
}

/**
 * Housing bay datacenters
 */
export type DedicatedHousingDatacenterEnumOVH = typeof DedicatedHousingDatacenterEnumOVH[keyof typeof DedicatedHousingDatacenterEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedHousingDatacenterEnumOVH = {
  gsw: 'gsw',
  pdc1: 'pdc1',
} as const;

/**
 * Housing bay datacenter
 * @nullable
 */
export type DedicatedHousingHousingOVHDatacenter = DedicatedHousingDatacenterEnumOVH | null;

/**
 * A structure describing informations for APC orderable for this housing bay
 */
export interface DedicatedHousingApcOrderableOVH {
  /** Is this APC free */
  free?: boolean;
  /** Is an APC is orderable for this housing bay */
  orderable?: boolean;
}

/**
 * different task status
 */
export type DedicatedTaskStatusEnumOVH = typeof DedicatedTaskStatusEnumOVH[keyof typeof DedicatedTaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedTaskStatusEnumOVH = {
  cancelled: 'cancelled',
  customerError: 'customerError',
  doing: 'doing',
  done: 'done',
  init: 'init',
  ovhError: 'ovhError',
  todo: 'todo',
} as const;

/**
 * different task operation
 */
export type DedicatedTaskFunctionEnumOVH = typeof DedicatedTaskFunctionEnumOVH[keyof typeof DedicatedTaskFunctionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedTaskFunctionEnumOVH = {
  INFRA_002_VirtualNetworkInterface: 'INFRA_002_VirtualNetworkInterface',
  INFRA_002_VirtualNetworkInterface_group: 'INFRA_002_VirtualNetworkInterface_group',
  INFRA_002_VirtualNetworkInterface_ungroup: 'INFRA_002_VirtualNetworkInterface_ungroup',
  INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_group: 'INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_group',
  INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_ungroup: 'INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_ungroup',
  INFRA_ONE_NETWORK_VirtualNetworkInterface_group: 'INFRA_ONE_NETWORK_VirtualNetworkInterface_group',
  INFRA_ONE_NETWORK_VirtualNetworkInterface_ungroup: 'INFRA_ONE_NETWORK_VirtualNetworkInterface_ungroup',
  addVirtualMac: 'addVirtualMac',
  addWindowSplaFromExistingSerial: 'addWindowSplaFromExistingSerial',
  applyBackupFtpAcls: 'applyBackupFtpAcls',
  applyBackupFtpQuota: 'applyBackupFtpQuota',
  bypassAntiDDosGame: 'bypassAntiDDosGame',
  changePasswordBackupFTP: 'changePasswordBackupFTP',
  changeRipeOrg: 'changeRipeOrg',
  checkAndReleaseIp: 'checkAndReleaseIp',
  createBackupFTP: 'createBackupFTP',
  createOrUpdateRipeOrg: 'createOrUpdateRipeOrg',
  createPrivateNetwork: 'createPrivateNetwork',
  disableFirewall: 'disableFirewall',
  enableFirewall: 'enableFirewall',
  genericMoveFloatingIp: 'genericMoveFloatingIp',
  hardReboot: 'hardReboot',
  hardware_update: 'hardware_update',
  'ipmi/configureSGX': 'ipmi/configureSGX',
  migrateBackupFTP: 'migrateBackupFTP',
  moveFloatingIp: 'moveFloatingIp',
  moveVirtualMac: 'moveVirtualMac',
  reagregateBlock: 'reagregateBlock',
  rebootPower8To: 'rebootPower8To',
  reinstallServer: 'reinstallServer',
  releaseIp: 'releaseIp',
  removeBackupFTP: 'removeBackupFTP',
  removeVirtualMac: 'removeVirtualMac',
  requestAccessIPMI: 'requestAccessIPMI',
  resetIPMI: 'resetIPMI',
  resetIPMISession: 'resetIPMISession',
  testIPMIhttp: 'testIPMIhttp',
  testIPMIpassword: 'testIPMIpassword',
  testIPMIping: 'testIPMIping',
  virtualMacAdd: 'virtualMacAdd',
  virtualMacDelete: 'virtualMacDelete',
} as const;

/**
 * A numeric value tagged with its unit
 */
export interface ComplexTypeUnitAndValueLongOVH {
  unit?: string;
  value?: number;
}

/**
 * Key and value, with proper key strings
 */
export interface ComplexTypeSafeKeyValueCanBeNullStringOVH {
  /** @nullable */
  key?: string | null;
  value?: string;
}

