/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetAllDomDomainsParams = {
/**
 * Filter the value of domain property (like)
 */
domain?: string;
};

export type GetAllDomsParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Way of handling the renew
 * @nullable
 */
export type ServicesServiceOVHRenew = ServiceRenewTypeOVH | null;

/**
 * service.StateEnum
 */
export type ServiceStateEnumOVH = typeof ServiceStateEnumOVH[keyof typeof ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceStateEnumOVH = {
  autorenewInProgress: 'autorenewInProgress',
  expired: 'expired',
  inCreation: 'inCreation',
  ok: 'ok',
  pendingDebt: 'pendingDebt',
  unPaid: 'unPaid',
} as const;

/**
 * Detailed renewal type of a service
 */
export type ServiceRenewalTypeEnumOVH = typeof ServiceRenewalTypeEnumOVH[keyof typeof ServiceRenewalTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewalTypeEnumOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Details about a Service
 */
export interface ServicesServiceOVH {
  /** Indicates that the service can be set up to be deleted at expiration */
  readonly canDeleteAtExpiration?: boolean;
  readonly contactAdmin?: string;
  readonly contactBilling?: string;
  readonly contactTech?: string;
  readonly creation?: string;
  readonly domain?: string;
  /** @nullable */
  readonly engagedUpTo?: string | null;
  readonly expiration?: string;
  /**
   * All the possible renew period of your service in month
   * @nullable
   */
  readonly possibleRenewPeriod?: readonly number[] | null;
  /**
   * Way of handling the renew
   * @nullable
   */
  renew?: ServicesServiceOVHRenew;
  readonly renewalType?: ServiceRenewalTypeEnumOVH;
  readonly serviceId?: number;
  readonly status?: ServiceStateEnumOVH;
}

/**
 * Map a possible renew for a specific service
 */
export interface ServiceRenewTypeOVH {
  /** The service is automatically renewed */
  automatic?: boolean;
  /** The service will be deleted at expiration */
  deleteAtExpiration?: boolean;
  /** The service forced to be renewed */
  forced?: boolean;
  /**
   * The service needs to be manually renewed and paid
   * @nullable
   */
  manualPayment?: boolean | null;
  /**
   * period of renew in month
   * @nullable
   */
  period?: number | null;
}

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * Offer
 */
export type DomainOfferEnumOVH = typeof DomainOfferEnumOVH[keyof typeof DomainOfferEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DomainOfferEnumOVH = {
  diamond: 'diamond',
  gold: 'gold',
  platinum: 'platinum',
} as const;

/**
 * Type of the allDom
 */
export type AllDomTypeEnumOVH = typeof AllDomTypeEnumOVH[keyof typeof AllDomTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AllDomTypeEnumOVH = {
  french: 'french',
  'french+international': 'french+international',
  international: 'international',
} as const;

/**
 * Offer of the allDom
 */
export type AllDomOfferEnumOVH = typeof AllDomOfferEnumOVH[keyof typeof AllDomOfferEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AllDomOfferEnumOVH = {
  diamond: 'diamond',
  gold: 'gold',
  platinum: 'platinum',
} as const;

/**
 * Domain name of a allDom
 */
export interface AllDomDomainOVH {
  /** Domain name */
  readonly domain?: string;
}

/**
 * IAM resource metadata
 * @nullable
 */
export type AllDomAllDomWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * AllDom administration
 */
export interface AllDomAllDomWithIAMOVH {
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: AllDomAllDomWithIAMOVHIam;
  /** Name of the allDom */
  readonly name?: string;
  /** Offer of the allDom */
  readonly offer?: DomainOfferEnumOVH;
  /** Type of the allDom */
  readonly type?: AllDomTypeEnumOVH;
}

/**
 * IAM resource metadata
 * @nullable
 */
export type AllDomAllDomServiceWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * General information about a alldom service
 */
export interface AllDomAllDomServiceWithIAMOVH {
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: AllDomAllDomServiceWithIAMOVHIam;
  /** Name of the allDom */
  readonly name?: string;
  /** Offer of the allDom */
  readonly offer?: AllDomOfferEnumOVH;
  /** Type of the allDom */
  readonly type?: AllDomTypeEnumOVH;
}

/**
 * General information about a alldom service
 */
export interface AllDomAllDomServiceOVH {
  /** Name of the allDom */
  readonly name?: string;
  /** Offer of the allDom */
  readonly offer?: AllDomOfferEnumOVH;
  /** Type of the allDom */
  readonly type?: AllDomTypeEnumOVH;
}

/**
 * Domain name of a allDom
 */
export interface AllDomAllDomDomainOVH {
  /** Domain name */
  readonly domain?: string;
}

/**
 * AllDom administration
 */
export interface AllDomAllDomOVH {
  /** Name of the allDom */
  readonly name?: string;
  /** Offer of the allDom */
  readonly offer?: DomainOfferEnumOVH;
  /** Type of the allDom */
  readonly type?: AllDomTypeEnumOVH;
}

