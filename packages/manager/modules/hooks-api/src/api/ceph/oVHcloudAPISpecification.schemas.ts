/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetDedicatedCephParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Service change contact payload
 */
export interface ServicesChangeContactOVH {
  /** The contact to set as admin contact */
  contactAdmin?: string;
  /** The contact to set as billing contact */
  contactBilling?: string;
  /** The contact to set as tech contact */
  contactTech?: string;
}

/**
 * Way of handling the renew
 * @nullable
 */
export type ServicesServiceOVHRenew = ServiceRenewTypeOVH | null;

/**
 * All reasons you can provide for a service termination
 */
export type ServiceTerminationReasonEnumOVH = typeof ServiceTerminationReasonEnumOVH[keyof typeof ServiceTerminationReasonEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationReasonEnumOVH = {
  FEATURES_DONT_SUIT_ME: 'FEATURES_DONT_SUIT_ME',
  LACK_OF_PERFORMANCES: 'LACK_OF_PERFORMANCES',
  MIGRATED_TO_ANOTHER_OVH_PRODUCT: 'MIGRATED_TO_ANOTHER_OVH_PRODUCT',
  MIGRATED_TO_COMPETITOR: 'MIGRATED_TO_COMPETITOR',
  NOT_ENOUGH_RECOGNITION: 'NOT_ENOUGH_RECOGNITION',
  NOT_NEEDED_ANYMORE: 'NOT_NEEDED_ANYMORE',
  NOT_RELIABLE: 'NOT_RELIABLE',
  NO_ANSWER: 'NO_ANSWER',
  OTHER: 'OTHER',
  PRODUCT_DIMENSION_DONT_SUIT_ME: 'PRODUCT_DIMENSION_DONT_SUIT_ME',
  PRODUCT_TOOLS_DONT_SUIT_ME: 'PRODUCT_TOOLS_DONT_SUIT_ME',
  TOO_EXPENSIVE: 'TOO_EXPENSIVE',
  TOO_HARD_TO_USE: 'TOO_HARD_TO_USE',
  UNSATIFIED_BY_CUSTOMER_SUPPORT: 'UNSATIFIED_BY_CUSTOMER_SUPPORT',
} as const;

/**
 * All future uses you can provide for a service termination
 */
export type ServiceTerminationFutureUseEnumOVH = typeof ServiceTerminationFutureUseEnumOVH[keyof typeof ServiceTerminationFutureUseEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationFutureUseEnumOVH = {
  NOT_REPLACING_SERVICE: 'NOT_REPLACING_SERVICE',
  OTHER: 'OTHER',
  SUBSCRIBE_AN_OTHER_SERVICE: 'SUBSCRIBE_AN_OTHER_SERVICE',
  SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR',
  SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR',
} as const;

/**
 * Service confirm termination payload
 */
export interface ServicesConfirmTerminationOVH {
  /** Commentary about your termination request */
  commentary?: string;
  /** All future uses you can provide for a service termination */
  futureUse?: ServiceTerminationFutureUseEnumOVH;
  /** All reasons you can provide for a service termination */
  reason?: ServiceTerminationReasonEnumOVH;
  /** The termination token sent by email to the admin contact */
  token: string;
}

/**
 * service.StateEnum
 */
export type ServiceStateEnumOVH = typeof ServiceStateEnumOVH[keyof typeof ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceStateEnumOVH = {
  autorenewInProgress: 'autorenewInProgress',
  expired: 'expired',
  inCreation: 'inCreation',
  ok: 'ok',
  pendingDebt: 'pendingDebt',
  unPaid: 'unPaid',
} as const;

/**
 * Detailed renewal type of a service
 */
export type ServiceRenewalTypeEnumOVH = typeof ServiceRenewalTypeEnumOVH[keyof typeof ServiceRenewalTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewalTypeEnumOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Details about a Service
 */
export interface ServicesServiceOVH {
  /** Indicates that the service can be set up to be deleted at expiration */
  readonly canDeleteAtExpiration?: boolean;
  readonly contactAdmin?: string;
  readonly contactBilling?: string;
  readonly contactTech?: string;
  readonly creation?: string;
  readonly domain?: string;
  /** @nullable */
  readonly engagedUpTo?: string | null;
  readonly expiration?: string;
  /**
   * All the possible renew period of your service in month
   * @nullable
   */
  readonly possibleRenewPeriod?: readonly number[] | null;
  /**
   * Way of handling the renew
   * @nullable
   */
  renew?: ServicesServiceOVHRenew;
  readonly renewalType?: ServiceRenewalTypeEnumOVH;
  readonly serviceId?: number;
  readonly status?: ServiceStateEnumOVH;
}

/**
 * Map a possible renew for a specific service
 */
export interface ServiceRenewTypeOVH {
  /** The service is automatically renewed */
  automatic?: boolean;
  /** The service will be deleted at expiration */
  deleteAtExpiration?: boolean;
  /** The service forced to be renewed */
  forced?: boolean;
  /**
   * The service needs to be manually renewed and paid
   * @nullable
   */
  manualPayment?: boolean | null;
  /**
   * period of renew in month
   * @nullable
   */
  period?: number | null;
}

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * List of permissions
 */
export interface DedicatedCephUserPoolPermSetAllPermissionsOVH {
  /** Class read permission */
  classRead?: boolean;
  /** Class write permission */
  classWrite?: boolean;
  /** Execute permission */
  execute?: boolean;
  /** Name of Ceph pool */
  poolName?: string;
  /** Read permission */
  read?: boolean;
  /** Write permission */
  write?: boolean;
}

/**
 * List of permissions
 */
export interface DedicatedCephUserPoolPermListResponseOVH {
  /** Class read permission */
  readonly classRead?: boolean;
  /** Class write permission */
  readonly classWrite?: boolean;
  /** Execute permission */
  readonly execute?: boolean;
  /** Name of Ceph pool */
  readonly poolName?: string;
  /** Read permission */
  readonly read?: boolean;
  /** Write permission */
  readonly write?: boolean;
}

/**
 * Ceph user
 */
export interface DedicatedCephUserGetResponseOVH {
  /** Key of user to connect into cluster */
  readonly key?: string;
  /**
   * Capabilities of user on MDS
   * @nullable
   */
  readonly mdsCaps?: string | null;
  /** Capabilities of user on MON */
  readonly monCaps?: string;
  /** Name of ceph user */
  readonly name?: string;
  /** Capabilities of user on OSD */
  readonly osdCaps?: string;
  /** ID of cluster */
  readonly serviceName?: string;
}

/**
 * Update user-pool permission for single pool
 */
export interface DedicatedCephUserPoolUpdatePermissionOVH {
  /** Class read permission */
  classRead: boolean;
  /** Class write permission */
  classWrite: boolean;
  /** Execute permission */
  execute: boolean;
  /** Name of Ceph pool */
  poolName: string;
  /** Read permission */
  read: boolean;
  /** Write permission */
  write: boolean;
}

/**
 * Create new user-pool permissions
 */
export interface DedicatedCephUserPoolCreatePermissionsOVH {
  /** Permissions */
  permissions?: DedicatedCephUserPoolPermSetAllPermissionsOVH[];
}

/**
 * Create a new ceph user
 */
export interface DedicatedCephUserCreateOVH {
  /** Name of the new user */
  userName: string;
}

/**
 * List of active tasks
 */
export interface DedicatedCephTaskListResponseOVH {
  /** ID of task */
  readonly id?: string;
  /** Name of task */
  readonly name?: string;
}

/**
 * State of task
 */
export type DedicatedCephTaskGetResponseStateEnumOVH = typeof DedicatedCephTaskGetResponseStateEnumOVH[keyof typeof DedicatedCephTaskGetResponseStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCephTaskGetResponseStateEnumOVH = {
  DONE: 'DONE',
  FAILED: 'FAILED',
  IN_PROGRESS: 'IN PROGRESS',
} as const;

/**
 * List of task subtasks
 */
export interface DedicatedCephTaskGetResponseOVH {
  /** Creation date of the task */
  readonly createDate?: string;
  /**
   * Finish date of the task
   * @nullable
   */
  readonly finishDate?: string | null;
  /** Name of the task */
  readonly name?: string;
  /** State of the task */
  readonly state?: DedicatedCephTaskGetResponseStateEnumOVH;
  /** Type of the task */
  readonly type?: string;
}

/**
 * Type of pool
 */
export type DedicatedCephPoolGetResponsePoolTypeEnumOVH = typeof DedicatedCephPoolGetResponsePoolTypeEnumOVH[keyof typeof DedicatedCephPoolGetResponsePoolTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCephPoolGetResponsePoolTypeEnumOVH = {
  ERASURE_CODED: 'ERASURE_CODED',
  REPLICATED: 'REPLICATED',
} as const;

/**
 * Ceph pool
 */
export interface DedicatedCephPoolGetResponseOVH {
  /** Determine if pool should be backuped */
  readonly backup?: boolean;
  /** Minimum active replicas */
  readonly minActiveReplicas?: number;
  /** Name of the pool */
  readonly name?: string;
  /** Type of pool */
  readonly poolType?: DedicatedCephPoolGetResponsePoolTypeEnumOVH;
  /** Number of replica */
  readonly replicaCount?: number;
  /** ID of cluster */
  readonly serviceName?: string;
}

/**
 * Create a new ceph erasure pool
 */
export interface DedicatedCephPoolErasureCreateOVH {
  /** Name of the new pool erasure */
  poolName: string;
}

/**
 * Create a new ceph pool
 */
export interface DedicatedCephPoolCreateOVH {
  /** Name of the new pool */
  poolName: string;
}

/**
 * Tunables of cluster
 */
export type DedicatedCephClusterUpdateCrushTunablesEnumOVH = typeof DedicatedCephClusterUpdateCrushTunablesEnumOVH[keyof typeof DedicatedCephClusterUpdateCrushTunablesEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCephClusterUpdateCrushTunablesEnumOVH = {
  ARGONAUT: 'ARGONAUT',
  BOBTAIL: 'BOBTAIL',
  DEFAULT: 'DEFAULT',
  FIREFLY: 'FIREFLY',
  HAMMER: 'HAMMER',
  JEWEL: 'JEWEL',
  LEGACY: 'LEGACY',
  OPTIMAL: 'OPTIMAL',
} as const;

/**
 * Health of ceph cluster
 */
export interface DedicatedCephClusterHealthResponseOVH {
  /** All available space in bytes */
  readonly availableBytes?: number;
  /** True or False */
  readonly healthy?: boolean;
  /** ID of cluster */
  readonly serviceName?: string;
  /** Status of ceph cluster */
  readonly status?: string;
  /** Total cluster space in bytes */
  readonly totalBytes?: number;
  /** Used cluster space in bytes */
  readonly usedBytes?: number;
}

/**
 * IAM resource metadata
 * @nullable
 */
export type DedicatedCephClusterGetResponseWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * Status of cluster
 */
export type DedicatedCephClusterGetResponseStatusEnumOVH = typeof DedicatedCephClusterGetResponseStatusEnumOVH[keyof typeof DedicatedCephClusterGetResponseStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCephClusterGetResponseStatusEnumOVH = {
  CREATING: 'CREATING',
  DELETED: 'DELETED',
  DELETING: 'DELETING',
  INSTALLED: 'INSTALLED',
  TASK_IN_PROGRESS: 'TASK_IN_PROGRESS',
} as const;

/**
 * State of cluster
 */
export type DedicatedCephClusterGetResponseStateEnumOVH = typeof DedicatedCephClusterGetResponseStateEnumOVH[keyof typeof DedicatedCephClusterGetResponseStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCephClusterGetResponseStateEnumOVH = {
  ACTIVE: 'ACTIVE',
  SUSPENDED: 'SUSPENDED',
} as const;

/**
 * Tunables of cluster
 */
export type DedicatedCephClusterGetResponseCrushTunablesEnumOVH = typeof DedicatedCephClusterGetResponseCrushTunablesEnumOVH[keyof typeof DedicatedCephClusterGetResponseCrushTunablesEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCephClusterGetResponseCrushTunablesEnumOVH = {
  ARGONAUT: 'ARGONAUT',
  BOBTAIL: 'BOBTAIL',
  DEFAULT: 'DEFAULT',
  FIREFLY: 'FIREFLY',
  HAMMER: 'HAMMER',
  JEWEL: 'JEWEL',
  LEGACY: 'LEGACY',
  OPTIMAL: 'OPTIMAL',
} as const;

/**
 * Details about ceph cluster
 */
export interface DedicatedCephClusterGetResponseWithIAMOVH {
  /** List of CEPH monitor IPs */
  readonly cephMons?: readonly string[];
  /** Used version of ceph */
  readonly cephVersion?: string;
  /** Creation date */
  readonly createDate?: string;
  /** Tunables of cluster */
  readonly crushTunables?: DedicatedCephClusterGetResponseCrushTunablesEnumOVH;
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: DedicatedCephClusterGetResponseWithIAMOVHIam;
  /** Name of cluster */
  readonly label?: string;
  /** Name of region where cluster is located */
  readonly region?: string;
  /** ID of cluster */
  readonly serviceName?: string;
  /** Size of cluster in TB */
  readonly size?: number;
  /** State of cluster */
  readonly state?: DedicatedCephClusterGetResponseStateEnumOVH;
  /** Status of cluster */
  readonly status?: DedicatedCephClusterGetResponseStatusEnumOVH;
  /** Last update date */
  readonly updateDate?: string;
}

/**
 * Details about ceph cluster
 */
export interface DedicatedCephClusterGetResponseOVH {
  /** List of CEPH monitor IPs */
  readonly cephMons?: readonly string[];
  /** Used version of ceph */
  readonly cephVersion?: string;
  /** Creation date */
  readonly createDate?: string;
  /** Tunables of cluster */
  readonly crushTunables?: DedicatedCephClusterGetResponseCrushTunablesEnumOVH;
  /** Name of cluster */
  readonly label?: string;
  /** Name of region where cluster is located */
  readonly region?: string;
  /** ID of cluster */
  readonly serviceName?: string;
  /** Size of cluster in TB */
  readonly size?: number;
  /** State of cluster */
  readonly state?: DedicatedCephClusterGetResponseStateEnumOVH;
  /** Status of cluster */
  readonly status?: DedicatedCephClusterGetResponseStatusEnumOVH;
  /** Last update date */
  readonly updateDate?: string;
}

/**
 * CephFS filesystem data
 */
export interface DedicatedCephCephfsGetResponseOVH {
  /** Filesystem state */
  readonly enabled?: boolean;
  /** Filesystem name */
  readonly fsName?: string;
}

/**
 * Family of IP ACL
 */
export type DedicatedCephAclGetResponseFamilyEnumOVH = typeof DedicatedCephAclGetResponseFamilyEnumOVH[keyof typeof DedicatedCephAclGetResponseFamilyEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCephAclGetResponseFamilyEnumOVH = {
  IPV4: 'IPV4',
  IPV6: 'IPV6',
} as const;

/**
 * IP ACL
 */
export interface DedicatedCephAclGetResponseOVH {
  /** Family of IP ACL */
  readonly family?: DedicatedCephAclGetResponseFamilyEnumOVH;
  /** ID of IP ACL */
  readonly id?: number;
  /** IP address (e.g., 192.0.2.0) */
  readonly netmask?: IpOVH;
  /** IP address (e.g., 192.0.2.0) */
  readonly network?: IpOVH;
}

/**
 * Create one or more new IP ACLs
 */
export interface DedicatedCephAclCreateOVH {
  /** List of new ACLs */
  aclList: string[];
}

/**
 * Update cluster details
 */
export interface DedicatedCephUpdateClusterDetailsOVH {
  /** Tunables of cluster */
  crushTunables: DedicatedCephClusterUpdateCrushTunablesEnumOVH;
  /** Name of the cluster */
  label: string;
}

