/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type PostSslGatewayServiceNameServerBody = {
  /** IPv4 address of your server */
  address: IpOVH;
  /** Port of your server */
  port: number;
};

export type PostSslGatewayServiceNameRenewCertificateBody = {
  /** Domain on which you want to renew certificate */
  domain?: string;
};

export type PostSslGatewayServiceNameDomainBody = {
  /** Domain to attach */
  domain: string;
};

export type PostSslGatewayServiceNameConfirmTerminationBody = {
  /** Commentary about your termination request */
  commentary?: string;
  /** What next after your termination request */
  futureUse?: ServiceTerminationFutureUseEnumOVH;
  /** Reason of your termination request */
  reason?: ServiceTerminationReasonEnumOVH;
  /** The termination token sent by email to the admin contact */
  token: string;
};

export type PostSslGatewayServiceNameChangeContactBody = {
  /** The contact to set as admin contact */
  contactAdmin?: string;
  /** The contact to set as billing contact */
  contactBilling?: string;
  /** The contact to set as tech contact */
  contactTech?: string;
};

export type GetSslGatewayEligibilityParams = {
/**
 * domain to check eligibility for SSL Gateway offer
 */
domain: string;
};

export type GetSslGatewayParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Possible task status
 */
export type SslGatewayTaskStatusEnumOVH = typeof SslGatewayTaskStatusEnumOVH[keyof typeof SslGatewayTaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SslGatewayTaskStatusEnumOVH = {
  blocked: 'blocked',
  cancelled: 'cancelled',
  doing: 'doing',
  done: 'done',
  error: 'error',
  paused: 'paused',
  todo: 'todo',
} as const;

/**
 * Possible task action
 */
export type SslGatewayTaskActionEnumOVH = typeof SslGatewayTaskActionEnumOVH[keyof typeof SslGatewayTaskActionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SslGatewayTaskActionEnumOVH = {
  addDomain: 'addDomain',
  addPaidCertificate: 'addPaidCertificate',
  addServer: 'addServer',
  createService: 'createService',
  deleteDomain: 'deleteDomain',
  deleteServer: 'deleteServer',
  deleteService: 'deleteService',
  internalTask: 'internalTask',
  updateServer: 'updateServer',
  updateService: 'updateService',
  upgrade: 'upgrade',
} as const;

/**
 * SSL Gateway tasks
 */
export interface SslGatewayTaskOVH {
  /** The action made */
  readonly action?: SslGatewayTaskActionEnumOVH;
  /** Creation date of your task */
  readonly creationDate?: string;
  /** Id of the task */
  readonly id?: number;
  /** Task progress percentage */
  readonly progress?: number;
  /** Current status of your task */
  readonly status?: SslGatewayTaskStatusEnumOVH;
}

/**
 * Possible values for SSL Gateway state
 */
export type SslGatewayStateEnumOVH = typeof SslGatewayStateEnumOVH[keyof typeof SslGatewayStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SslGatewayStateEnumOVH = {
  creating: 'creating',
  deleted: 'deleted',
  deleting: 'deleting',
  'http-only': 'http-only',
  internal: 'internal',
  ok: 'ok',
  suspended: 'suspended',
  upgrading: 'upgrading',
} as const;

/**
 * Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null.
 * @nullable
 */
export type SslGatewaySslGatewayWithIAMOVHSslConfiguration = SslGatewaySslConfigurationEnumOVH | null;

/**
 * The IPv6 you need to put in the AAAA field of your domain name
 * @nullable
 */
export type SslGatewaySslGatewayWithIAMOVHIpv6 = Ipv6OVH | null;

/**
 * IAM resource metadata
 * @nullable
 */
export type SslGatewaySslGatewayWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * The IPv6 you need to put in the AAAA field of your domain name
 * @nullable
 */
export type SslGatewaySslGatewayOVHIpv6 = Ipv6OVH | null;

/**
 * Possible values for ssl ciphers
 */
export type SslGatewaySslConfigurationEnumOVH = typeof SslGatewaySslConfigurationEnumOVH[keyof typeof SslGatewaySslConfigurationEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SslGatewaySslConfigurationEnumOVH = {
  intermediate: 'intermediate',
  internal: 'internal',
  modern: 'modern',
} as const;

/**
 * Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null.
 * @nullable
 */
export type SslGatewaySslGatewayOVHSslConfiguration = SslGatewaySslConfigurationEnumOVH | null;

/**
 * Your SSL Gateway
 */
export interface SslGatewaySslGatewayOVH {
  /**
   * Restrict SSL Gateway access to these ip block. No restriction if null
   * @nullable
   */
  allowedSource?: IpBlockOVH[] | null;
  /**
   * Custom name of your SSL Gateway
   * @nullable
   */
  displayName?: string | null;
  /** Set to true to enable Strict-Transport-Security HTTP header */
  hsts?: boolean;
  /** Set to true to enable https redirect */
  httpsRedirect?: boolean;
  /** The IPv4 you need to put in the A field of your domain name */
  readonly ipv4?: Ipv4OVH;
  /**
   * The IPv6 you need to put in the AAAA field of your domain name
   * @nullable
   */
  readonly ipv6?: SslGatewaySslGatewayOVHIpv6;
  /**
   * The metrics token associated with your SSL Gateway
   * @nullable
   */
  readonly metricsToken?: string | null;
  /** Current offer for your SSL Gateway */
  readonly offer?: SslGatewayOfferEnumOVH;
  /**
   * Custom reverse for your SSL Gateway
   * @nullable
   */
  reverse?: string | null;
  /** Set to true to contact backend servers over HTTPS */
  serverHttps?: boolean;
  /** The internal name of your SSL Gateway */
  readonly serviceName?: string;
  /**
   * Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null.
   * @nullable
   */
  sslConfiguration?: SslGatewaySslGatewayOVHSslConfiguration;
  /** Current state of your SSL Gateway */
  readonly state?: SslGatewayStateEnumOVH;
  /** Zones of your SSL Gateway */
  readonly zones?: readonly string[];
}

/**
 * Possible values for SSL Gateway server state
 */
export type SslGatewayServerStateEnumOVH = typeof SslGatewayServerStateEnumOVH[keyof typeof SslGatewayServerStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SslGatewayServerStateEnumOVH = {
  creating: 'creating',
  deleted: 'deleted',
  deleting: 'deleting',
  internal: 'internal',
  ok: 'ok',
  updating: 'updating',
} as const;

/**
 * Server attached to an SSL Gateway
 */
export interface SslGatewayServerOVH {
  /** IP address of the server attached to your SSL Gateway */
  address?: IpOVH;
  /** Id of your server */
  readonly id?: number;
  /** Port of your server attached to your SSL Gateway */
  port?: number;
  /** Server state */
  readonly state?: SslGatewayServerStateEnumOVH;
}

/**
 * List of SSL Gateway offers
 */
export type SslGatewayOfferEnumOVH = typeof SslGatewayOfferEnumOVH[keyof typeof SslGatewayOfferEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SslGatewayOfferEnumOVH = {
  advanced: 'advanced',
  enterprise: 'enterprise',
  free: 'free',
  internal: 'internal',
} as const;

/**
 * Your SSL Gateway
 */
export interface SslGatewaySslGatewayWithIAMOVH {
  /**
   * Restrict SSL Gateway access to these ip block. No restriction if null
   * @nullable
   */
  allowedSource?: IpBlockOVH[] | null;
  /**
   * Custom name of your SSL Gateway
   * @nullable
   */
  displayName?: string | null;
  /** Set to true to enable Strict-Transport-Security HTTP header */
  hsts?: boolean;
  /** Set to true to enable https redirect */
  httpsRedirect?: boolean;
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: SslGatewaySslGatewayWithIAMOVHIam;
  /** The IPv4 you need to put in the A field of your domain name */
  readonly ipv4?: Ipv4OVH;
  /**
   * The IPv6 you need to put in the AAAA field of your domain name
   * @nullable
   */
  readonly ipv6?: SslGatewaySslGatewayWithIAMOVHIpv6;
  /**
   * The metrics token associated with your SSL Gateway
   * @nullable
   */
  readonly metricsToken?: string | null;
  /** Current offer for your SSL Gateway */
  readonly offer?: SslGatewayOfferEnumOVH;
  /**
   * Custom reverse for your SSL Gateway
   * @nullable
   */
  reverse?: string | null;
  /** Set to true to contact backend servers over HTTPS */
  serverHttps?: boolean;
  /** The internal name of your SSL Gateway */
  readonly serviceName?: string;
  /**
   * Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null.
   * @nullable
   */
  sslConfiguration?: SslGatewaySslGatewayWithIAMOVHSslConfiguration;
  /** Current state of your SSL Gateway */
  readonly state?: SslGatewayStateEnumOVH;
  /** Zones of your SSL Gateway */
  readonly zones?: readonly string[];
}

/**
 * a list of {zone, nat Ip}
 */
export interface SslGatewayNatIpsOVH {
  ip?: IpBlockOVH[];
  zone?: string;
}

/**
 * A structure describing the eligibility status of a domain
 */
export interface SslGatewayEligibilityStatusOVH {
  /** Customer domain name */
  domain?: string;
  /** Eligible IP(s) v6 for this domain */
  ip6s?: Ipv6OVH[];
  /** Eligible IP(s) for this domain */
  ips?: Ipv4OVH[];
  /** Whether this domain is hosted by Ovh or not */
  isHostedByOvh?: boolean;
}

/**
 * Possible values for SSL Gateway domain state
 */
export type SslGatewayDomainStateEnumOVH = typeof SslGatewayDomainStateEnumOVH[keyof typeof SslGatewayDomainStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SslGatewayDomainStateEnumOVH = {
  creating: 'creating',
  deleted: 'deleted',
  deleting: 'deleting',
  'http-only': 'http-only',
  internal: 'internal',
  ok: 'ok',
} as const;

/**
 * Domain attached to an SSL Gateway
 */
export interface SslGatewayDomainOVH {
  /** Domain name attached to your SSL Gateway */
  readonly domain?: string;
  /** Id of your domain */
  readonly id?: number;
  /** Domain state */
  readonly state?: SslGatewayDomainStateEnumOVH;
}

/**
 * Way of handling the renew
 * @nullable
 */
export type ServicesServiceOVHRenew = ServiceRenewTypeOVH | null;

/**
 * Details about a Service
 */
export interface ServicesServiceOVH {
  /** Indicates that the service can be set up to be deleted at expiration */
  readonly canDeleteAtExpiration?: boolean;
  readonly contactAdmin?: string;
  readonly contactBilling?: string;
  readonly contactTech?: string;
  readonly creation?: string;
  readonly domain?: string;
  /** @nullable */
  readonly engagedUpTo?: string | null;
  readonly expiration?: string;
  /**
   * All the possible renew period of your service in month
   * @nullable
   */
  readonly possibleRenewPeriod?: readonly number[] | null;
  /**
   * Way of handling the renew
   * @nullable
   */
  renew?: ServicesServiceOVHRenew;
  readonly renewalType?: ServiceRenewalTypeEnumOVH;
  readonly serviceId?: number;
  readonly status?: ServiceStateEnumOVH;
}

/**
 * All reasons you can provide for a service termination
 */
export type ServiceTerminationReasonEnumOVH = typeof ServiceTerminationReasonEnumOVH[keyof typeof ServiceTerminationReasonEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationReasonEnumOVH = {
  FEATURES_DONT_SUIT_ME: 'FEATURES_DONT_SUIT_ME',
  LACK_OF_PERFORMANCES: 'LACK_OF_PERFORMANCES',
  MIGRATED_TO_ANOTHER_OVH_PRODUCT: 'MIGRATED_TO_ANOTHER_OVH_PRODUCT',
  MIGRATED_TO_COMPETITOR: 'MIGRATED_TO_COMPETITOR',
  NOT_ENOUGH_RECOGNITION: 'NOT_ENOUGH_RECOGNITION',
  NOT_NEEDED_ANYMORE: 'NOT_NEEDED_ANYMORE',
  NOT_RELIABLE: 'NOT_RELIABLE',
  NO_ANSWER: 'NO_ANSWER',
  OTHER: 'OTHER',
  PRODUCT_DIMENSION_DONT_SUIT_ME: 'PRODUCT_DIMENSION_DONT_SUIT_ME',
  PRODUCT_TOOLS_DONT_SUIT_ME: 'PRODUCT_TOOLS_DONT_SUIT_ME',
  TOO_EXPENSIVE: 'TOO_EXPENSIVE',
  TOO_HARD_TO_USE: 'TOO_HARD_TO_USE',
  UNSATIFIED_BY_CUSTOMER_SUPPORT: 'UNSATIFIED_BY_CUSTOMER_SUPPORT',
} as const;

/**
 * All future uses you can provide for a service termination
 */
export type ServiceTerminationFutureUseEnumOVH = typeof ServiceTerminationFutureUseEnumOVH[keyof typeof ServiceTerminationFutureUseEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationFutureUseEnumOVH = {
  NOT_REPLACING_SERVICE: 'NOT_REPLACING_SERVICE',
  OTHER: 'OTHER',
  SUBSCRIBE_AN_OTHER_SERVICE: 'SUBSCRIBE_AN_OTHER_SERVICE',
  SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR',
  SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR',
} as const;

export type ServiceStateEnumOVH = typeof ServiceStateEnumOVH[keyof typeof ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceStateEnumOVH = {
  autorenewInProgress: 'autorenewInProgress',
  expired: 'expired',
  inCreation: 'inCreation',
  ok: 'ok',
  pendingDebt: 'pendingDebt',
  unPaid: 'unPaid',
} as const;

/**
 * Detailed renewal type of a service
 */
export type ServiceRenewalTypeEnumOVH = typeof ServiceRenewalTypeEnumOVH[keyof typeof ServiceRenewalTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewalTypeEnumOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  automaticV2024: 'automaticV2024',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Map a possible renew for a specific service
 */
export interface ServiceRenewTypeOVH {
  /** The service is automatically renewed */
  automatic?: boolean;
  /** The service will be deleted at expiration */
  deleteAtExpiration?: boolean;
  /** The service forced to be renewed */
  forced?: boolean;
  /**
   * The service needs to be manually renewed and paid
   * @nullable
   */
  manualPayment?: boolean | null;
  /**
   * period of renew in month
   * @nullable
   */
  period?: number | null;
}

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

