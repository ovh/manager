/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetLicenseRedhatServiceNameTasksParams = {
/**
 * Filter the value of action property (=)
 */
action?: LicenseActionTypeOVH;
/**
 * Filter the value of status property (=)
 */
status?: LicenseTaskStateEnumOVH;
};

export type GetLicenseRedhatParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Way of handling the renew
 * @nullable
 */
export type ServicesServiceOVHRenew = ServiceRenewTypeOVH | null;

/**
 * All reasons you can provide for a service termination
 */
export type ServiceTerminationReasonEnumOVH = typeof ServiceTerminationReasonEnumOVH[keyof typeof ServiceTerminationReasonEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationReasonEnumOVH = {
  FEATURES_DONT_SUIT_ME: 'FEATURES_DONT_SUIT_ME',
  LACK_OF_PERFORMANCES: 'LACK_OF_PERFORMANCES',
  MIGRATED_TO_ANOTHER_OVH_PRODUCT: 'MIGRATED_TO_ANOTHER_OVH_PRODUCT',
  MIGRATED_TO_COMPETITOR: 'MIGRATED_TO_COMPETITOR',
  NOT_ENOUGH_RECOGNITION: 'NOT_ENOUGH_RECOGNITION',
  NOT_NEEDED_ANYMORE: 'NOT_NEEDED_ANYMORE',
  NOT_RELIABLE: 'NOT_RELIABLE',
  NO_ANSWER: 'NO_ANSWER',
  OTHER: 'OTHER',
  PRODUCT_DIMENSION_DONT_SUIT_ME: 'PRODUCT_DIMENSION_DONT_SUIT_ME',
  PRODUCT_TOOLS_DONT_SUIT_ME: 'PRODUCT_TOOLS_DONT_SUIT_ME',
  TOO_EXPENSIVE: 'TOO_EXPENSIVE',
  TOO_HARD_TO_USE: 'TOO_HARD_TO_USE',
  UNSATIFIED_BY_CUSTOMER_SUPPORT: 'UNSATIFIED_BY_CUSTOMER_SUPPORT',
} as const;

/**
 * All future uses you can provide for a service termination
 */
export type ServiceTerminationFutureUseEnumOVH = typeof ServiceTerminationFutureUseEnumOVH[keyof typeof ServiceTerminationFutureUseEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationFutureUseEnumOVH = {
  NOT_REPLACING_SERVICE: 'NOT_REPLACING_SERVICE',
  OTHER: 'OTHER',
  SUBSCRIBE_AN_OTHER_SERVICE: 'SUBSCRIBE_AN_OTHER_SERVICE',
  SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR',
  SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR',
} as const;

export type PostLicenseRedhatServiceNameConfirmTerminationBody = {
  /** Commentary about your termination request */
  commentary?: string;
  /** What next after your termination request */
  futureUse?: ServiceTerminationFutureUseEnumOVH;
  /** Reason of your termination request */
  reason?: ServiceTerminationReasonEnumOVH;
  /** The termination token sent by email to the admin contact */
  token: string;
};

export type ServiceStateEnumOVH = typeof ServiceStateEnumOVH[keyof typeof ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceStateEnumOVH = {
  autorenewInProgress: 'autorenewInProgress',
  expired: 'expired',
  inCreation: 'inCreation',
  ok: 'ok',
  pendingDebt: 'pendingDebt',
  unPaid: 'unPaid',
} as const;

/**
 * Detailed renewal type of a service
 */
export type ServiceRenewalTypeEnumOVH = typeof ServiceRenewalTypeEnumOVH[keyof typeof ServiceRenewalTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewalTypeEnumOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  automaticV2024: 'automaticV2024',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Details about a Service
 */
export interface ServicesServiceOVH {
  /** Indicates that the service can be set up to be deleted at expiration */
  readonly canDeleteAtExpiration?: boolean;
  readonly contactAdmin?: string;
  readonly contactBilling?: string;
  readonly contactTech?: string;
  readonly creation?: string;
  readonly domain?: string;
  /** @nullable */
  readonly engagedUpTo?: string | null;
  readonly expiration?: string;
  /**
   * All the possible renew period of your service in month
   * @nullable
   */
  readonly possibleRenewPeriod?: readonly number[] | null;
  /**
   * Way of handling the renew
   * @nullable
   */
  renew?: ServicesServiceOVHRenew;
  readonly renewalType?: ServiceRenewalTypeEnumOVH;
  readonly serviceId?: number;
  readonly status?: ServiceStateEnumOVH;
}

/**
 * Map a possible renew for a specific service
 */
export interface ServiceRenewTypeOVH {
  /** The service is automatically renewed */
  automatic?: boolean;
  /** The service will be deleted at expiration */
  deleteAtExpiration?: boolean;
  /** The service forced to be renewed */
  forced?: boolean;
  /**
   * The service needs to be manually renewed and paid
   * @nullable
   */
  manualPayment?: boolean | null;
  /**
   * period of renew in month
   * @nullable
   */
  period?: number | null;
}

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IAM resource metadata
 * @nullable
 */
export type LicenseRedhatRedHatWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * All states a license Task can be in
 */
export type LicenseTaskStateEnumOVH = typeof LicenseTaskStateEnumOVH[keyof typeof LicenseTaskStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LicenseTaskStateEnumOVH = {
  cancelled: 'cancelled',
  doing: 'doing',
  done: 'done',
  error: 'error',
  todo: 'todo',
} as const;

/**
 * All states a license can be in
 */
export type LicenseStateEnumOVH = typeof LicenseStateEnumOVH[keyof typeof LicenseStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LicenseStateEnumOVH = {
  ok: 'ok',
  released: 'released',
  terminated: 'terminated',
  toDeliver: 'toDeliver',
} as const;

/**
 * All versions for RedHat products
 */
export type LicenseRedHatVersionEnumOVH = typeof LicenseRedHatVersionEnumOVH[keyof typeof LicenseRedHatVersionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LicenseRedHatVersionEnumOVH = {
  'redhat-enterprise-datacenter': 'redhat-enterprise-datacenter',
  'redhat-enterprise-standard': 'redhat-enterprise-standard',
} as const;

/**
 * Your RedHat license
 */
export interface LicenseRedhatRedHatWithIAMOVH {
  /** This license creation date */
  readonly creation?: string;
  /** Shall we delete this on expiration ? */
  deleteAtExpiration?: boolean;
  /** The internal name of your license */
  readonly domain?: string;
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: LicenseRedhatRedHatWithIAMOVHIam;
  /** The ip on which this license is attached */
  readonly ip?: Ipv4OVH;
  /** The license id on license provider side */
  readonly licenseId?: string;
  /** This license state */
  readonly status?: LicenseStateEnumOVH;
  /** This license version */
  readonly version?: LicenseRedHatVersionEnumOVH;
}

/**
 * Your RedHat license
 */
export interface LicenseRedhatRedHatOVH {
  /** This license creation date */
  readonly creation?: string;
  /** Shall we delete this on expiration ? */
  deleteAtExpiration?: boolean;
  /** The internal name of your license */
  readonly domain?: string;
  /** The ip on which this license is attached */
  readonly ip?: Ipv4OVH;
  /** The license id on license provider side */
  readonly licenseId?: string;
  /** This license state */
  readonly status?: LicenseStateEnumOVH;
  /** This license version */
  readonly version?: LicenseRedHatVersionEnumOVH;
}

/**
 * A short description of what does the Task on your license
 */
export type LicenseActionTypeOVH = typeof LicenseActionTypeOVH[keyof typeof LicenseActionTypeOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LicenseActionTypeOVH = {
  addWindowFromExistingSerial: 'addWindowFromExistingSerial',
  changeIp: 'changeIp',
  changeOs: 'changeOs',
  installLicense: 'installLicense',
  optionUpgrade: 'optionUpgrade',
  releaseOption: 'releaseOption',
  versionUpgrade: 'versionUpgrade',
} as const;

/**
 * licenses Todos
 */
export interface LicenseTaskOVH {
  /** This Task description */
  readonly action?: LicenseActionTypeOVH;
  /**
   * When was this Task done
   * @nullable
   */
  readonly doneDate?: string | null;
  /** The last time this Task was updated */
  readonly lastUpdate?: string;
  /** This Task name */
  readonly name?: string;
  /** Current Taks status */
  readonly status?: LicenseTaskStateEnumOVH;
  /** This Task id */
  readonly taskId?: number;
  /** When was this Task created */
  readonly todoDate?: string;
}

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

