/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetDedicatedServerServiceNameVirtualNetworkInterfaceParams = {
/**
 * Filter the value of enabled property (=)
 */
enabled?: boolean;
/**
 * Filter the value of mode property (=)
 */
mode?: DedicatedVirtualNetworkInterfaceVirtualNetworkInterfaceModeEnumOVH;
/**
 * Filter the value of name property (=)
 */
name?: string;
/**
 * Filter the value of vrack property (=)
 */
vrack?: string;
};

export type PostDedicatedServerServiceNameVirtualMacMacAddressVirtualAddressBody = {
  /** IP address to link to this virtual MAC */
  ipAddress: Ipv4OVH;
  /** Friendly name of your Virtual Machine behind this IP/MAC */
  virtualMachineName: string;
};

export type PostDedicatedServerServiceNameVirtualMacBody = {
  /** Ip address to link with this virtualMac */
  ipAddress: Ipv4OVH;
  /** vmac address type */
  type: DedicatedServerVmacTypeEnumOVH;
  /** Friendly name of your Virtual Machine behind this IP/MAC */
  virtualMachineName: string;
};

export type GetDedicatedServerServiceNameUpgradeAvailableTimeslotsParams = {
/**
 * End of the period to query
 */
periodEnd: string;
/**
 * Begining of the period to query
 */
periodStart: string;
};

export type GetDedicatedServerServiceNameUpdatesAllowedParams = {
/**
 * Desired option family
 */
family: DedicatedServerAddonFamilyEnumOVH;
};

export type PostDedicatedServerServiceNameTaskTaskIdScheduleBody = {
  /** Whether or not you have made a backup of your data */
  hasPerformedBackup: boolean;
  /** Wanted begining date for your intervention */
  wantedBeginingDate: string;
};

export type GetDedicatedServerServiceNameTaskTaskIdAvailableTimeslotsParams = {
/**
 * End of the period to query
 */
periodEnd: string;
/**
 * Begining of the period to query
 */
periodStart: string;
};

export type GetDedicatedServerServiceNameTaskParams = {
/**
 * Filter the value of function property (=)
 */
function?: DedicatedTaskFunctionEnumOVH;
/**
 * Filter the value of status property (=)
 */
status?: DedicatedTaskStatusEnumOVH;
};

export type PostDedicatedServerServiceNameSupportReplaceMemoryBody = {
  /** User comment */
  comment: string;
  /** Technical details or logs */
  details: string;
  /** The list of faulty RAM slots (if you have the information) */
  slots?: string[];
};

export type PostDedicatedServerServiceNameSupportReplaceHardDiskDriveBody = {
  /** User comment */
  comment: string;
  /** If 'inverse' is set as 'false', the list of HDD TO REPLACE. If 'inverse' is set as 'true', the list of HDD TO NOT REPLACE. */
  disks: DedicatedServerSupportReplaceHddInfoOVH[];
  /** If set to 'true', replace only NON LISTED DISKS */
  inverse: boolean;
};

export type PostDedicatedServerServiceNameSupportReplaceCoolingBody = {
  /** User comment */
  comment: string;
  /** Technical details or logs */
  details: string;
};

export type PostDedicatedServerServiceNameSplaBody = {
  /** License serial number */
  serialNumber: string;
  /** License type */
  type: DedicatedServerSplaTypeEnumOVH;
};

export type GetDedicatedServerServiceNameSplaParams = {
/**
 * Filter the value of status property (=)
 */
status?: DedicatedServerSplaStatusEnumOVH;
/**
 * Filter the value of type property (=)
 */
type?: DedicatedServerSplaTypeEnumOVH;
};

export type GetDedicatedServerServiceNameSecondaryDnsNameDomainTokenParams = {
/**
 * The domain to check
 */
domain: string;
};

export type PostDedicatedServerServiceNameSecondaryDnsDomainsBody = {
  /** The domain to add */
  domain: string;
  ip?: Ipv4OVH;
};

/**
 * Common error model
 */
export type PostDedicatedServerServiceNameReinstall501 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PostDedicatedServerServiceNameReinstall500 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PostDedicatedServerServiceNameReinstall409 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PostDedicatedServerServiceNameReinstall404 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PostDedicatedServerServiceNameReinstall403 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

/**
 * Common error model
 */
export type PostDedicatedServerServiceNameReinstall400 = {
  /** Class of the error */
  class?: string;
  /** Error message */
  message?: string;
};

export type GetDedicatedServerServiceNameOrderableFeatureParams = {
/**
 * the feature
 */
feature: DedicatedServerOrderableSysFeatureEnumOVH;
};

export type GetDedicatedServerServiceNameOperationParams = {
/**
 * Filter the value of function property (=)
 */
function?: DedicatedOperationFunctionEnumOVH;
/**
 * Filter the value of status property (=)
 */
status?: DedicatedTaskStatusEnumOVH;
};

export type PostDedicatedServerServiceNameOlaResetBody = {
  /** Interface to reset */
  virtualNetworkInterface: string;
};

export type PostDedicatedServerServiceNameOlaAggregationBody = {
  /** Resulting VirtualNetworkInterface name */
  name: string;
  /** Interfaces to aggregate */
  virtualNetworkInterfaces: string[];
};

export type PostDedicatedServerServiceNameNetworkingBody = {
  /** Interface or interfaces aggregation */
  interfaces: DedicatedServerInterfacesOVH[];
};

export type GetDedicatedServerServiceNameNetworkInterfaceControllerMacMrtgParams = {
/**
 * mrtg period
 */
period: DedicatedServerMrtgPeriodEnumOVH;
/**
 * mrtg type
 */
type: DedicatedServerMrtgTypeEnumOVH;
};

export type GetDedicatedServerServiceNameNetworkInterfaceControllerParams = {
/**
 * Filter the value of linkType property (=)
 */
linkType?: DedicatedNetworkInterfaceControllerNetworkInterfaceControllerLinkTypeEnumOVH;
};

export type PostDedicatedServerServiceNameLicenseWindowsBody = {
  /** Your license serial number */
  licenseId: string;
  /** Your license version */
  version: LicenseWindowsOsVersionEnumOVH;
};

export type PostDedicatedServerServiceNameIpMoveBody = {
  /** The ip to move to this server */
  ip: IpBlockOVH;
};

export type GetDedicatedServerServiceNameIpCanBeMovedToParams = {
/**
 * The ip to move to this server
 */
ip: IpBlockOVH;
};

export type PostDedicatedServerServiceNameIpBlockMergeBody = {
  /** The splitted block you want to merge */
  block: IpBlockOVH;
};

export type PostDedicatedServerServiceNameInstallStartBody = {
  /** parameters for default install */
  details?: DedicatedServerInstallCustomOVH;
  /** Partition scheme name */
  partitionSchemeName?: string;
  /** Template name */
  templateName: string;
  /** Metadata */
  userMetadata?: ComplexTypeSafeKeyValueStringOVH[];
};

export type GetDedicatedServerServiceNameInstallHardwareRaidSizeParams = {
/**
 * Partition scheme name
 */
partitionSchemeName: string;
/**
 * Template name
 */
templateName: string;
};

export type GetDedicatedServerServiceNameInstallCompatibleTemplatePartitionSchemesParams = {
templateName: string;
};

export type PostDedicatedServerServiceNameFeaturesIpmiTestBody = {
  /** Result time to live in minutes */
  ttl: DedicatedServerCacheTTLEnumOVH;
  /** Test to make on KVM IPMI interface */
  type: DedicatedServerIpmiTestTypeEnumOVH;
};

export type GetDedicatedServerServiceNameFeaturesIpmiTestParams = {
/**
 * Test type result on KVM IPMI interface
 */
type: DedicatedServerIpmiTestTypeEnumOVH;
};

export type PostDedicatedServerServiceNameFeaturesIpmiAccessBody = {
  /** IP to allow connection from for this IPMI session */
  ipToAllow?: Ipv4OVH;
  /** Public SSH key for Serial Over Lan SSH access | ‚ö†Ô∏è Starting 2024-08-27, SSH key name will no longer be accepted and only raw public SSH key will remain accepted */
  sshKey?: string;
  /** Session access time to live in minutes */
  ttl: DedicatedServerCacheTTLEnumOVH;
  /** IPMI console access */
  type: DedicatedServerIpmiAccessTypeEnumOVH;
};

export type GetDedicatedServerServiceNameFeaturesIpmiAccessParams = {
/**
 * IPMI console access
 */
type: DedicatedServerIpmiAccessTypeEnumOVH;
};

export type PostDedicatedServerServiceNameFeaturesBmcWebSolBody = {
  /** IP to allow connection from for this Web SOL session, default value is caller IP */
  ipToAllow?: Ipv4OVH;
  /** Time to live in minutes to get session credentials, default is 5 minutes */
  ttl?: DedicatedServerCacheTTLEnumOVH;
};

export type GetDedicatedServerServiceNameFeaturesBmcWebSolParams = {
/**
 * The ID of the request access operation
 */
operationId: string;
};

export type PostDedicatedServerServiceNameFeaturesBmcWebKvmBody = {
  /** IP to allow connection from for this KVM session, default value is caller IP */
  ipToAllow?: Ipv4OVH;
  /** Time to live in minutes to get session credentials, default is 5 minutes */
  ttl?: DedicatedServerCacheTTLEnumOVH;
};

export type GetDedicatedServerServiceNameFeaturesBmcWebKvmParams = {
/**
 * The ID of the request access operation
 */
operationId: string;
};

export type PostDedicatedServerServiceNameFeaturesBmcTestBody = {
  /** Result time to live in minutes */
  ttl?: DedicatedServerCacheTTLEnumOVH;
  /** Test to execute on the BMC interface */
  type: DedicatedServerBmcTestTypeEnumOVH;
};

export type GetDedicatedServerServiceNameFeaturesBmcTestParams = {
/**
 * The ID of the test operation
 */
operationId: string;
/**
 * Test to execute on the BMC interface
 */
type: DedicatedServerBmcTestTypeEnumOVH;
};

export type PostDedicatedServerServiceNameFeaturesBmcSshSolBody = {
  /** Public SSH key to use for this session */
  sshKey: string;
  /** Time to live in minutes to get session credentials, default is 5 minutes */
  ttl?: DedicatedServerCacheTTLEnumOVH;
};

export type GetDedicatedServerServiceNameFeaturesBmcSshSolParams = {
/**
 * The ID of the request access operation
 */
operationId: string;
};

export type PostDedicatedServerServiceNameFeaturesBmcJavaKvmBody = {
  /** IP to allow connection from for this KVM session, default value is caller IP */
  ipToAllow?: Ipv4OVH;
  /** Time to live in minutes to get session credentials, default is 5 minutes */
  ttl?: DedicatedServerCacheTTLEnumOVH;
};

export type GetDedicatedServerServiceNameFeaturesBmcJavaKvmParams = {
/**
 * The ID of the request access operation
 */
operationId: string;
};

export type PostDedicatedServerServiceNameFeaturesBackupFTPAccessBody = {
  /** Whether to allow the CIFS (SMB) protocol for this ACL */
  cifs: boolean;
  /** Whether to allow the FTP protocol for this ACL */
  ftp?: boolean;
  /** The IP Block specific to this ACL. It musts belong to your server. */
  ipBlock: IpBlockOVH;
  /** Whether to allow the NFS protocol for this ACL */
  nfs: boolean;
};

export type PostDedicatedServerServiceNameFeaturesBackupCloudBody = {
  /** cloud project id */
  cloudProjectId?: string;
  /** Project description of the project to be created (ignored when an existing project is already specified) */
  projectDescription?: string;
};

export type PostDedicatedServerServiceNameChangeContactBody = {
  /** The contact to set as admin contact */
  contactAdmin?: string;
  /** The contact to set as billing contact */
  contactBilling?: string;
  /** The contact to set as tech contact */
  contactTech?: string;
};

export type GetDedicatedServerServiceNameBootParams = {
/**
 * Filter the value of bootType property (=)
 */
bootType?: DedicatedServerBootTypeEnumOVH;
};

export type PostDedicatedServerServiceNameBiosSettingsSgxConfigureBody = {
  /** Size of the Processor Reserved Memory */
  prmrr?: DedicatedServerBiosSettingsSgxPrmrrEnumOVH;
  /** Desired SGX status */
  status?: DedicatedServerBiosSettingsSgxStatusEnumOVH;
};

export type PostDedicatedServerServiceNameAntiDDosGameActivateBody = {
  /** scheduling operation to activate anti DDoS protection (0=disable || 1=enable) */
  enable: boolean;
};

export type GetDedicatedServerOsAvailabilitiesParams = {
/**
 * Hardware reference requested
 */
hardware: string;
};

export type GetDedicatedServerDatacenterAvailabilitiesRawParams = {
/**
 * The names of datacenters separated by commas
 */
datacenters?: string;
/**
 * If true, all datacenters are returned except those listed in datacenters parameter
 */
excludeDatacenters?: boolean;
/**
 * The name of the gpu hardware part
 */
gpu?: string;
/**
 * The name of the memory hardware part
 */
memory?: string;
/**
 * The plan code in which the hardware is involved
 */
planCode?: string;
/**
 * The name of the base hardware
 */
server?: string;
/**
 * The name of the storage hardware part
 */
storage?: string;
/**
 * The name of the system storage hardware part
 */
systemStorage?: string;
};

export type GetDedicatedServerDatacenterAvailabilitiesParams = {
/**
 * The names of datacenters separated by commas
 */
datacenters?: string;
/**
 * If true, all datacenters are returned except those listed in datacenters parameter
 */
excludeDatacenters?: boolean;
/**
 * The name of the gpu hardware part
 */
gpu?: string;
/**
 * The name of the memory hardware part
 */
memory?: string;
/**
 * The plan code in which the hardware is involved
 */
planCode?: string;
/**
 * The name of the base hardware
 */
server?: string;
/**
 * The name of the storage hardware part
 */
storage?: string;
/**
 * The name of the system storage hardware part
 */
systemStorage?: string;
};

export type GetDedicatedServerParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * Resource record fieldType
 */
export type ZoneNamedResolutionFieldTypeEnumOVH = typeof ZoneNamedResolutionFieldTypeEnumOVH[keyof typeof ZoneNamedResolutionFieldTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ZoneNamedResolutionFieldTypeEnumOVH = {
  A: 'A',
  AAAA: 'AAAA',
  CAA: 'CAA',
  CNAME: 'CNAME',
  DKIM: 'DKIM',
  DMARC: 'DMARC',
  DNAME: 'DNAME',
  LOC: 'LOC',
  MX: 'MX',
  NAPTR: 'NAPTR',
  NS: 'NS',
  PTR: 'PTR',
  SPF: 'SPF',
  SRV: 'SRV',
  SSHFP: 'SSHFP',
  TLSA: 'TLSA',
  TXT: 'TXT',
} as const;

/**
 * vrack dedicated server interfaces (LEGACY)
 */
export interface VrackDedicatedServerOVH {
  /** Dedicated Server */
  readonly dedicatedServer?: string;
  /** vrack name */
  readonly vrack?: string;
}

/**
 * All states a vRack Task can be in
 */
export type VrackTaskStatusEnumOVH = typeof VrackTaskStatusEnumOVH[keyof typeof VrackTaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VrackTaskStatusEnumOVH = {
  cancelled: 'cancelled',
  doing: 'doing',
  done: 'done',
  init: 'init',
  todo: 'todo',
} as const;

/**
 * vrack tasks
 */
export interface VrackTaskOVH {
  readonly function?: string;
  readonly id?: number;
  /** @nullable */
  readonly lastUpdate?: string | null;
  /** @nullable */
  readonly orderId?: number | null;
  /** @nullable */
  readonly serviceName?: string | null;
  /** Task status */
  readonly status?: VrackTaskStatusEnumOVH;
  /** @nullable */
  readonly targetDomain?: string | null;
  /** @nullable */
  readonly todoDate?: string | null;
}

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Newly created support identifiers
 */
export interface SupportNewMessageInfoOVH {
  /**
   * Notice or warning
   * @nullable
   */
  additionalNotice?: string | null;
  /** Message identifier */
  messageId?: number;
  /** Ticket identifier */
  ticketId?: number;
  /** Ticket external number */
  ticketNumber?: number;
}

/**
 * Way of handling the renew
 * @nullable
 */
export type ServicesServiceOVHRenew = ServiceRenewTypeOVH | null;

/**
 * All reasons you can provide for a service termination
 */
export type ServiceTerminationReasonEnumOVH = typeof ServiceTerminationReasonEnumOVH[keyof typeof ServiceTerminationReasonEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationReasonEnumOVH = {
  FEATURES_DONT_SUIT_ME: 'FEATURES_DONT_SUIT_ME',
  LACK_OF_PERFORMANCES: 'LACK_OF_PERFORMANCES',
  MIGRATED_TO_ANOTHER_OVH_PRODUCT: 'MIGRATED_TO_ANOTHER_OVH_PRODUCT',
  MIGRATED_TO_COMPETITOR: 'MIGRATED_TO_COMPETITOR',
  NOT_ENOUGH_RECOGNITION: 'NOT_ENOUGH_RECOGNITION',
  NOT_NEEDED_ANYMORE: 'NOT_NEEDED_ANYMORE',
  NOT_RELIABLE: 'NOT_RELIABLE',
  NO_ANSWER: 'NO_ANSWER',
  OTHER: 'OTHER',
  PRODUCT_DIMENSION_DONT_SUIT_ME: 'PRODUCT_DIMENSION_DONT_SUIT_ME',
  PRODUCT_TOOLS_DONT_SUIT_ME: 'PRODUCT_TOOLS_DONT_SUIT_ME',
  TOO_EXPENSIVE: 'TOO_EXPENSIVE',
  TOO_HARD_TO_USE: 'TOO_HARD_TO_USE',
  UNSATIFIED_BY_CUSTOMER_SUPPORT: 'UNSATIFIED_BY_CUSTOMER_SUPPORT',
} as const;

/**
 * All future uses you can provide for a service termination
 */
export type ServiceTerminationFutureUseEnumOVH = typeof ServiceTerminationFutureUseEnumOVH[keyof typeof ServiceTerminationFutureUseEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationFutureUseEnumOVH = {
  NOT_REPLACING_SERVICE: 'NOT_REPLACING_SERVICE',
  OTHER: 'OTHER',
  SUBSCRIBE_AN_OTHER_SERVICE: 'SUBSCRIBE_AN_OTHER_SERVICE',
  SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR',
  SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR',
} as const;

export type PostDedicatedServerServiceNameConfirmTerminationBody = {
  /** Commentary about your termination request */
  commentary?: string;
  /** What next after your termination request */
  futureUse?: ServiceTerminationFutureUseEnumOVH;
  /** Reason of your termination request */
  reason?: ServiceTerminationReasonEnumOVH;
  /** The termination token sent by email to the admin contact */
  token: string;
};

export type ServiceStateEnumOVH = typeof ServiceStateEnumOVH[keyof typeof ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceStateEnumOVH = {
  autorenewInProgress: 'autorenewInProgress',
  expired: 'expired',
  inCreation: 'inCreation',
  ok: 'ok',
  pendingDebt: 'pendingDebt',
  unPaid: 'unPaid',
} as const;

/**
 * Detailed renewal type of a service
 */
export type ServiceRenewalTypeEnumOVH = typeof ServiceRenewalTypeEnumOVH[keyof typeof ServiceRenewalTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewalTypeEnumOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  automaticV2024: 'automaticV2024',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Details about a Service
 */
export interface ServicesServiceOVH {
  /** Indicates that the service can be set up to be deleted at expiration */
  readonly canDeleteAtExpiration?: boolean;
  readonly contactAdmin?: string;
  readonly contactBilling?: string;
  readonly contactTech?: string;
  readonly creation?: string;
  readonly domain?: string;
  /** @nullable */
  readonly engagedUpTo?: string | null;
  readonly expiration?: string;
  /**
   * All the possible renew period of your service in month
   * @nullable
   */
  readonly possibleRenewPeriod?: readonly number[] | null;
  /**
   * Way of handling the renew
   * @nullable
   */
  renew?: ServicesServiceOVHRenew;
  readonly renewalType?: ServiceRenewalTypeEnumOVH;
  readonly serviceId?: number;
  readonly status?: ServiceStateEnumOVH;
}

/**
 * Map a possible renew for a specific service
 */
export interface ServiceRenewTypeOVH {
  /** The service is automatically renewed */
  automatic?: boolean;
  /** The service will be deleted at expiration */
  deleteAtExpiration?: boolean;
  /** The service forced to be renewed */
  forced?: boolean;
  /**
   * The service needs to be manually renewed and paid
   * @nullable
   */
  manualPayment?: boolean | null;
  /**
   * period of renew in month
   * @nullable
   */
  period?: number | null;
}

/**
 * @nullable
 */
export type SecondaryDnsSecondaryDNSNameServerOVHIpv6 = Ipv6OVH | null;

/**
 * A structure describing informations about available nameserver for secondary dns 
 */
export interface SecondaryDnsSecondaryDNSNameServerOVH {
  /** the name server */
  hostname?: string;
  ip?: Ipv4OVH;
  /** @nullable */
  ipv6?: SecondaryDnsSecondaryDNSNameServerOVHIpv6;
}

/**
 * A structure describing informations about secondary dns check field
 */
export interface SecondaryDnsSecondaryDNSCheckFieldOVH {
  /** The field type to add on your DNS zone for this subDomain */
  fieldType?: ZoneNamedResolutionFieldTypeEnumOVH;
  /** The field value to add on your DNS zone for this subDomain */
  fieldValue?: string;
  /** The subdomain to add on your DNS zone for the domain */
  subDomain?: string;
}

/**
 * Secondary dns infos
 */
export interface SecondaryDnsSecondaryDNSOVH {
  readonly creationDate?: string;
  /** secondary dns server */
  readonly dns?: string;
  /** domain on slave server */
  readonly domain?: string;
  /** master ip */
  ipMaster?: Ipv4OVH;
}

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * OVH subsidiaries
 */
export type NichandleOvhSubsidiaryEnumOVH = typeof NichandleOvhSubsidiaryEnumOVH[keyof typeof NichandleOvhSubsidiaryEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const NichandleOvhSubsidiaryEnumOVH = {
  CZ: 'CZ',
  DE: 'DE',
  ES: 'ES',
  EU: 'EU',
  FI: 'FI',
  FR: 'FR',
  GB: 'GB',
  IE: 'IE',
  IT: 'IT',
  LT: 'LT',
  MA: 'MA',
  NL: 'NL',
  PL: 'PL',
  PT: 'PT',
  SN: 'SN',
  TN: 'TN',
  ASIA: 'ASIA',
  AU: 'AU',
  CA: 'CA',
  IN: 'IN',
  QC: 'QC',
  SG: 'SG',
  WE: 'WE',
  WS: 'WS',
} as const;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * All SQL Server versions for Windows products
 */
export type LicenseWindowsSqlVersionEnumOVH = typeof LicenseWindowsSqlVersionEnumOVH[keyof typeof LicenseWindowsSqlVersionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LicenseWindowsSqlVersionEnumOVH = {
  SQL_SERVER_2008_STANDARD_EDITION: 'SQL_SERVER_2008_STANDARD_EDITION',
  SQL_SERVER_2008_STANDARD_EDITION_2_CPU: 'SQL_SERVER_2008_STANDARD_EDITION_2_CPU',
  SQL_SERVER_2008_WEB_EDITION: 'SQL_SERVER_2008_WEB_EDITION',
  SQL_SERVER_2008_WEB_EDITION_2_CPU: 'SQL_SERVER_2008_WEB_EDITION_2_CPU',
  SQL_SERVER_2012_STANDARD_EDITION: 'SQL_SERVER_2012_STANDARD_EDITION',
  SQL_SERVER_2012_STANDARD_EDITION_12_CORES: 'SQL_SERVER_2012_STANDARD_EDITION_12_CORES',
  SQL_SERVER_2012_STANDARD_EDITION_16_CORES: 'SQL_SERVER_2012_STANDARD_EDITION_16_CORES',
  SQL_SERVER_2012_STANDARD_EDITION_18_CORES: 'SQL_SERVER_2012_STANDARD_EDITION_18_CORES',
  SQL_SERVER_2012_STANDARD_EDITION_20_CORES: 'SQL_SERVER_2012_STANDARD_EDITION_20_CORES',
  SQL_SERVER_2012_STANDARD_EDITION_24_CORES: 'SQL_SERVER_2012_STANDARD_EDITION_24_CORES',
  SQL_SERVER_2012_STANDARD_EDITION_2_CPU: 'SQL_SERVER_2012_STANDARD_EDITION_2_CPU',
  SQL_SERVER_2012_STANDARD_EDITION_32_CORES: 'SQL_SERVER_2012_STANDARD_EDITION_32_CORES',
  SQL_SERVER_2012_STANDARD_EDITION_4_CORES: 'SQL_SERVER_2012_STANDARD_EDITION_4_CORES',
  SQL_SERVER_2012_STANDARD_EDITION_6_CORES: 'SQL_SERVER_2012_STANDARD_EDITION_6_CORES',
  SQL_SERVER_2012_STANDARD_EDITION_8_CORES: 'SQL_SERVER_2012_STANDARD_EDITION_8_CORES',
  SQL_SERVER_2012_WEB_EDITION_12_CORES: 'SQL_SERVER_2012_WEB_EDITION_12_CORES',
  SQL_SERVER_2012_WEB_EDITION_16_CORES: 'SQL_SERVER_2012_WEB_EDITION_16_CORES',
  SQL_SERVER_2012_WEB_EDITION_18_CORES: 'SQL_SERVER_2012_WEB_EDITION_18_CORES',
  SQL_SERVER_2012_WEB_EDITION_20_CORES: 'SQL_SERVER_2012_WEB_EDITION_20_CORES',
  SQL_SERVER_2012_WEB_EDITION_24_CORES: 'SQL_SERVER_2012_WEB_EDITION_24_CORES',
  SQL_SERVER_2012_WEB_EDITION_32_CORES: 'SQL_SERVER_2012_WEB_EDITION_32_CORES',
  SQL_SERVER_2012_WEB_EDITION_4_CORES: 'SQL_SERVER_2012_WEB_EDITION_4_CORES',
  SQL_SERVER_2012_WEB_EDITION_6_CORES: 'SQL_SERVER_2012_WEB_EDITION_6_CORES',
  SQL_SERVER_2012_WEB_EDITION_8_CORES: 'SQL_SERVER_2012_WEB_EDITION_8_CORES',
} as const;

/**
 * All versions for Windows products
 */
export type LicenseWindowsOsVersionEnumOVH = typeof LicenseWindowsOsVersionEnumOVH[keyof typeof LicenseWindowsOsVersionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LicenseWindowsOsVersionEnumOVH = {
  WINDOWS_SERVER_2003_ENTERPRISE_EDITION: 'WINDOWS_SERVER_2003_ENTERPRISE_EDITION',
  WINDOWS_SERVER_2003_ENTERPRISE_EDITION_2_CPU: 'WINDOWS_SERVER_2003_ENTERPRISE_EDITION_2_CPU',
  WINDOWS_SERVER_2003_STANDARD_EDITION: 'WINDOWS_SERVER_2003_STANDARD_EDITION',
  WINDOWS_SERVER_2003_WEB_EDITION: 'WINDOWS_SERVER_2003_WEB_EDITION',
  WINDOWS_SERVER_2003_WEB_EDITION_2_CPU: 'WINDOWS_SERVER_2003_WEB_EDITION_2_CPU',
  WINDOWS_SERVER_2003_WEB_ENHANCED_EDITION: 'WINDOWS_SERVER_2003_WEB_ENHANCED_EDITION',
  WINDOWS_SERVER_2003_WEB_STANDARD_EDITION: 'WINDOWS_SERVER_2003_WEB_STANDARD_EDITION',
  WINDOWS_SERVER_2003_WEB_STANDARD_EDITION_2_CPU: 'WINDOWS_SERVER_2003_WEB_STANDARD_EDITION_2_CPU',
  WINDOWS_SERVER_2008_DATACENTER_EDITION: 'WINDOWS_SERVER_2008_DATACENTER_EDITION',
  WINDOWS_SERVER_2008_DATACENTER_EDITION_2_CPU: 'WINDOWS_SERVER_2008_DATACENTER_EDITION_2_CPU',
  WINDOWS_SERVER_2008_DATACENTER_EDITION_4_CPU: 'WINDOWS_SERVER_2008_DATACENTER_EDITION_4_CPU',
  WINDOWS_SERVER_2008_ENTERPRISE_EDITION: 'WINDOWS_SERVER_2008_ENTERPRISE_EDITION',
  WINDOWS_SERVER_2008_ENTERPRISE_EDITION_2_CPU: 'WINDOWS_SERVER_2008_ENTERPRISE_EDITION_2_CPU',
  WINDOWS_SERVER_2008_ENTERPRISE_EDITION_4_CPU: 'WINDOWS_SERVER_2008_ENTERPRISE_EDITION_4_CPU',
  WINDOWS_SERVER_2008_STANDARD_EDITION: 'WINDOWS_SERVER_2008_STANDARD_EDITION',
  WINDOWS_SERVER_2008_STANDARD_EDITION_2_CPU: 'WINDOWS_SERVER_2008_STANDARD_EDITION_2_CPU',
  WINDOWS_SERVER_2008_STANDARD_EDITION_4_CPU: 'WINDOWS_SERVER_2008_STANDARD_EDITION_4_CPU',
  WINDOWS_SERVER_2008_WEB_EDITION: 'WINDOWS_SERVER_2008_WEB_EDITION',
  WINDOWS_SERVER_2008_WEB_EDITION_2_CPU: 'WINDOWS_SERVER_2008_WEB_EDITION_2_CPU',
  WINDOWS_SERVER_2008_WEB_EDITION_4_CPU: 'WINDOWS_SERVER_2008_WEB_EDITION_4_CPU',
  WINDOWS_SERVER_2008_WEB_STANDARD_EDITION: 'WINDOWS_SERVER_2008_WEB_STANDARD_EDITION',
  WINDOWS_SERVER_2012_DATACENTER_EDITION: 'WINDOWS_SERVER_2012_DATACENTER_EDITION',
  WINDOWS_SERVER_2012_DATACENTER_EDITION_2_CPU: 'WINDOWS_SERVER_2012_DATACENTER_EDITION_2_CPU',
  WINDOWS_SERVER_2012_DATACENTER_EDITION_4_CPU: 'WINDOWS_SERVER_2012_DATACENTER_EDITION_4_CPU',
  WINDOWS_SERVER_2012_ENTERPRISE_EDITION: 'WINDOWS_SERVER_2012_ENTERPRISE_EDITION',
  WINDOWS_SERVER_2012_ENTERPRISE_EDITION_2_CPU: 'WINDOWS_SERVER_2012_ENTERPRISE_EDITION_2_CPU',
  WINDOWS_SERVER_2012_STANDARD_EDITION: 'WINDOWS_SERVER_2012_STANDARD_EDITION',
  WINDOWS_SERVER_2012_STANDARD_EDITION_2_CPU: 'WINDOWS_SERVER_2012_STANDARD_EDITION_2_CPU',
  WINDOWS_SERVER_2012_STANDARD_EDITION_4_CPU: 'WINDOWS_SERVER_2012_STANDARD_EDITION_4_CPU',
  WINDOWS_SERVER_2012_WEB_EDITION: 'WINDOWS_SERVER_2012_WEB_EDITION',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_10_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_10_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_12_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_12_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_14_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_14_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_16_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_16_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_18_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_18_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_20_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_20_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_22_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_22_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_24_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_24_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_32_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_32_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_48_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_48_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_64_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_64_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_8_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_8_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_10_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_10_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_12_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_12_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_14_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_14_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_16_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_16_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_18_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_18_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_20_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_20_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_22_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_22_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_24_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_24_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_32_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_32_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_8_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_8_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_10_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_10_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_12_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_12_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_14_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_14_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_16_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_16_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_18_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_18_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_20_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_20_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_22_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_22_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_24_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_24_CORES',
  WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_8_CORES: 'WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_8_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_10_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_10_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_12_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_12_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_14_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_14_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_16_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_16_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_18_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_18_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_20_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_20_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_22_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_22_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_24_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_24_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_32_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_32_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_48_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_48_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_64_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_64_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_8_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_8_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_10_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_10_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_12_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_12_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_14_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_14_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_16_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_16_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_18_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_18_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_20_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_20_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_22_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_22_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_24_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_24_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_32_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_32_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_8_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_8_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_10_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_10_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_12_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_12_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_14_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_14_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_16_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_16_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_18_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_18_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_20_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_20_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_22_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_22_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_24_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_24_CORES',
  WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_8_CORES: 'WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_8_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_10_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_10_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_128_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_128_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_12_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_12_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_14_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_14_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_16_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_16_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_18_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_18_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_20_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_20_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_22_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_22_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_24_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_24_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_256_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_256_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_26_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_26_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_28_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_28_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_30_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_30_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_32_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_32_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_34_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_34_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_36_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_36_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_38_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_38_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_40_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_40_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_42_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_42_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_44_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_44_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_46_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_46_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_48_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_48_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_50_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_50_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_512_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_512_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_52_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_52_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_54_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_54_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_56_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_56_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_58_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_58_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_60_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_60_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_62_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_62_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_64_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_64_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_8_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_8_CORES',
  WINDOWS_SERVER_2019_DATACENTER_EDITION_96_CORES: 'WINDOWS_SERVER_2019_DATACENTER_EDITION_96_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_10_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_10_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_128_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_128_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_12_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_12_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_14_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_14_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_16_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_16_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_18_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_18_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_20_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_20_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_22_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_22_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_24_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_24_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_256_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_256_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_26_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_26_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_28_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_28_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_30_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_30_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_32_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_32_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_34_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_34_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_36_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_36_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_38_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_38_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_40_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_40_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_42_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_42_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_44_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_44_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_46_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_46_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_48_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_48_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_50_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_50_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_512_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_512_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_52_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_52_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_54_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_54_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_56_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_56_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_58_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_58_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_60_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_60_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_62_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_62_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_64_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_64_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_8_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_8_CORES',
  WINDOWS_SERVER_2019_STANDARD_EDITION_96_CORES: 'WINDOWS_SERVER_2019_STANDARD_EDITION_96_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_10_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_10_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_128_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_128_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_12_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_12_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_14_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_14_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_16_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_16_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_18_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_18_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_20_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_20_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_22_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_22_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_24_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_24_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_256_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_256_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_26_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_26_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_28_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_28_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_30_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_30_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_32_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_32_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_34_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_34_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_36_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_36_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_38_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_38_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_40_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_40_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_42_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_42_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_44_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_44_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_46_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_46_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_48_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_48_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_50_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_50_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_512_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_512_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_52_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_52_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_54_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_54_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_56_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_56_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_58_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_58_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_60_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_60_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_62_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_62_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_64_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_64_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_8_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_8_CORES',
  WINDOWS_SERVER_2022_DATACENTER_EDITION_96_CORES: 'WINDOWS_SERVER_2022_DATACENTER_EDITION_96_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_10_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_10_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_128_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_128_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_12_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_12_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_14_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_14_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_16_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_16_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_18_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_18_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_20_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_20_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_22_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_22_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_24_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_24_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_256_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_256_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_26_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_26_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_28_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_28_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_30_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_30_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_32_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_32_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_34_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_34_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_36_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_36_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_38_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_38_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_40_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_40_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_42_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_42_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_44_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_44_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_46_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_46_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_48_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_48_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_50_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_50_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_512_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_512_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_52_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_52_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_54_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_54_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_56_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_56_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_58_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_58_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_60_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_60_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_62_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_62_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_64_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_64_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_8_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_8_CORES',
  WINDOWS_SERVER_2022_STANDARD_EDITION_96_CORES: 'WINDOWS_SERVER_2022_STANDARD_EDITION_96_CORES',
  'windows-server-2008-license-datacenter-edition-1-cpu': 'windows-server-2008-license-datacenter-edition-1-cpu',
  'windows-server-2008-license-datacenter-edition-2-cpu': 'windows-server-2008-license-datacenter-edition-2-cpu',
  'windows-server-2008-license-datacenter-edition-4-cpu': 'windows-server-2008-license-datacenter-edition-4-cpu',
  'windows-server-2008-license-enterprise-edition-1-cpu': 'windows-server-2008-license-enterprise-edition-1-cpu',
  'windows-server-2008-license-enterprise-edition-2-cpu': 'windows-server-2008-license-enterprise-edition-2-cpu',
  'windows-server-2008-license-enterprise-edition-4-cpu': 'windows-server-2008-license-enterprise-edition-4-cpu',
  'windows-server-2008-license-standard-edition-1-cpu': 'windows-server-2008-license-standard-edition-1-cpu',
  'windows-server-2008-license-standard-edition-2-cpu': 'windows-server-2008-license-standard-edition-2-cpu',
  'windows-server-2008-license-standard-edition-4-cpu': 'windows-server-2008-license-standard-edition-4-cpu',
  'windows-server-2008-license-web-edition-1-cpu': 'windows-server-2008-license-web-edition-1-cpu',
  'windows-server-2008-license-web-edition-2-cpu': 'windows-server-2008-license-web-edition-2-cpu',
  'windows-server-2008-license-web-edition-4-cpu': 'windows-server-2008-license-web-edition-4-cpu',
  'windows-server-2012-license-datacenter-edition-1-cpu': 'windows-server-2012-license-datacenter-edition-1-cpu',
  'windows-server-2012-license-datacenter-edition-2-cpu': 'windows-server-2012-license-datacenter-edition-2-cpu',
  'windows-server-2012-license-datacenter-edition-4-cpu': 'windows-server-2012-license-datacenter-edition-4-cpu',
  'windows-server-2012-license-standard-edition-1-cpu': 'windows-server-2012-license-standard-edition-1-cpu',
  'windows-server-2012-license-standard-edition-2-cpu': 'windows-server-2012-license-standard-edition-2-cpu',
  'windows-server-2012-license-standard-edition-4-cpu': 'windows-server-2012-license-standard-edition-4-cpu',
  'windows-server-2016-license-datacenter-edition-1-cpu-10-cores': 'windows-server-2016-license-datacenter-edition-1-cpu-10-cores',
  'windows-server-2016-license-datacenter-edition-1-cpu-12-cores': 'windows-server-2016-license-datacenter-edition-1-cpu-12-cores',
  'windows-server-2016-license-datacenter-edition-1-cpu-14-cores': 'windows-server-2016-license-datacenter-edition-1-cpu-14-cores',
  'windows-server-2016-license-datacenter-edition-1-cpu-16-cores': 'windows-server-2016-license-datacenter-edition-1-cpu-16-cores',
  'windows-server-2016-license-datacenter-edition-1-cpu-18-cores': 'windows-server-2016-license-datacenter-edition-1-cpu-18-cores',
  'windows-server-2016-license-datacenter-edition-1-cpu-20-cores': 'windows-server-2016-license-datacenter-edition-1-cpu-20-cores',
  'windows-server-2016-license-datacenter-edition-1-cpu-22-cores': 'windows-server-2016-license-datacenter-edition-1-cpu-22-cores',
  'windows-server-2016-license-datacenter-edition-1-cpu-24-cores': 'windows-server-2016-license-datacenter-edition-1-cpu-24-cores',
  'windows-server-2016-license-datacenter-edition-1-cpu-32-cores': 'windows-server-2016-license-datacenter-edition-1-cpu-32-cores',
  'windows-server-2016-license-datacenter-edition-1-cpu-48-cores': 'windows-server-2016-license-datacenter-edition-1-cpu-48-cores',
  'windows-server-2016-license-datacenter-edition-1-cpu-64-cores': 'windows-server-2016-license-datacenter-edition-1-cpu-64-cores',
  'windows-server-2016-license-datacenter-edition-1-cpu-8-cores': 'windows-server-2016-license-datacenter-edition-1-cpu-8-cores',
  'windows-server-2016-license-datacenter-edition-2-cpu-10-cores': 'windows-server-2016-license-datacenter-edition-2-cpu-10-cores',
  'windows-server-2016-license-datacenter-edition-2-cpu-12-cores': 'windows-server-2016-license-datacenter-edition-2-cpu-12-cores',
  'windows-server-2016-license-datacenter-edition-2-cpu-14-cores': 'windows-server-2016-license-datacenter-edition-2-cpu-14-cores',
  'windows-server-2016-license-datacenter-edition-2-cpu-16-cores': 'windows-server-2016-license-datacenter-edition-2-cpu-16-cores',
  'windows-server-2016-license-datacenter-edition-2-cpu-18-cores': 'windows-server-2016-license-datacenter-edition-2-cpu-18-cores',
  'windows-server-2016-license-datacenter-edition-2-cpu-20-cores': 'windows-server-2016-license-datacenter-edition-2-cpu-20-cores',
  'windows-server-2016-license-datacenter-edition-2-cpu-22-cores': 'windows-server-2016-license-datacenter-edition-2-cpu-22-cores',
  'windows-server-2016-license-datacenter-edition-2-cpu-24-cores': 'windows-server-2016-license-datacenter-edition-2-cpu-24-cores',
  'windows-server-2016-license-datacenter-edition-2-cpu-32-cores': 'windows-server-2016-license-datacenter-edition-2-cpu-32-cores',
  'windows-server-2016-license-datacenter-edition-2-cpu-8-cores': 'windows-server-2016-license-datacenter-edition-2-cpu-8-cores',
  'windows-server-2016-license-datacenter-edition-4-cpu-10-cores': 'windows-server-2016-license-datacenter-edition-4-cpu-10-cores',
  'windows-server-2016-license-datacenter-edition-4-cpu-12-cores': 'windows-server-2016-license-datacenter-edition-4-cpu-12-cores',
  'windows-server-2016-license-datacenter-edition-4-cpu-14-cores': 'windows-server-2016-license-datacenter-edition-4-cpu-14-cores',
  'windows-server-2016-license-datacenter-edition-4-cpu-16-cores': 'windows-server-2016-license-datacenter-edition-4-cpu-16-cores',
  'windows-server-2016-license-datacenter-edition-4-cpu-18-cores': 'windows-server-2016-license-datacenter-edition-4-cpu-18-cores',
  'windows-server-2016-license-datacenter-edition-4-cpu-20-cores': 'windows-server-2016-license-datacenter-edition-4-cpu-20-cores',
  'windows-server-2016-license-datacenter-edition-4-cpu-22-cores': 'windows-server-2016-license-datacenter-edition-4-cpu-22-cores',
  'windows-server-2016-license-datacenter-edition-4-cpu-24-cores': 'windows-server-2016-license-datacenter-edition-4-cpu-24-cores',
  'windows-server-2016-license-datacenter-edition-4-cpu-8-cores': 'windows-server-2016-license-datacenter-edition-4-cpu-8-cores',
  'windows-server-2016-license-standard-edition-1-cpu-10-cores': 'windows-server-2016-license-standard-edition-1-cpu-10-cores',
  'windows-server-2016-license-standard-edition-1-cpu-12-cores': 'windows-server-2016-license-standard-edition-1-cpu-12-cores',
  'windows-server-2016-license-standard-edition-1-cpu-14-cores': 'windows-server-2016-license-standard-edition-1-cpu-14-cores',
  'windows-server-2016-license-standard-edition-1-cpu-16-cores': 'windows-server-2016-license-standard-edition-1-cpu-16-cores',
  'windows-server-2016-license-standard-edition-1-cpu-18-cores': 'windows-server-2016-license-standard-edition-1-cpu-18-cores',
  'windows-server-2016-license-standard-edition-1-cpu-20-cores': 'windows-server-2016-license-standard-edition-1-cpu-20-cores',
  'windows-server-2016-license-standard-edition-1-cpu-22-cores': 'windows-server-2016-license-standard-edition-1-cpu-22-cores',
  'windows-server-2016-license-standard-edition-1-cpu-24-cores': 'windows-server-2016-license-standard-edition-1-cpu-24-cores',
  'windows-server-2016-license-standard-edition-1-cpu-32-cores': 'windows-server-2016-license-standard-edition-1-cpu-32-cores',
  'windows-server-2016-license-standard-edition-1-cpu-48-cores': 'windows-server-2016-license-standard-edition-1-cpu-48-cores',
  'windows-server-2016-license-standard-edition-1-cpu-64-cores': 'windows-server-2016-license-standard-edition-1-cpu-64-cores',
  'windows-server-2016-license-standard-edition-1-cpu-8-cores': 'windows-server-2016-license-standard-edition-1-cpu-8-cores',
  'windows-server-2016-license-standard-edition-2-cpu-10-cores': 'windows-server-2016-license-standard-edition-2-cpu-10-cores',
  'windows-server-2016-license-standard-edition-2-cpu-12-cores': 'windows-server-2016-license-standard-edition-2-cpu-12-cores',
  'windows-server-2016-license-standard-edition-2-cpu-14-cores': 'windows-server-2016-license-standard-edition-2-cpu-14-cores',
  'windows-server-2016-license-standard-edition-2-cpu-16-cores': 'windows-server-2016-license-standard-edition-2-cpu-16-cores',
  'windows-server-2016-license-standard-edition-2-cpu-18-cores': 'windows-server-2016-license-standard-edition-2-cpu-18-cores',
  'windows-server-2016-license-standard-edition-2-cpu-20-cores': 'windows-server-2016-license-standard-edition-2-cpu-20-cores',
  'windows-server-2016-license-standard-edition-2-cpu-22-cores': 'windows-server-2016-license-standard-edition-2-cpu-22-cores',
  'windows-server-2016-license-standard-edition-2-cpu-24-cores': 'windows-server-2016-license-standard-edition-2-cpu-24-cores',
  'windows-server-2016-license-standard-edition-2-cpu-32-cores': 'windows-server-2016-license-standard-edition-2-cpu-32-cores',
  'windows-server-2016-license-standard-edition-2-cpu-8-cores': 'windows-server-2016-license-standard-edition-2-cpu-8-cores',
  'windows-server-2016-license-standard-edition-4-cpu-10-cores': 'windows-server-2016-license-standard-edition-4-cpu-10-cores',
  'windows-server-2016-license-standard-edition-4-cpu-12-cores': 'windows-server-2016-license-standard-edition-4-cpu-12-cores',
  'windows-server-2016-license-standard-edition-4-cpu-14-cores': 'windows-server-2016-license-standard-edition-4-cpu-14-cores',
  'windows-server-2016-license-standard-edition-4-cpu-16-cores': 'windows-server-2016-license-standard-edition-4-cpu-16-cores',
  'windows-server-2016-license-standard-edition-4-cpu-18-cores': 'windows-server-2016-license-standard-edition-4-cpu-18-cores',
  'windows-server-2016-license-standard-edition-4-cpu-20-cores': 'windows-server-2016-license-standard-edition-4-cpu-20-cores',
  'windows-server-2016-license-standard-edition-4-cpu-22-cores': 'windows-server-2016-license-standard-edition-4-cpu-22-cores',
  'windows-server-2016-license-standard-edition-4-cpu-24-cores': 'windows-server-2016-license-standard-edition-4-cpu-24-cores',
  'windows-server-2016-license-standard-edition-4-cpu-8-cores': 'windows-server-2016-license-standard-edition-4-cpu-8-cores',
  'windows-server-2019-license-datacenter-edition-10-cores': 'windows-server-2019-license-datacenter-edition-10-cores',
  'windows-server-2019-license-datacenter-edition-12-cores': 'windows-server-2019-license-datacenter-edition-12-cores',
  'windows-server-2019-license-datacenter-edition-128-cores': 'windows-server-2019-license-datacenter-edition-128-cores',
  'windows-server-2019-license-datacenter-edition-14-cores': 'windows-server-2019-license-datacenter-edition-14-cores',
  'windows-server-2019-license-datacenter-edition-16-cores': 'windows-server-2019-license-datacenter-edition-16-cores',
  'windows-server-2019-license-datacenter-edition-18-cores': 'windows-server-2019-license-datacenter-edition-18-cores',
  'windows-server-2019-license-datacenter-edition-20-cores': 'windows-server-2019-license-datacenter-edition-20-cores',
  'windows-server-2019-license-datacenter-edition-22-cores': 'windows-server-2019-license-datacenter-edition-22-cores',
  'windows-server-2019-license-datacenter-edition-24-cores': 'windows-server-2019-license-datacenter-edition-24-cores',
  'windows-server-2019-license-datacenter-edition-256-cores': 'windows-server-2019-license-datacenter-edition-256-cores',
  'windows-server-2019-license-datacenter-edition-26-cores': 'windows-server-2019-license-datacenter-edition-26-cores',
  'windows-server-2019-license-datacenter-edition-28-cores': 'windows-server-2019-license-datacenter-edition-28-cores',
  'windows-server-2019-license-datacenter-edition-30-cores': 'windows-server-2019-license-datacenter-edition-30-cores',
  'windows-server-2019-license-datacenter-edition-32-cores': 'windows-server-2019-license-datacenter-edition-32-cores',
  'windows-server-2019-license-datacenter-edition-34-cores': 'windows-server-2019-license-datacenter-edition-34-cores',
  'windows-server-2019-license-datacenter-edition-36-cores': 'windows-server-2019-license-datacenter-edition-36-cores',
  'windows-server-2019-license-datacenter-edition-38-cores': 'windows-server-2019-license-datacenter-edition-38-cores',
  'windows-server-2019-license-datacenter-edition-40-cores': 'windows-server-2019-license-datacenter-edition-40-cores',
  'windows-server-2019-license-datacenter-edition-42-cores': 'windows-server-2019-license-datacenter-edition-42-cores',
  'windows-server-2019-license-datacenter-edition-44-cores': 'windows-server-2019-license-datacenter-edition-44-cores',
  'windows-server-2019-license-datacenter-edition-46-cores': 'windows-server-2019-license-datacenter-edition-46-cores',
  'windows-server-2019-license-datacenter-edition-48-cores': 'windows-server-2019-license-datacenter-edition-48-cores',
  'windows-server-2019-license-datacenter-edition-50-cores': 'windows-server-2019-license-datacenter-edition-50-cores',
  'windows-server-2019-license-datacenter-edition-512-cores': 'windows-server-2019-license-datacenter-edition-512-cores',
  'windows-server-2019-license-datacenter-edition-52-cores': 'windows-server-2019-license-datacenter-edition-52-cores',
  'windows-server-2019-license-datacenter-edition-54-cores': 'windows-server-2019-license-datacenter-edition-54-cores',
  'windows-server-2019-license-datacenter-edition-56-cores': 'windows-server-2019-license-datacenter-edition-56-cores',
  'windows-server-2019-license-datacenter-edition-58-cores': 'windows-server-2019-license-datacenter-edition-58-cores',
  'windows-server-2019-license-datacenter-edition-60-cores': 'windows-server-2019-license-datacenter-edition-60-cores',
  'windows-server-2019-license-datacenter-edition-62-cores': 'windows-server-2019-license-datacenter-edition-62-cores',
  'windows-server-2019-license-datacenter-edition-64-cores': 'windows-server-2019-license-datacenter-edition-64-cores',
  'windows-server-2019-license-datacenter-edition-8-cores': 'windows-server-2019-license-datacenter-edition-8-cores',
  'windows-server-2019-license-datacenter-edition-96-cores': 'windows-server-2019-license-datacenter-edition-96-cores',
  'windows-server-2019-license-standard-edition-10-cores': 'windows-server-2019-license-standard-edition-10-cores',
  'windows-server-2019-license-standard-edition-12-cores': 'windows-server-2019-license-standard-edition-12-cores',
  'windows-server-2019-license-standard-edition-128-cores': 'windows-server-2019-license-standard-edition-128-cores',
  'windows-server-2019-license-standard-edition-14-cores': 'windows-server-2019-license-standard-edition-14-cores',
  'windows-server-2019-license-standard-edition-16-cores': 'windows-server-2019-license-standard-edition-16-cores',
  'windows-server-2019-license-standard-edition-18-cores': 'windows-server-2019-license-standard-edition-18-cores',
  'windows-server-2019-license-standard-edition-20-cores': 'windows-server-2019-license-standard-edition-20-cores',
  'windows-server-2019-license-standard-edition-22-cores': 'windows-server-2019-license-standard-edition-22-cores',
  'windows-server-2019-license-standard-edition-24-cores': 'windows-server-2019-license-standard-edition-24-cores',
  'windows-server-2019-license-standard-edition-256-cores': 'windows-server-2019-license-standard-edition-256-cores',
  'windows-server-2019-license-standard-edition-26-cores': 'windows-server-2019-license-standard-edition-26-cores',
  'windows-server-2019-license-standard-edition-28-cores': 'windows-server-2019-license-standard-edition-28-cores',
  'windows-server-2019-license-standard-edition-30-cores': 'windows-server-2019-license-standard-edition-30-cores',
  'windows-server-2019-license-standard-edition-32-cores': 'windows-server-2019-license-standard-edition-32-cores',
  'windows-server-2019-license-standard-edition-34-cores': 'windows-server-2019-license-standard-edition-34-cores',
  'windows-server-2019-license-standard-edition-36-cores': 'windows-server-2019-license-standard-edition-36-cores',
  'windows-server-2019-license-standard-edition-38-cores': 'windows-server-2019-license-standard-edition-38-cores',
  'windows-server-2019-license-standard-edition-40-cores': 'windows-server-2019-license-standard-edition-40-cores',
  'windows-server-2019-license-standard-edition-42-cores': 'windows-server-2019-license-standard-edition-42-cores',
  'windows-server-2019-license-standard-edition-44-cores': 'windows-server-2019-license-standard-edition-44-cores',
  'windows-server-2019-license-standard-edition-46-cores': 'windows-server-2019-license-standard-edition-46-cores',
  'windows-server-2019-license-standard-edition-48-cores': 'windows-server-2019-license-standard-edition-48-cores',
  'windows-server-2019-license-standard-edition-50-cores': 'windows-server-2019-license-standard-edition-50-cores',
  'windows-server-2019-license-standard-edition-512-cores': 'windows-server-2019-license-standard-edition-512-cores',
  'windows-server-2019-license-standard-edition-52-cores': 'windows-server-2019-license-standard-edition-52-cores',
  'windows-server-2019-license-standard-edition-54-cores': 'windows-server-2019-license-standard-edition-54-cores',
  'windows-server-2019-license-standard-edition-56-cores': 'windows-server-2019-license-standard-edition-56-cores',
  'windows-server-2019-license-standard-edition-58-cores': 'windows-server-2019-license-standard-edition-58-cores',
  'windows-server-2019-license-standard-edition-60-cores': 'windows-server-2019-license-standard-edition-60-cores',
  'windows-server-2019-license-standard-edition-62-cores': 'windows-server-2019-license-standard-edition-62-cores',
  'windows-server-2019-license-standard-edition-64-cores': 'windows-server-2019-license-standard-edition-64-cores',
  'windows-server-2019-license-standard-edition-8-cores': 'windows-server-2019-license-standard-edition-8-cores',
  'windows-server-2019-license-standard-edition-96-cores': 'windows-server-2019-license-standard-edition-96-cores',
  'windows-server-2022-license-datacenter-edition-10-cores': 'windows-server-2022-license-datacenter-edition-10-cores',
  'windows-server-2022-license-datacenter-edition-12-cores': 'windows-server-2022-license-datacenter-edition-12-cores',
  'windows-server-2022-license-datacenter-edition-128-cores': 'windows-server-2022-license-datacenter-edition-128-cores',
  'windows-server-2022-license-datacenter-edition-14-cores': 'windows-server-2022-license-datacenter-edition-14-cores',
  'windows-server-2022-license-datacenter-edition-16-cores': 'windows-server-2022-license-datacenter-edition-16-cores',
  'windows-server-2022-license-datacenter-edition-18-cores': 'windows-server-2022-license-datacenter-edition-18-cores',
  'windows-server-2022-license-datacenter-edition-20-cores': 'windows-server-2022-license-datacenter-edition-20-cores',
  'windows-server-2022-license-datacenter-edition-22-cores': 'windows-server-2022-license-datacenter-edition-22-cores',
  'windows-server-2022-license-datacenter-edition-24-cores': 'windows-server-2022-license-datacenter-edition-24-cores',
  'windows-server-2022-license-datacenter-edition-256-cores': 'windows-server-2022-license-datacenter-edition-256-cores',
  'windows-server-2022-license-datacenter-edition-26-cores': 'windows-server-2022-license-datacenter-edition-26-cores',
  'windows-server-2022-license-datacenter-edition-28-cores': 'windows-server-2022-license-datacenter-edition-28-cores',
  'windows-server-2022-license-datacenter-edition-30-cores': 'windows-server-2022-license-datacenter-edition-30-cores',
  'windows-server-2022-license-datacenter-edition-32-cores': 'windows-server-2022-license-datacenter-edition-32-cores',
  'windows-server-2022-license-datacenter-edition-34-cores': 'windows-server-2022-license-datacenter-edition-34-cores',
  'windows-server-2022-license-datacenter-edition-36-cores': 'windows-server-2022-license-datacenter-edition-36-cores',
  'windows-server-2022-license-datacenter-edition-38-cores': 'windows-server-2022-license-datacenter-edition-38-cores',
  'windows-server-2022-license-datacenter-edition-40-cores': 'windows-server-2022-license-datacenter-edition-40-cores',
  'windows-server-2022-license-datacenter-edition-42-cores': 'windows-server-2022-license-datacenter-edition-42-cores',
  'windows-server-2022-license-datacenter-edition-44-cores': 'windows-server-2022-license-datacenter-edition-44-cores',
  'windows-server-2022-license-datacenter-edition-46-cores': 'windows-server-2022-license-datacenter-edition-46-cores',
  'windows-server-2022-license-datacenter-edition-48-cores': 'windows-server-2022-license-datacenter-edition-48-cores',
  'windows-server-2022-license-datacenter-edition-50-cores': 'windows-server-2022-license-datacenter-edition-50-cores',
  'windows-server-2022-license-datacenter-edition-512-cores': 'windows-server-2022-license-datacenter-edition-512-cores',
  'windows-server-2022-license-datacenter-edition-52-cores': 'windows-server-2022-license-datacenter-edition-52-cores',
  'windows-server-2022-license-datacenter-edition-54-cores': 'windows-server-2022-license-datacenter-edition-54-cores',
  'windows-server-2022-license-datacenter-edition-56-cores': 'windows-server-2022-license-datacenter-edition-56-cores',
  'windows-server-2022-license-datacenter-edition-58-cores': 'windows-server-2022-license-datacenter-edition-58-cores',
  'windows-server-2022-license-datacenter-edition-60-cores': 'windows-server-2022-license-datacenter-edition-60-cores',
  'windows-server-2022-license-datacenter-edition-62-cores': 'windows-server-2022-license-datacenter-edition-62-cores',
  'windows-server-2022-license-datacenter-edition-64-cores': 'windows-server-2022-license-datacenter-edition-64-cores',
  'windows-server-2022-license-datacenter-edition-8-cores': 'windows-server-2022-license-datacenter-edition-8-cores',
  'windows-server-2022-license-datacenter-edition-96-cores': 'windows-server-2022-license-datacenter-edition-96-cores',
  'windows-server-2022-license-standard-edition-10-cores': 'windows-server-2022-license-standard-edition-10-cores',
  'windows-server-2022-license-standard-edition-12-cores': 'windows-server-2022-license-standard-edition-12-cores',
  'windows-server-2022-license-standard-edition-128-cores': 'windows-server-2022-license-standard-edition-128-cores',
  'windows-server-2022-license-standard-edition-14-cores': 'windows-server-2022-license-standard-edition-14-cores',
  'windows-server-2022-license-standard-edition-16-cores': 'windows-server-2022-license-standard-edition-16-cores',
  'windows-server-2022-license-standard-edition-18-cores': 'windows-server-2022-license-standard-edition-18-cores',
  'windows-server-2022-license-standard-edition-20-cores': 'windows-server-2022-license-standard-edition-20-cores',
  'windows-server-2022-license-standard-edition-22-cores': 'windows-server-2022-license-standard-edition-22-cores',
  'windows-server-2022-license-standard-edition-24-cores': 'windows-server-2022-license-standard-edition-24-cores',
  'windows-server-2022-license-standard-edition-256-cores': 'windows-server-2022-license-standard-edition-256-cores',
  'windows-server-2022-license-standard-edition-26-cores': 'windows-server-2022-license-standard-edition-26-cores',
  'windows-server-2022-license-standard-edition-28-cores': 'windows-server-2022-license-standard-edition-28-cores',
  'windows-server-2022-license-standard-edition-30-cores': 'windows-server-2022-license-standard-edition-30-cores',
  'windows-server-2022-license-standard-edition-32-cores': 'windows-server-2022-license-standard-edition-32-cores',
  'windows-server-2022-license-standard-edition-34-cores': 'windows-server-2022-license-standard-edition-34-cores',
  'windows-server-2022-license-standard-edition-36-cores': 'windows-server-2022-license-standard-edition-36-cores',
  'windows-server-2022-license-standard-edition-38-cores': 'windows-server-2022-license-standard-edition-38-cores',
  'windows-server-2022-license-standard-edition-40-cores': 'windows-server-2022-license-standard-edition-40-cores',
  'windows-server-2022-license-standard-edition-42-cores': 'windows-server-2022-license-standard-edition-42-cores',
  'windows-server-2022-license-standard-edition-44-cores': 'windows-server-2022-license-standard-edition-44-cores',
  'windows-server-2022-license-standard-edition-46-cores': 'windows-server-2022-license-standard-edition-46-cores',
  'windows-server-2022-license-standard-edition-48-cores': 'windows-server-2022-license-standard-edition-48-cores',
  'windows-server-2022-license-standard-edition-50-cores': 'windows-server-2022-license-standard-edition-50-cores',
  'windows-server-2022-license-standard-edition-512-cores': 'windows-server-2022-license-standard-edition-512-cores',
  'windows-server-2022-license-standard-edition-52-cores': 'windows-server-2022-license-standard-edition-52-cores',
  'windows-server-2022-license-standard-edition-54-cores': 'windows-server-2022-license-standard-edition-54-cores',
  'windows-server-2022-license-standard-edition-56-cores': 'windows-server-2022-license-standard-edition-56-cores',
  'windows-server-2022-license-standard-edition-58-cores': 'windows-server-2022-license-standard-edition-58-cores',
  'windows-server-2022-license-standard-edition-60-cores': 'windows-server-2022-license-standard-edition-60-cores',
  'windows-server-2022-license-standard-edition-62-cores': 'windows-server-2022-license-standard-edition-62-cores',
  'windows-server-2022-license-standard-edition-64-cores': 'windows-server-2022-license-standard-edition-64-cores',
  'windows-server-2022-license-standard-edition-8-cores': 'windows-server-2022-license-standard-edition-8-cores',
  'windows-server-2022-license-standard-edition-96-cores': 'windows-server-2022-license-standard-edition-96-cores',
} as const;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * Available VirtualNetworkInterface modes
 */
export type DedicatedVirtualNetworkInterfaceVirtualNetworkInterfaceModeEnumOVH = typeof DedicatedVirtualNetworkInterfaceVirtualNetworkInterfaceModeEnumOVH[keyof typeof DedicatedVirtualNetworkInterfaceVirtualNetworkInterfaceModeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedVirtualNetworkInterfaceVirtualNetworkInterfaceModeEnumOVH = {
  public: 'public',
  public_aggregation: 'public_aggregation',
  vrack: 'vrack',
  vrack_aggregation: 'vrack_aggregation',
} as const;

/**
 * Your VirtualNetworkInterface
 */
export interface DedicatedVirtualNetworkInterfaceVirtualNetworkInterfaceOVH {
  /** VirtualNetworkInterface activation state */
  readonly enabled?: boolean;
  /** VirtualNetworkInterface mode */
  mode?: DedicatedVirtualNetworkInterfaceVirtualNetworkInterfaceModeEnumOVH;
  /** User defined VirtualNetworkInterface name */
  name?: string;
  /** NetworkInterfaceControllers bound to this VirtualNetworkInterface */
  readonly networkInterfaceController?: readonly MacAddressOVH[];
  /** Server bound to this VirtualNetworkInterface */
  readonly serverName?: string;
  /** VirtualNetworkInterface unique id */
  readonly uuid?: string;
  /**
   * vRack name
   * @nullable
   */
  readonly vrack?: string | null;
}

/**
 * Task statuses
 */
export type DedicatedServerTaskStatusEnumOVH = typeof DedicatedServerTaskStatusEnumOVH[keyof typeof DedicatedServerTaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerTaskStatusEnumOVH = {
  cancelled: 'cancelled',
  customerError: 'customerError',
  doing: 'doing',
  done: 'done',
  init: 'init',
  ovhError: 'ovhError',
  todo: 'todo',
} as const;

/**
 * Task operation types
 */
export type DedicatedServerTaskFunctionEnumOVH = typeof DedicatedServerTaskFunctionEnumOVH[keyof typeof DedicatedServerTaskFunctionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerTaskFunctionEnumOVH = {
  INFRA_002_VirtualNetworkInterface: 'INFRA_002_VirtualNetworkInterface',
  INFRA_002_VirtualNetworkInterface_group: 'INFRA_002_VirtualNetworkInterface_group',
  INFRA_002_VirtualNetworkInterface_ungroup: 'INFRA_002_VirtualNetworkInterface_ungroup',
  INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_group: 'INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_group',
  INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_ungroup: 'INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_ungroup',
  INFRA_ONE_NETWORK_VirtualNetworkInterface_group: 'INFRA_ONE_NETWORK_VirtualNetworkInterface_group',
  INFRA_ONE_NETWORK_VirtualNetworkInterface_ungroup: 'INFRA_ONE_NETWORK_VirtualNetworkInterface_ungroup',
  addVirtualMac: 'addVirtualMac',
  addWindowSplaFromExistingSerial: 'addWindowSplaFromExistingSerial',
  applyBackupFtpAcls: 'applyBackupFtpAcls',
  applyBackupFtpQuota: 'applyBackupFtpQuota',
  bypassAntiDDosGame: 'bypassAntiDDosGame',
  changePasswordBackupFTP: 'changePasswordBackupFTP',
  changeRipeOrg: 'changeRipeOrg',
  checkAndReleaseIp: 'checkAndReleaseIp',
  createBackupFTP: 'createBackupFTP',
  createOrUpdateRipeOrg: 'createOrUpdateRipeOrg',
  createPrivateNetwork: 'createPrivateNetwork',
  disableFirewall: 'disableFirewall',
  enableFirewall: 'enableFirewall',
  genericMoveFloatingIp: 'genericMoveFloatingIp',
  hardReboot: 'hardReboot',
  hardware_update: 'hardware_update',
  'ipmi/configureSGX': 'ipmi/configureSGX',
  migrateBackupFTP: 'migrateBackupFTP',
  moveFloatingIp: 'moveFloatingIp',
  moveVirtualMac: 'moveVirtualMac',
  reagregateBlock: 'reagregateBlock',
  rebootPower8To: 'rebootPower8To',
  reinstallServer: 'reinstallServer',
  releaseIp: 'releaseIp',
  removeBackupFTP: 'removeBackupFTP',
  removeVirtualMac: 'removeVirtualMac',
  requestAccessIPMI: 'requestAccessIPMI',
  resetIPMI: 'resetIPMI',
  resetIPMISession: 'resetIPMISession',
  testIPMIhttp: 'testIPMIhttp',
  testIPMIpassword: 'testIPMIpassword',
  testIPMIping: 'testIPMIping',
  virtualMacAdd: 'virtualMacAdd',
  virtualMacDelete: 'virtualMacDelete',
} as const;

/**
 * Dedicated server task
 */
export interface DedicatedServerTaskResponseOVH {
  /** Details of this task */
  readonly comment?: string;
  /**
   * Task Completion date
   * @nullable
   */
  readonly doneDate?: string | null;
  /** Task operation type */
  readonly function?: DedicatedServerTaskFunctionEnumOVH;
  /** Task Creation date */
  readonly startDate?: string;
  /** Task status */
  readonly status?: DedicatedServerTaskStatusEnumOVH;
  /** Task id */
  readonly taskId?: number;
}

/**
 * SPLA licenses management
 */
export interface DedicatedServerSplaOVH {
  /** License id */
  readonly id?: number;
  /** Last update timestamp */
  readonly lastUpdate?: string;
  /** License serial number */
  serialNumber?: string;
  /** Status of license */
  readonly status?: DedicatedServerSplaStatusEnumOVH;
  /** License type */
  readonly type?: DedicatedServerSplaTypeEnumOVH;
}

/**
 * ZFS-specific parameters
 */
export interface DedicatedServerReinstallStoragePartitioningLayoutExtrasZpOVH {
  /** zpool name (generated automatically if not specified, note that multiple ZFS partitions with same zpool names will be configured as multiple datasets belonging to the same zpool if compatible) */
  name?: string;
}

/**
 * LVM-specific parameters
 */
export interface DedicatedServerReinstallStoragePartitioningLayoutExtrasLvOVH {
  /** Logical volume name */
  name?: string;
}

/**
 * Software raid types
 */
export type DedicatedServerReinstallStoragePartitioningLayoutRaidLevelEnumOVH = typeof DedicatedServerReinstallStoragePartitioningLayoutRaidLevelEnumOVH[keyof typeof DedicatedServerReinstallStoragePartitioningLayoutRaidLevelEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerReinstallStoragePartitioningLayoutRaidLevelEnumOVH = {
  NUMBER_0: 0,
  NUMBER_1: 1,
  NUMBER_5: 5,
  NUMBER_6: 6,
  NUMBER_7: 7,
  NUMBER_10: 10,
} as const;

/**
 * File system types
 */
export type DedicatedServerReinstallStoragePartitioningLayoutFileSystemEnumOVH = typeof DedicatedServerReinstallStoragePartitioningLayoutFileSystemEnumOVH[keyof typeof DedicatedServerReinstallStoragePartitioningLayoutFileSystemEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerReinstallStoragePartitioningLayoutFileSystemEnumOVH = {
  btrfs: 'btrfs',
  ext3: 'ext3',
  ext4: 'ext4',
  fat16: 'fat16',
  none: 'none',
  ntfs: 'ntfs',
  reiserfs: 'reiserfs',
  swap: 'swap',
  ufs: 'ufs',
  vmfs5: 'vmfs5',
  vmfs6: 'vmfs6',
  vmfsl: 'vmfsl',
  xfs: 'xfs',
  zfs: 'zfs',
} as const;

/**
 * Partition extras parameters
 */
export interface DedicatedServerReinstallStoragePartitioningLayoutExtrasOVH {
  /** LVM-specific parameters */
  lv?: DedicatedServerReinstallStoragePartitioningLayoutExtrasLvOVH;
  /** ZFS-specific parameters */
  zp?: DedicatedServerReinstallStoragePartitioningLayoutExtrasZpOVH;
}

/**
 * Custom partition parameters
 */
export interface DedicatedServerReinstallStoragePartitioningLayoutOVH {
  /** Partition extras parameters */
  extras?: DedicatedServerReinstallStoragePartitioningLayoutExtrasOVH;
  /** File system type */
  fileSystem: DedicatedServerReinstallStoragePartitioningLayoutFileSystemEnumOVH;
  /** Mount point */
  mountPoint: string;
  /** Software raid type (default is 1) */
  raidLevel?: DedicatedServerReinstallStoragePartitioningLayoutRaidLevelEnumOVH;
  /** Partition size in MiB (default value is 0 which means to fill the disk with that partition) */
  size?: number;
}

/**
 * Hardware raid types
 */
export type DedicatedServerReinstallStorageHardwareRaidRaidLevelEnumOVH = typeof DedicatedServerReinstallStorageHardwareRaidRaidLevelEnumOVH[keyof typeof DedicatedServerReinstallStorageHardwareRaidRaidLevelEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerReinstallStorageHardwareRaidRaidLevelEnumOVH = {
  NUMBER_0: 0,
  NUMBER_1: 1,
  NUMBER_5: 5,
  NUMBER_6: 6,
  NUMBER_10: 10,
  NUMBER_50: 50,
  NUMBER_60: 60,
} as const;

/**
 * Partitioning configuration
 */
export interface DedicatedServerReinstallStoragePartitioningOVH {
  /** Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default) */
  disks?: number;
  /** Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme) */
  layout?: DedicatedServerReinstallStoragePartitioningLayoutOVH[];
  /** Partitioning scheme (if applicable with selected operating system) */
  schemeName?: string;
}

/**
 * Hardware raid type (default is 1, null means JBOD mode)
 * @nullable
 */
export type DedicatedServerReinstallStorageHardwareRaidOVHRaidLevel = DedicatedServerReinstallStorageHardwareRaidRaidLevelEnumOVH | null;

/**
 * Hardware Raid configuration
 */
export interface DedicatedServerReinstallStorageHardwareRaidOVH {
  /** Number of arrays (default is 1) */
  arrays?: number;
  /** Total number of disks in the disk group involved in the hardware raid configuration (all disks of the disk group by default) */
  disks?: number;
  /**
   * Hardware raid type (default is 1, null means JBOD mode)
   * @nullable
   */
  raidLevel?: DedicatedServerReinstallStorageHardwareRaidOVHRaidLevel;
  /** Number of disks in the disk group involved in the spare (default is 0) */
  spares?: number;
}

/**
 * Post-Installation Script File Extension
 */
export type DedicatedServerReinstallCustomizationsPostInstallationScriptExtensionEnumOVH = typeof DedicatedServerReinstallCustomizationsPostInstallationScriptExtensionEnumOVH[keyof typeof DedicatedServerReinstallCustomizationsPostInstallationScriptExtensionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerReinstallCustomizationsPostInstallationScriptExtensionEnumOVH = {
  cmd: 'cmd',
  ps1: 'ps1',
} as const;

/**
 * Display Language
 */
export type DedicatedServerReinstallCustomizationsLanguageEnumOVH = typeof DedicatedServerReinstallCustomizationsLanguageEnumOVH[keyof typeof DedicatedServerReinstallCustomizationsLanguageEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerReinstallCustomizationsLanguageEnumOVH = {
  'cs-cz': 'cs-cz',
  'de-de': 'de-de',
  'en-us': 'en-us',
  'es-es': 'es-es',
  'fr-fr': 'fr-fr',
  'it-it': 'it-it',
  'nl-nl': 'nl-nl',
  'pl-pl': 'pl-pl',
  'pt-pt': 'pt-pt',
} as const;

/**
 * Image Type
 */
export type DedicatedServerReinstallCustomizationsImageTypeEnumOVH = typeof DedicatedServerReinstallCustomizationsImageTypeEnumOVH[keyof typeof DedicatedServerReinstallCustomizationsImageTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerReinstallCustomizationsImageTypeEnumOVH = {
  qcow2: 'qcow2',
  raw: 'raw',
} as const;

/**
 * Checksum type
 */
export type DedicatedServerReinstallCustomizationsImageCheckSumTypeEnumOVH = typeof DedicatedServerReinstallCustomizationsImageCheckSumTypeEnumOVH[keyof typeof DedicatedServerReinstallCustomizationsImageCheckSumTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerReinstallCustomizationsImageCheckSumTypeEnumOVH = {
  md5: 'md5',
  sha1: 'sha1',
  sha256: 'sha256',
  sha512: 'sha512',
} as const;

/**
 * OS reinstallation storage configuration
 */
export interface DedicatedServerReinstallStorageOVH {
  /** Disk group id (default is 0, meaning automatic) */
  diskGroupId?: number;
  /** Hardware Raid configurations */
  hardwareRaid?: DedicatedServerReinstallStorageHardwareRaidOVH[];
  /** Partitioning configuration */
  partitioning?: DedicatedServerReinstallStoragePartitioningOVH;
}

/**
 * Image HTTP Headers
 */
export type DedicatedServerReinstallCustomizationsOVHHttpHeaders = {[key: string]: string};

/**
 * OS reinstallation customizations
 */
export interface DedicatedServerReinstallCustomizationsOVH {
  /** Config Drive UserData */
  configDriveUserData?: string;
  /** Custom hostname */
  hostname?: string;
  /** Image HTTP Headers */
  httpHeaders?: DedicatedServerReinstallCustomizationsOVHHttpHeaders;
  /** Image checksum */
  imageCheckSum?: string;
  /** Checksum type */
  imageCheckSumType?: DedicatedServerReinstallCustomizationsImageCheckSumTypeEnumOVH;
  /** Image Type */
  imageType?: DedicatedServerReinstallCustomizationsImageTypeEnumOVH;
  /** Image URL */
  imageURL?: string;
  /** Display Language */
  language?: DedicatedServerReinstallCustomizationsLanguageEnumOVH;
  /** Post-Installation Script */
  postInstallationScript?: string;
  /** Post-Installation Script File Extension */
  postInstallationScriptExtension?: DedicatedServerReinstallCustomizationsPostInstallationScriptExtensionEnumOVH;
  /** SSH Public Key */
  sshKey?: string;
}

/**
 * Available boot options
 */
export interface DedicatedServerNetbootOptionOVH {
  /** The option of this boot */
  readonly option?: DedicatedServerBootOptionEnumOVH;
  /** the value of this option */
  readonly value?: string;
}

/**
 * KVM access ip
 * @nullable
 */
export type DedicatedServerKvmOVHIp = Ipv4OVH | null;

/**
 * Physical KVM
 */
export interface DedicatedServerKvmOVH {
  /** KVM expiration date */
  readonly expiration?: string;
  /**
   * KVM access ip
   * @nullable
   */
  readonly ip?: DedicatedServerKvmOVHIp;
  /** KVM hostname */
  readonly name?: string;
}

/**
 * A structure describing the information related to Openstack to reach the container.
 */
export interface DedicatedServerBackupBackupSwiftOVH {
  /**
   * Auth url.
   * @nullable
   */
  authUrl?: string | null;
  /**
   * Openstack password.
   * @nullable
   */
  password?: string | null;
  /**
   * Openstack username to use swift.
   * @nullable
   */
  username?: string | null;
}

/**
 * Possible values for backup status code
 */
export type DedicatedServerBackupBackupStatusCodeEnumOVH = typeof DedicatedServerBackupBackupStatusCodeEnumOVH[keyof typeof DedicatedServerBackupBackupStatusCodeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerBackupBackupStatusCodeEnumOVH = {
  DELETING: 'DELETING',
  ERROR: 'ERROR',
  OK: 'OK',
  SUSPENDED: 'SUSPENDED',
  SUSPENDING: 'SUSPENDING',
  UNKNOWN: 'UNKNOWN',
  WAITING_AGREEMENTS_VALIDATION: 'WAITING_AGREEMENTS_VALIDATION',
} as const;

/**
 * A structure describing the status of your backup
 */
export interface DedicatedServerBackupBackupStatusOVH {
  /** Status code */
  code?: DedicatedServerBackupBackupStatusCodeEnumOVH;
  /**
   * Status code reason (when not ok)
   * @nullable
   */
  reason?: string | null;
}

/**
 * A structure describing the SFTP access to a container
 */
export interface DedicatedServerBackupBackupSftpOVH {
  /**
   * Sftp password.
   * @nullable
   */
  password?: string | null;
  /**
   * Url
   * @nullable
   */
  url?: string | null;
  /**
   * Username
   * @nullable
   */
  username?: string | null;
}

/**
 * Volume usage.
 * @nullable
 */
export type DedicatedServerBackupBackupQuotaOVHStorageUsed = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Container max size.
 * @nullable
 */
export type DedicatedServerBackupBackupQuotaOVHMaxStorage = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Volume r/w bandwidth limit: read/write volume offered per month on the container.
 * @nullable
 */
export type DedicatedServerBackupBackupQuotaOVHMaxBandwidth = ComplexTypeUnitAndValueLongOVH | null;

/**
 * A structure describing quota associated to the current container
 */
export interface DedicatedServerBackupBackupQuotaOVH {
  /**
   * Volume r/w bandwidth limit: read/write volume offered per month on the container.
   * @nullable
   */
  maxBandwidth?: DedicatedServerBackupBackupQuotaOVHMaxBandwidth;
  /**
   * Container max size.
   * @nullable
   */
  maxStorage?: DedicatedServerBackupBackupQuotaOVHMaxStorage;
  /**
   * Volume usage.
   * @nullable
   */
  storageUsed?: DedicatedServerBackupBackupQuotaOVHStorageUsed;
  /**
   * Volume usage in percent
   * @nullable
   */
  usagePercent?: number | null;
}

/**
 * Cloud project struct.
 */
export interface DedicatedServerBackupBackupProjectOVH {
  /**
   * Project description.
   * @nullable
   */
  description?: string | null;
  /**
   * Project id.
   * @nullable
   */
  projectId?: string | null;
}

/**
 * A structure describing regenerated passwords
 */
export interface DedicatedServerBackupBackupPasswordOVH {
  /**
   * Password to reach the archive container through the sftp gw.
   * @nullable
   */
  sftpArchive?: string | null;
  /**
   * Password to reach the storage container through the sftp gw.
   * @nullable
   */
  sftpStorage?: string | null;
  /**
   * Password to reach the archive container through swift.
   * @nullable
   */
  swiftArchive?: string | null;
  /**
   * Password to reach the storage container through swift.
   * @nullable
   */
  swiftStorage?: string | null;
}

/**
 * Storage container max size.
 * @nullable
 */
export type DedicatedServerBackupBackupOfferOVHMaxStorage = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Storage volume r/w bandwidth limit: read/write volume offered per month on the container.
 * @nullable
 */
export type DedicatedServerBackupBackupOfferOVHMaxBandwidthStorage = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Archive volume r/w bandwidth limit: read/write volume offered per month on the container.
 * @nullable
 */
export type DedicatedServerBackupBackupOfferOVHMaxBandwidthArchive = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Archive container max size.
 * @nullable
 */
export type DedicatedServerBackupBackupOfferOVHMaxArchive = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Backup cloud offer description for a dedicated server
 */
export interface DedicatedServerBackupBackupOfferOVH {
  /**
   * Archive container max size.
   * @nullable
   */
  maxArchive?: DedicatedServerBackupBackupOfferOVHMaxArchive;
  /**
   * Archive volume r/w bandwidth limit: read/write volume offered per month on the container.
   * @nullable
   */
  maxBandwidthArchive?: DedicatedServerBackupBackupOfferOVHMaxBandwidthArchive;
  /**
   * Storage volume r/w bandwidth limit: read/write volume offered per month on the container.
   * @nullable
   */
  maxBandwidthStorage?: DedicatedServerBackupBackupOfferOVHMaxBandwidthStorage;
  /**
   * Storage container max size.
   * @nullable
   */
  maxStorage?: DedicatedServerBackupBackupOfferOVHMaxStorage;
}

/**
 * Swift related information to reach the container
 * @nullable
 */
export type DedicatedServerBackupBackupContainerOVHSwift = DedicatedServerBackupBackupSwiftOVH | null;

/**
 * Sftp connection info
 * @nullable
 */
export type DedicatedServerBackupBackupContainerOVHSftp = DedicatedServerBackupBackupSftpOVH | null;

/**
 * Quota on the current container
 * @nullable
 */
export type DedicatedServerBackupBackupContainerOVHQuota = DedicatedServerBackupBackupQuotaOVH | null;

/**
 * /cloud project which the container belongs to.
 * @nullable
 */
export type DedicatedServerBackupBackupContainerOVHCloudProject = DedicatedServerBackupBackupProjectOVH | null;

/**
 * A structure describing informations about the backup cloud feature
 */
export interface DedicatedServerBackupBackupContainerOVH {
  /**
   * /cloud project which the container belongs to.
   * @nullable
   */
  cloudProject?: DedicatedServerBackupBackupContainerOVHCloudProject;
  /**
   * Container id (can also be used to retrieve the resource in the /cloud api).
   * @nullable
   */
  id?: string | null;
  /**
   * Container name.
   * @nullable
   */
  name?: string | null;
  /**
   * Quota on the current container
   * @nullable
   */
  quota?: DedicatedServerBackupBackupContainerOVHQuota;
  /**
   * The cloud region which the container belongs to.
   * @nullable
   */
  region?: string | null;
  /**
   * Sftp connection info
   * @nullable
   */
  sftp?: DedicatedServerBackupBackupContainerOVHSftp;
  /**
   * Swift related information to reach the container
   * @nullable
   */
  swift?: DedicatedServerBackupBackupContainerOVHSwift;
}

/**
 * Distinct type of virtual mac
 */
export type DedicatedServerVmacTypeEnumOVH = typeof DedicatedServerVmacTypeEnumOVH[keyof typeof DedicatedServerVmacTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerVmacTypeEnumOVH = {
  ovh: 'ovh',
  vmware: 'vmware',
} as const;

/**
 * A structure describing VMAC Infos for this dedicated server
 */
export interface DedicatedServerVmacDetailsOVH {
  /** Server is compatible vmac or not */
  supported?: boolean;
}

/**
 * Your VirtualNetworkInterface
 */
export interface DedicatedServerVirtualNetworkInterfaceOVH {
  /** VirtualNetworkInterface activation state */
  readonly enabled?: boolean;
  /** Available VirtualNetworkInterface modes */
  readonly mode?: DedicatedVirtualNetworkInterfaceVirtualNetworkInterfaceModeEnumOVH;
  /** User defined VirtualNetworkInterface name */
  readonly name?: string;
  /** NetworkInterfaceControllers bound to this VirtualNetworkInterface */
  readonly networkInterfaceController?: readonly string[];
  /** Server bound to this VirtualNetworkInterface */
  readonly serverName?: string;
  /** VirtualNetworkInterface unique id */
  readonly uuid?: string;
  /**
   * vRack name
   * @nullable
   */
  readonly vrack?: string | null;
}

/**
 *  ip address linked with this virtual mac address
 */
export interface DedicatedServerVirtualMacManagementOVH {
  /** IP address */
  readonly ipAddress?: Ipv4OVH;
  /** Friendly name of your Virtual Machine behind this IP/MAC */
  readonly virtualMachineName?: string;
}

/**
 * A virtual MAC address associated to one or more IPs
 */
export interface DedicatedServerVirtualMacOVH {
  /** Virtual MAC address in 00:00:00:00:00:00 format */
  readonly macAddress?: string;
  /** Virtual MAC address type */
  readonly type?: DedicatedServerVmacTypeEnumOVH;
}

/**
 * Which option is required to order an USB key
 * @nullable
 */
export type DedicatedServerUsbKeyOrderableDetailsOVHOptionRequired = DedicatedServerOptionRequiredEnumOVH | null;

/**
 *  Different USB key capacity in gigabytes
 */
export type DedicatedServerUsbKeyCapacityEnumOVH = typeof DedicatedServerUsbKeyCapacityEnumOVH[keyof typeof DedicatedServerUsbKeyCapacityEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerUsbKeyCapacityEnumOVH = {
  NUMBER_16: 16,
  NUMBER_32: 32,
  NUMBER_64: 64,
  NUMBER_128: 128,
  NUMBER_256: 256,
} as const;

/**
 * A structure describing informations about orderable USB keys
 */
export interface DedicatedServerUsbKeyOrderableDetailsOVH {
  /** Orderable USB keys capacity in gigabytes */
  capacity?: DedicatedServerUsbKeyCapacityEnumOVH[];
  /** Number of USB keys that can be ordered for this server */
  number?: number;
  /**
   * Which option is required to order an USB key
   * @nullable
   */
  optionRequired?: DedicatedServerUsbKeyOrderableDetailsOVHOptionRequired;
  /** Is USB keys orderable for this server */
  orderable?: boolean;
}

/**
 *  traffic orderable 
 */
export type DedicatedServerTrafficOrderEnumOVH = typeof DedicatedServerTrafficOrderEnumOVH[keyof typeof DedicatedServerTrafficOrderEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerTrafficOrderEnumOVH = {
  '100Mbps-Unlimited': '100Mbps-Unlimited',
  '250Mbps-Unlimited': '250Mbps-Unlimited',
  '500Mbps-Unlimited': '500Mbps-Unlimited',
} as const;

/**
 * A structure describing informations bandwidth orderable for this dedicated server
 */
export interface DedicatedServerTrafficOrderableOVH {
  /** Is traffic orderable for this server */
  orderable?: boolean;
  /**
   * traffic orderable
   * @nullable
   */
  traffic?: DedicatedServerTrafficOrderEnumOVH[] | null;
}

/**
 * Monthly output traffic consumed this month
 * @nullable
 */
export type DedicatedServerTrafficDetailsOVHOutputQuotaUsed = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Monthly output traffic quota allowed
 * @nullable
 */
export type DedicatedServerTrafficDetailsOVHOutputQuotaSize = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Monthly input traffic consumed this month
 * @nullable
 */
export type DedicatedServerTrafficDetailsOVHInputQuotaUsed = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Monthly input traffic quota allowed
 * @nullable
 */
export type DedicatedServerTrafficDetailsOVHInputQuotaSize = ComplexTypeUnitAndValueLongOVH | null;

/**
 * A structure describing traffic informations about this dedicated server
 */
export interface DedicatedServerTrafficDetailsOVH {
  /**
   * Monthly input traffic quota allowed
   * @nullable
   */
  inputQuotaSize?: DedicatedServerTrafficDetailsOVHInputQuotaSize;
  /**
   * Monthly input traffic consumed this month
   * @nullable
   */
  inputQuotaUsed?: DedicatedServerTrafficDetailsOVHInputQuotaUsed;
  /**
   * Is bandwidth throttleted for being over quota
   * @nullable
   */
  isThrottled?: boolean | null;
  /**
   * Monthly output traffic quota allowed
   * @nullable
   */
  outputQuotaSize?: DedicatedServerTrafficDetailsOVHOutputQuotaSize;
  /**
   * Monthly output traffic consumed this month
   * @nullable
   */
  outputQuotaUsed?: DedicatedServerTrafficDetailsOVHOutputQuotaUsed;
  /**
   * Next reset quota date for traffic counter
   * @nullable
   */
  resetQuotaDate?: string | null;
}

/**
 * Server tasks
 */
export interface DedicatedServerTaskOVH {
  /**
   * Details of this task
   * @nullable
   */
  readonly comment?: string | null;
  /**
   * Completion date
   * @nullable
   */
  readonly doneDate?: string | null;
  /** Function name */
  readonly function?: DedicatedTaskFunctionEnumOVH;
  /**
   * last update
   * @nullable
   */
  readonly lastUpdate?: string | null;
  /** Whether this task need to be scheduled or not */
  readonly needSchedule?: boolean;
  /**
   * Extra information about this task
   * @nullable
   */
  readonly note?: string | null;
  /**
   * ID of the planned intervention for this task
   * @nullable
   */
  readonly plannedInterventionId?: number | null;
  /** Task Creation date */
  readonly startDate?: string;
  /** Task status */
  readonly status?: DedicatedTaskStatusEnumOVH;
  /**
   * Task result tags output
   * @nullable
   */
  readonly tags?: readonly ComplexTypeSafeKeyValueCanBeNullStringOVH[] | null;
  /** the id of the task */
  readonly taskId?: number;
  /**
   * Reference of the thread on the support tool
   * @nullable
   */
  readonly ticketReference?: string | null;
}

/**
 * A structure describing switching informations about this dedicated server
 */
export interface DedicatedServerSwitchingDetailsOVH {
  /**
   * Switch name
   * @nullable
   */
  name?: string | null;
}

/**
 * Hdd replace support request details. 
 */
export interface DedicatedServerSupportReplaceHddInfoOVH {
  /** Disk serial number */
  disk_serial?: string;
  /**
   * Disk slotId (if any)
   * @nullable
   */
  slot_id?: number | null;
}

/**
 * distincts support level
 */
export type DedicatedServerSupportLevelOrderableEnumOVH = typeof DedicatedServerSupportLevelOrderableEnumOVH[keyof typeof DedicatedServerSupportLevelOrderableEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerSupportLevelOrderableEnumOVH = {
  critical: 'critical',
  fastpath: 'fastpath',
  gs: 'gs',
} as const;

/**
 * A structure describing informations support level orderable for this dedicated server
 */
export interface DedicatedServerSupportLevelOrderableOVH {
  /**
   * Support level  orderable
   * @nullable
   */
  levels?: DedicatedServerSupportLevelOrderableEnumOVH[] | null;
  /** Is a support level is orderable for this server */
  orderable?: boolean;
}

/**
 * distincts support level
 */
export type DedicatedServerSupportLevelEnumOVH = typeof DedicatedServerSupportLevelEnumOVH[keyof typeof DedicatedServerSupportLevelEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerSupportLevelEnumOVH = {
  critical: 'critical',
  fastpath: 'fastpath',
  gs: 'gs',
  pro: 'pro',
} as const;

/**
 * All states a Dedicated can in
 */
export type DedicatedServerStateEnumOVH = typeof DedicatedServerStateEnumOVH[keyof typeof DedicatedServerStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerStateEnumOVH = {
  error: 'error',
  hacked: 'hacked',
  hackedBlocked: 'hackedBlocked',
  ok: 'ok',
} as const;

/**
 * SPLA license type
 */
export type DedicatedServerSplaTypeEnumOVH = typeof DedicatedServerSplaTypeEnumOVH[keyof typeof DedicatedServerSplaTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerSplaTypeEnumOVH = {
  os: 'os',
  sqlstd: 'sqlstd',
  sqlweb: 'sqlweb',
} as const;

/**
 * SPLA license status
 */
export type DedicatedServerSplaStatusEnumOVH = typeof DedicatedServerSplaStatusEnumOVH[keyof typeof DedicatedServerSplaStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerSplaStatusEnumOVH = {
  terminated: 'terminated',
  used: 'used',
  waitingToCheck: 'waitingToCheck',
} as const;

/**
 * Bandwidth busrt capacity
 * @nullable
 */
export type DedicatedServerServerBurstOVHCapacity = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Server bandwidth burst details
 */
export interface DedicatedServerServerBurstOVH {
  /**
   * Bandwidth busrt capacity
   * @nullable
   */
  readonly capacity?: DedicatedServerServerBurstOVHCapacity;
  /** indicates whether burstable bandwidth is currently active, allowing it to temporarily exceed the normally included bandwidth.OvhToInternet amount, within the limits indicated by the burst.capacity item. It can also be inactiveLocked when temporarily disabled due to overuse, capping it to the included non-burstable bandwidth capacity of bandwidth.OvhToInternet */
  status?: DedicatedServerBurstStatusEnumOVH;
}

/**
 * Define a date to perform the upgrade intervention
 */
export interface DedicatedServerScheduleUpgradePayloadOVH {
  /** A backup has been performed by the user prior to the intervention date */
  hasPerformedBackup: boolean;
  /** Wanted beginning date for the upgrade intervention */
  wantedBeginningDate: string;
}

/**
 * Server network
 * @nullable
 */
export type DedicatedServerRoutingDetailsIpv6OVHNetwork = Ipv6BlockOVH | null;

/**
 * Server main IP
 * @nullable
 */
export type DedicatedServerRoutingDetailsIpv6OVHIp = Ipv6BlockOVH | null;

/**
 * Server gateway
 * @nullable
 */
export type DedicatedServerRoutingDetailsIpv6OVHGateway = Ipv6OVH | null;

/**
 * A structure describing IPv6 routing informations about this dedicated server
 */
export interface DedicatedServerRoutingDetailsIpv6OVH {
  /**
   * Server gateway
   * @nullable
   */
  gateway?: DedicatedServerRoutingDetailsIpv6OVHGateway;
  /**
   * Server main IP
   * @nullable
   */
  ip?: DedicatedServerRoutingDetailsIpv6OVHIp;
  /**
   * Server network
   * @nullable
   */
  network?: DedicatedServerRoutingDetailsIpv6OVHNetwork;
}

/**
 * Server network
 * @nullable
 */
export type DedicatedServerRoutingDetailsIpv4OVHNetwork = Ipv4BlockOVH | null;

/**
 * Server main IP
 * @nullable
 */
export type DedicatedServerRoutingDetailsIpv4OVHIp = Ipv4OVH | null;

/**
 * Server gateway
 * @nullable
 */
export type DedicatedServerRoutingDetailsIpv4OVHGateway = Ipv4OVH | null;

/**
 * A structure describing IPv4 routing informations about this dedicated server
 */
export interface DedicatedServerRoutingDetailsIpv4OVH {
  /**
   * Server gateway
   * @nullable
   */
  gateway?: DedicatedServerRoutingDetailsIpv4OVHGateway;
  /**
   * Server main IP
   * @nullable
   */
  ip?: DedicatedServerRoutingDetailsIpv4OVHIp;
  /**
   * Server network
   * @nullable
   */
  network?: DedicatedServerRoutingDetailsIpv4OVHNetwork;
}

/**
 * Ipv6 routing details
 * @nullable
 */
export type DedicatedServerRoutingDetailsOVHIpv6 = DedicatedServerRoutingDetailsIpv6OVH | null;

/**
 * Ipv4 routing details
 * @nullable
 */
export type DedicatedServerRoutingDetailsOVHIpv4 = DedicatedServerRoutingDetailsIpv4OVH | null;

/**
 * A structure describing routing informations about this dedicated server
 */
export interface DedicatedServerRoutingDetailsOVH {
  /**
   * Ipv4 routing details
   * @nullable
   */
  ipv4?: DedicatedServerRoutingDetailsOVHIpv4;
  /**
   * Ipv6 routing details
   * @nullable
   */
  ipv6?: DedicatedServerRoutingDetailsOVHIpv6;
}

/**
 * Arbitrary properties to pass to cloud-init's config drive datasource
 */
export type DedicatedServerReinstallOVHProperties = {[key: string]: string};

/**
 * OS reinstallation payload
 */
export interface DedicatedServerReinstallOVH {
  /** OS reinstallation customizations */
  customizations?: DedicatedServerReinstallCustomizationsOVH;
  /** Operating System name to install (available values for this server can be retrieved using GET /dedicated/server/{serviceName}/install/compatibleTemplates) */
  operatingSystem: string;
  /** Arbitrary properties to pass to cloud-init's config drive datasource */
  properties?: DedicatedServerReinstallOVHProperties;
  /** OS reinstallation storage configurations */
  storage?: DedicatedServerReinstallStorageOVH[];
}

/**
 * Power states of a Dedicated
 */
export type DedicatedServerPowerStateEnumOVH = typeof DedicatedServerPowerStateEnumOVH[keyof typeof DedicatedServerPowerStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerPowerStateEnumOVH = {
  poweroff: 'poweroff',
  poweron: 'poweron',
} as const;

/**
 * Planned intervention on the server
 */
export interface DedicatedServerPlannedInterventionOVH {
  /** Expected end date for this intervention */
  readonly expectedEndDate?: string;
  /** ID of the intervention */
  readonly id?: number;
  /** Status of the intervention */
  readonly status?: DedicatedPlannedInterventionStatusEnumOVH;
  /** Operation purpose */
  readonly type?: DedicatedPlannedInterventionTypeEnumOVH;
  /** Wanted start date for this intervention */
  readonly wantedStartDate?: string;
}

/**
 * Dedicated server orderable features
 */
export type DedicatedServerOrderableSysFeatureEnumOVH = typeof DedicatedServerOrderableSysFeatureEnumOVH[keyof typeof DedicatedServerOrderableSysFeatureEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerOrderableSysFeatureEnumOVH = {
  backupProtocol: 'backupProtocol',
  monitoring: 'monitoring',
} as const;

/**
 * All states a dedicated server option can be in
 */
export type DedicatedServerOptionStateEnumOVH = typeof DedicatedServerOptionStateEnumOVH[keyof typeof DedicatedServerOptionStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerOptionStateEnumOVH = {
  released: 'released',
  subscribed: 'subscribed',
} as const;

/**
 * Required option
 */
export type DedicatedServerOptionRequiredEnumOVH = typeof DedicatedServerOptionRequiredEnumOVH[keyof typeof DedicatedServerOptionRequiredEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerOptionRequiredEnumOVH = {
  professionalUse: 'professionalUse',
} as const;

/**
 * All options a dedicated server can have and release
 */
export type DedicatedServerOptionEnumOVH = typeof DedicatedServerOptionEnumOVH[keyof typeof DedicatedServerOptionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerOptionEnumOVH = {
  BACKUPPROTOCOL: 'BACKUPPROTOCOL',
  BANDWIDTH: 'BANDWIDTH',
  BANDWIDTH_VRACK: 'BANDWIDTH_VRACK',
  OLA: 'OLA',
  SGX: 'SGX',
  TRAFFIC: 'TRAFFIC',
  TRAFFIC_DISCOVER: 'TRAFFIC_DISCOVER',
  TUNING: 'TUNING',
  TUNING_FIREWALL: 'TUNING_FIREWALL',
  TUNING_KVM: 'TUNING_KVM',
  USB_KVM_IP: 'USB_KVM_IP',
} as const;

/**
 * Information about the options of a dedicated server
 */
export interface DedicatedServerOptionOVH {
  /** The option name */
  readonly option?: DedicatedServerOptionEnumOVH;
  /** The state of the option */
  readonly state?: DedicatedServerOptionStateEnumOVH;
}

/**
 * Server operations
 */
export interface DedicatedServerOperationOVH {
  /**
   * Details of this task
   * @nullable
   */
  readonly comment?: string | null;
  /**
   * Completion date
   * @nullable
   */
  readonly doneDate?: string | null;
  /** Function name */
  readonly function?: DedicatedOperationFunctionEnumOVH;
  /**
   * Last update
   * @nullable
   */
  readonly lastUpdate?: string | null;
  /** The unique identifier of the operation */
  readonly operationId?: string;
  /** Task Creation date */
  readonly startDate?: string;
  /** Task status */
  readonly status?: DedicatedTaskStatusEnumOVH;
}

/**
 * An enum describing OVH Link Aggregation interface types
 */
export type DedicatedServerOlaInterfaceModeEnumOVH = typeof DedicatedServerOlaInterfaceModeEnumOVH[keyof typeof DedicatedServerOlaInterfaceModeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerOlaInterfaceModeEnumOVH = {
  public: 'public',
  vrack: 'vrack',
} as const;

/**
 * A structure describing OVH Link Aggregation interface configuration
 */
export interface DedicatedServerOlaInterfaceOVH {
  /** Interface aggregation status */
  aggregation?: boolean;
  /** Interface count */
  count?: number;
  /** Interface mode */
  type?: DedicatedServerOlaInterfaceModeEnumOVH;
}

/**
 * A structure describing OVH Link Aggregation available modes
 */
export interface DedicatedServerOlaAvailableModesOVH {
  /** Is it the default configuration of the server */
  default?: boolean;
  /** Interface layout */
  interfaces?: DedicatedServerOlaInterfaceOVH[];
  /** Mode name */
  name?: string;
}

/**
 * A structure describing OVH Link Aggregation available modes for this dedicated server
 */
export interface DedicatedServerOlaDetailsOVH {
  /** Is the OLA feature available */
  available?: boolean;
  /** What modes are supported */
  availableModes?: DedicatedServerOlaAvailableModesOVH[];
  /**
   * (DEPRECATED) What modes are supported
   * @nullable
   */
  supportedModes?: DedicatedVirtualNetworkInterfaceVirtualNetworkInterfaceModeEnumOVH[] | null;
}

/**
 * Network type
 */
export type DedicatedServerNetworkingTypeEnumOVH = typeof DedicatedServerNetworkingTypeEnumOVH[keyof typeof DedicatedServerNetworkingTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerNetworkingTypeEnumOVH = {
  public: 'public',
  vrack: 'vrack',
} as const;

/**
 * Network operation states
 */
export type DedicatedServerNetworkingOperationEnumOVH = typeof DedicatedServerNetworkingOperationEnumOVH[keyof typeof DedicatedServerNetworkingOperationEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerNetworkingOperationEnumOVH = {
  active: 'active',
  deploying: 'deploying',
} as const;

/**
 * Operation status
 * @nullable
 */
export type DedicatedServerNetworkingOVHStatus = DedicatedServerNetworkingOperationEnumOVH | null;

/**
 * Network configuration
 */
export interface DedicatedServerNetworkingOVH {
  /**
   * Operation description
   * @nullable
   */
  readonly description?: string | null;
  /** Interface or interfaces aggregation */
  readonly interfaces?: readonly DedicatedServerInterfacesOVH[];
  /**
   * Operation status
   * @nullable
   */
  readonly status?: DedicatedServerNetworkingOVHStatus;
}

/**
 * vRack details
 * @nullable
 */
export type DedicatedServerNetworkSpecificationsOVHVrack = DedicatedServerBandwidthvRackDetailsOVH | null;

/**
 * Traffic details
 * @nullable
 */
export type DedicatedServerNetworkSpecificationsOVHTraffic = DedicatedServerTrafficDetailsOVH | null;

/**
 * Switching details
 * @nullable
 */
export type DedicatedServerNetworkSpecificationsOVHSwitching = DedicatedServerSwitchingDetailsOVH | null;

/**
 * Routing details
 * @nullable
 */
export type DedicatedServerNetworkSpecificationsOVHRouting = DedicatedServerRoutingDetailsOVH | null;

/**
 * OLA details
 * @nullable
 */
export type DedicatedServerNetworkSpecificationsOVHOla = DedicatedServerOlaDetailsOVH | null;

/**
 * Network connection flow rate
 * @nullable
 */
export type DedicatedServerNetworkSpecificationsOVHConnection = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Bandwidth details
 * @nullable
 */
export type DedicatedServerNetworkSpecificationsOVHBandwidth = DedicatedServerBandwidthDetailsOVH | null;

/**
 * A structure describing network informations about this dedicated server
 */
export interface DedicatedServerNetworkSpecificationsOVH {
  /**
   * Bandwidth details
   * @nullable
   */
  bandwidth?: DedicatedServerNetworkSpecificationsOVHBandwidth;
  /**
   * Network connection flow rate
   * @nullable
   */
  connection?: DedicatedServerNetworkSpecificationsOVHConnection;
  /**
   * OLA details
   * @nullable
   */
  ola?: DedicatedServerNetworkSpecificationsOVHOla;
  /**
   * Routing details
   * @nullable
   */
  routing?: DedicatedServerNetworkSpecificationsOVHRouting;
  /**
   * Switching details
   * @nullable
   */
  switching?: DedicatedServerNetworkSpecificationsOVHSwitching;
  /**
   * Traffic details
   * @nullable
   */
  traffic?: DedicatedServerNetworkSpecificationsOVHTraffic;
  /** A structure describing VMAC Infos for this dedicated server */
  vmac?: DedicatedServerVmacDetailsOVH;
  /**
   * vRack details
   * @nullable
   */
  vrack?: DedicatedServerNetworkSpecificationsOVHVrack;
}

/**
 * Available boots
 */
export interface DedicatedServerNetbootOVH {
  /** boot id */
  readonly bootId?: number;
  /** the boot system */
  readonly bootType?: DedicatedServerBootTypeEnumOVH;
  /** the boot description */
  readonly description?: string;
  /** The boot kernel */
  readonly kernel?: string;
}

/**
 * distincts MRTG type
 */
export type DedicatedServerMrtgTypeEnumOVH = typeof DedicatedServerMrtgTypeEnumOVH[keyof typeof DedicatedServerMrtgTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerMrtgTypeEnumOVH = {
  'errors:download': 'errors:download',
  'errors:upload': 'errors:upload',
  'packets:download': 'packets:download',
  'packets:upload': 'packets:upload',
  'traffic:download': 'traffic:download',
  'traffic:upload': 'traffic:upload',
} as const;

/**
 * @nullable
 */
export type DedicatedServerMrtgTimestampValueOVHValue = ComplexTypeUnitAndValueDoubleOVH | null;

/**
 * A timestamp associated to a value
 */
export interface DedicatedServerMrtgTimestampValueOVH {
  timestamp?: number;
  /** @nullable */
  value?: DedicatedServerMrtgTimestampValueOVHValue;
}

/**
 * distincts MRTG period
 */
export type DedicatedServerMrtgPeriodEnumOVH = typeof DedicatedServerMrtgPeriodEnumOVH[keyof typeof DedicatedServerMrtgPeriodEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerMrtgPeriodEnumOVH = {
  daily: 'daily',
  hourly: 'hourly',
  monthly: 'monthly',
  weekly: 'weekly',
  yearly: 'yearly',
} as const;

/**
 * Different test can be made on IPMI interface
 */
export type DedicatedServerIpmiTestTypeEnumOVH = typeof DedicatedServerIpmiTestTypeEnumOVH[keyof typeof DedicatedServerIpmiTestTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerIpmiTestTypeEnumOVH = {
  http: 'http',
  password: 'password',
  ping: 'ping',
} as const;

/**
 * A structure describing IPMI test result
 */
export interface DedicatedServerIpmiTestResultOVH {
  /**
   * Test running date
   * @nullable
   */
  date?: string | null;
  /**
   * Test result
   * @nullable
   */
  status?: string | null;
}

/**
 * A structure describing the IPMI supported features
 */
export interface DedicatedServerIpmiSupportedFeaturesOVH {
  /** Access to the KVM through an HTML web interface */
  kvmipHtml5URL?: boolean;
  /** Access to the KVM through a Java web launch application */
  kvmipJnlp?: boolean;
  /** Access to the virtual serial port of your server through an SSH client */
  serialOverLanSshKey?: boolean;
  /** Access to the virtual serial port of your server through an HTML command line interface */
  serialOverLanURL?: boolean;
}

/**
 * A structure describing ipmi access value
 */
export interface DedicatedServerIpmiAccessValueOVH {
  /**
   * Session expiration date
   * @nullable
   */
  expiration?: string | null;
  /**
   * value
   * @nullable
   */
  value?: string | null;
}

/**
 * Distinct way to acces a KVM IPMI session
 */
export type DedicatedServerIpmiAccessTypeEnumOVH = typeof DedicatedServerIpmiAccessTypeEnumOVH[keyof typeof DedicatedServerIpmiAccessTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerIpmiAccessTypeEnumOVH = {
  kvmipHtml5URL: 'kvmipHtml5URL',
  kvmipJnlp: 'kvmipJnlp',
  serialOverLanSshKey: 'serialOverLanSshKey',
  serialOverLanURL: 'serialOverLanURL',
} as const;

/**
 * Server IPMI interface
 */
export interface DedicatedServerIpmiOVH {
  /** true, if IPMI is available on this server */
  readonly activated?: boolean;
  /** A structure describing the IPMI supported features */
  readonly supportedFeatures?: DedicatedServerIpmiSupportedFeaturesOVH;
}

/**
 * Orderable IP type
 */
export type DedicatedServerIpTypeOrderableEnumOVH = typeof DedicatedServerIpTypeOrderableEnumOVH[keyof typeof DedicatedServerIpTypeOrderableEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerIpTypeOrderableEnumOVH = {
  failover: 'failover',
  static: 'static',
  unshielded: 'unshielded',
} as const;

/**
 * Which option is required to order this type of IP
 * @nullable
 */
export type DedicatedServerIpOrderableDetailsOVHOptionRequired = DedicatedServerOptionRequiredEnumOVH | null;

/**
 * A structure describing informations about orderable IP address
 */
export interface DedicatedServerIpOrderableDetailsOVH {
  /** Orderable IP blocks sizes */
  blockSizes?: DedicatedServerIpBlockSizeEnumOVH[];
  /** Are those IP included with your offer */
  included?: boolean;
  /**
   * Total number of IP that can be routed to this server
   * @nullable
   */
  ipNumber?: number | null;
  /** Total number of prefixes that can be routed to this server */
  number?: number;
  /**
   * Which option is required to order this type of IP
   * @nullable
   */
  optionRequired?: DedicatedServerIpOrderableDetailsOVHOptionRequired;
  /** this IP type */
  type?: DedicatedServerIpTypeOrderableEnumOVH;
}

/**
 * A structure describing informations about orderable IP address
 */
export interface DedicatedServerIpOrderableOVH {
  /**
   * Orderable IP v4 details
   * @nullable
   */
  ipv4?: DedicatedServerIpOrderableDetailsOVH[] | null;
  /**
   * Orderable IP v6 details
   * @nullable
   */
  ipv6?: DedicatedServerIpOrderableDetailsOVH[] | null;
}

/**
 * Available localization for this static IP
 */
export type DedicatedServerIpCountryEnumOVH = typeof DedicatedServerIpCountryEnumOVH[keyof typeof DedicatedServerIpCountryEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerIpCountryEnumOVH = {
  au: 'au',
  be: 'be',
  ca: 'ca',
  cz: 'cz',
  de: 'de',
  es: 'es',
  fi: 'fi',
  fr: 'fr',
  ie: 'ie',
  in: 'in',
  it: 'it',
  lt: 'lt',
  nl: 'nl',
  pl: 'pl',
  pt: 'pt',
  sg: 'sg',
  uk: 'uk',
  us: 'us',
} as const;

/**
 * IP block size
 */
export type DedicatedServerIpBlockSizeEnumOVH = typeof DedicatedServerIpBlockSizeEnumOVH[keyof typeof DedicatedServerIpBlockSizeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerIpBlockSizeEnumOVH = {
  NUMBER_1: 1,
  NUMBER_4: 4,
  NUMBER_8: 8,
  NUMBER_16: 16,
  NUMBER_32: 32,
  NUMBER_64: 64,
  NUMBER_128: 128,
  NUMBER_256: 256,
} as const;

/**
 * Intervention made on this server
 */
export interface DedicatedServerInterventionOVH {
  /**
   * the intervention start date
   * @nullable
   */
  readonly date?: string | null;
  /** The intervention id */
  readonly interventionId?: number;
  /**
   * the intervention type
   * @nullable
   */
  readonly type?: string | null;
}

/**
 * Interface or interfaces aggregation
 */
export interface DedicatedServerInterfacesOVH {
  /** Mac address or list of mac addresses */
  macs?: MacAddressOVH[];
  /** Network type */
  type?: DedicatedServerNetworkingTypeEnumOVH;
}

/**
 * Distinct Installation status
 */
export type DedicatedServerInstallationProgressStatusEnumOVH = typeof DedicatedServerInstallationProgressStatusEnumOVH[keyof typeof DedicatedServerInstallationProgressStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerInstallationProgressStatusEnumOVH = {
  doing: 'doing',
  done: 'done',
  error: 'error',
  expired: 'expired',
  idle: 'idle',
  pending: 'pending',
  stopping: 'stopping',
  todo: 'todo',
} as const;

/**
 * A structure describing informations about this dedicated server installation steps
 */
export interface DedicatedServerInstallationProgressStepsOVH {
  /** Informations about this installation step */
  comment?: string;
  /**
   * Error details if state is error
   * @nullable
   */
  error?: string | null;
  /** Status of this installation step */
  status?: DedicatedServerInstallationProgressStatusEnumOVH;
}

/**
 * A structure describing informations about this dedicated server installation status
 */
export interface DedicatedServerInstallationProgressStatusOVH {
  /** Elapsed time in seconds since installation beggining */
  elapsedTime?: number;
  /**
   * Installation steps
   * @nullable
   */
  progress?: DedicatedServerInstallationProgressStepsOVH[] | null;
}

/**
 * A structure describing informations about an Installation templates
 */
export interface DedicatedServerInstallTemplateOVH {
  /**
   * Names list of ovh installationtemplates compatibles with this server
   * @nullable
   */
  ovh?: string[] | null;
  /**
   * Names list of yours installation templates compatibles with this server
   * @nullable
   */
  personal?: string[] | null;
}

/**
 * A structure describing informations about installation custom
 */
export interface DedicatedServerInstallCustomOVH {
  /**
   * Personnal hostname to use in server reinstallation
   * @nullable
   */
  customHostname?: string | null;
  /**
   * Disk group id to process install on (only available for some templates)
   * @nullable
   */
  diskGroupId?: number | null;
  /**
   * true if you want to install only on the first disk
   * @nullable
   */
  noRaid?: boolean | null;
  /**
   * the url to your custom install script
   * @nullable
   */
  postInstallationScriptLink?: string | null;
  /**
   *  the return of your script if everythings ok. Advice: your script should return a unique validation string in case of succes. A good example is "loh1Xee7eo OK OK OK UGh8Ang1Gu
   * @nullable
   */
  postInstallationScriptReturn?: string | null;
  /**
   * Number of devices to use for system's software RAID
   * @nullable
   */
  softRaidDevices?: number | null;
}

/**
 * A time slot for a planned intervention
 */
export interface DedicatedServerHardwareUpgradeTimeslotOVH {
  /** End date for the planned intervention */
  readonly endDate?: string;
  /** Start date for the planned intervention */
  readonly startDate?: string;
}

/**
 * Raid hard configuration
 */
export type DedicatedServerHardwareSpecificationsRaidHardEnumOVH = typeof DedicatedServerHardwareSpecificationsRaidHardEnumOVH[keyof typeof DedicatedServerHardwareSpecificationsRaidHardEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerHardwareSpecificationsRaidHardEnumOVH = {
  raid0: 'raid0',
  raid1: 'raid1',
  raid10: 'raid10',
  raid1E: 'raid1E',
  raid5: 'raid5',
  raid50: 'raid50',
  raid6: 'raid6',
  raid60: 'raid60',
} as const;

/**
 * Expansion card type enum
 */
export type DedicatedServerHardwareSpecificationsExpansionCardTypeEnumOVH = typeof DedicatedServerHardwareSpecificationsExpansionCardTypeEnumOVH[keyof typeof DedicatedServerHardwareSpecificationsExpansionCardTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerHardwareSpecificationsExpansionCardTypeEnumOVH = {
  fpga: 'fpga',
  gpu: 'gpu',
} as const;

/**
 * A structure describing informations about server expansion cards
 */
export interface DedicatedServerHardwareSpecificationsExpansionCardOVH {
  /** expansion card description */
  description?: string;
  /** expansion card type */
  type?: DedicatedServerHardwareSpecificationsExpansionCardTypeEnumOVH;
}

/**
 * disk capacity
 * @nullable
 */
export type DedicatedServerHardwareSpecificationsDiskOVHDiskSize = ComplexTypeUnitAndValueLongOVH | null;

/**
 * default hardware raid type for this disk group
 * @nullable
 */
export type DedicatedServerHardwareSpecificationsDiskOVHDefaultHardwareRaidType = DedicatedServerHardwareSpecificationsRaidHardEnumOVH | null;

/**
 * default hardware raid size for this disk group
 * @nullable
 */
export type DedicatedServerHardwareSpecificationsDiskOVHDefaultHardwareRaidSize = ComplexTypeUnitAndValueLongOVH | null;

/**
 * A structure describing informations about server disks
 */
export interface DedicatedServerHardwareSpecificationsDiskOVH {
  /**
   * default hardware raid size for this disk group
   * @nullable
   */
  defaultHardwareRaidSize?: DedicatedServerHardwareSpecificationsDiskOVHDefaultHardwareRaidSize;
  /**
   * default hardware raid type for this disk group
   * @nullable
   */
  defaultHardwareRaidType?: DedicatedServerHardwareSpecificationsDiskOVHDefaultHardwareRaidType;
  /**
   * human readable description of this disk group
   * @nullable
   */
  description?: string | null;
  /**
   * identifier of this disk group
   * @nullable
   */
  diskGroupId?: number | null;
  /**
   * disk capacity
   * @nullable
   */
  diskSize?: DedicatedServerHardwareSpecificationsDiskOVHDiskSize;
  /**
   * type of the disk (SSD, SATA, SAS, ...)
   * @nullable
   */
  diskType?: string | null;
  /**
   * number of disks in this group
   * @nullable
   */
  numberOfDisks?: number | null;
  /**
   * raid controller, if any, managing this group of disks
   * @nullable
   */
  raidController?: string | null;
}

/**
 * processor architecture bit
 * @nullable
 */
export type DedicatedServerHardwareSpecificationsOVHProcessorArchitecture = DedicatedServerCpuFamilyEnumOVH | null;

/**
 * ram capacity
 * @nullable
 */
export type DedicatedServerHardwareSpecificationsOVHMemorySize = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Server form factor
 * @nullable
 */
export type DedicatedServerHardwareSpecificationsOVHFormFactor = DedicatedServerFormFactorEnumOVH | null;

/**
 * Default hardware raid type configured on this server
 * @nullable
 */
export type DedicatedServerHardwareSpecificationsOVHDefaultHardwareRaidType = DedicatedServerHardwareSpecificationsRaidHardEnumOVH | null;

/**
 * Default hardware raid size for this server
 * @nullable
 */
export type DedicatedServerHardwareSpecificationsOVHDefaultHardwareRaidSize = ComplexTypeUnitAndValueLongOVH | null;

/**
 * A structure describing informations about this dedicated server
 */
export interface DedicatedServerHardwareSpecificationsOVH {
  /** Server boot mode */
  bootMode?: DedicatedServerBootModeEnumOVH;
  /**
   * number of cores per processor
   * @nullable
   */
  coresPerProcessor?: number | null;
  /**
   * Default hardware raid size for this server
   * @nullable
   */
  defaultHardwareRaidSize?: DedicatedServerHardwareSpecificationsOVHDefaultHardwareRaidSize;
  /**
   * Default hardware raid type configured on this server
   * @nullable
   */
  defaultHardwareRaidType?: DedicatedServerHardwareSpecificationsOVHDefaultHardwareRaidType;
  /**
   * commercial name of this server
   * @nullable
   */
  description?: string | null;
  /**
   * details about the groups of disks in the server
   * @nullable
   */
  diskGroups?: DedicatedServerHardwareSpecificationsDiskOVH[] | null;
  /**
   * details about the server's expansion cards
   * @nullable
   */
  expansionCards?: DedicatedServerHardwareSpecificationsExpansionCardOVH[] | null;
  /**
   * Server form factor
   * @nullable
   */
  formFactor?: DedicatedServerHardwareSpecificationsOVHFormFactor;
  /**
   * ram capacity
   * @nullable
   */
  memorySize?: DedicatedServerHardwareSpecificationsOVHMemorySize;
  /**
   * server motherboard
   * @nullable
   */
  motherboard?: string | null;
  /**
   * number of processors in this dedicated server
   * @nullable
   */
  numberOfProcessors?: number | null;
  /**
   * processor architecture bit
   * @nullable
   */
  processorArchitecture?: DedicatedServerHardwareSpecificationsOVHProcessorArchitecture;
  /**
   * processor name
   * @nullable
   */
  processorName?: string | null;
  /**
   * number of threads per processor
   * @nullable
   */
  threadsPerProcessor?: number | null;
  /**
   * Capacity of the USB keys installed on your server, if any
   * @nullable
   */
  usbKeys?: ComplexTypeUnitAndValueLongOVH[] | null;
}

/**
 * A structure describing the server's resulting layout after RAID configuration
 */
export interface DedicatedServerHardwareRaidSizeOVH {
  /** Hardware RAID configuration list */
  configurations?: DedicatedServerHardwareRaidConfigurationOVH[];
}

/**
 * A structure describing the server's hardware RAID configuration
 */
export interface DedicatedServerHardwareRaidProfileOVH {
  /** Hardware RAID controller list */
  controllers?: DedicatedServerHardwareRaidControllerOVH[];
}

/**
 * Disk attached to a RAID controller
 */
export interface DedicatedServerHardwareRaidDiskGroupOVH {
  /** Disk capacity */
  capacity?: ComplexTypeUnitAndValueLongOVH;
  /** Disk Group Id */
  diskGroupId?: number;
  /** Disk names */
  names?: string[];
  /** Disk insterface speed */
  speed?: ComplexTypeUnitAndValueStringOVH;
  /** Disk type */
  type?: DedicatedServerDiskTypeEnumOVH;
}

/**
 * RAID controller configuration
 */
export interface DedicatedServerHardwareRaidControllerOVH {
  /** Connected disk type */
  disks?: DedicatedServerHardwareRaidDiskGroupOVH[];
  /** Raid controler model */
  model?: string;
  /** Raid controler type */
  type?: string;
}

/**
 * Simulated result of how the hardware RAID template will be configured on this server
 */
export interface DedicatedServerHardwareRaidConfigurationOVH {
  /** RAID total capacity */
  capacity?: ComplexTypeUnitAndValueLongOVH;
  /** Disk count */
  diskCount?: number;
  /** Disk capacity */
  diskSize?: ComplexTypeUnitAndValueLongOVH;
  /** Size of disk spans on RAID */
  diskSpanSize?: number;
  /** RAID mode */
  mode?: DedicatedServerHardwareSpecificationsRaidHardEnumOVH;
  /** RAID configuration name */
  name?: string;
  /** RAID controller type */
  type?: string;
}

/**
 * Server form factor
 */
export type DedicatedServerFormFactorEnumOVH = typeof DedicatedServerFormFactorEnumOVH[keyof typeof DedicatedServerFormFactorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerFormFactorEnumOVH = {
  '025u': '0.25u',
  '05u': '0.5u',
  '1u': '1u',
  '2u': '2u',
  '3u': '3u',
  '4u': '4u',
} as const;

/**
 * Firewall model name
 */
export type DedicatedServerFirewallModelEnumOVH = typeof DedicatedServerFirewallModelEnumOVH[keyof typeof DedicatedServerFirewallModelEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerFirewallModelEnumOVH = {
  asa5505: 'asa5505',
  asa5510: 'asa5510',
  asa5520: 'asa5520',
} as const;

/**
 * Dedicated server firewall mode
 */
export type DedicatedServerFirewallModeEnumOVH = typeof DedicatedServerFirewallModeEnumOVH[keyof typeof DedicatedServerFirewallModeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerFirewallModeEnumOVH = {
  routed: 'routed',
  transparent: 'transparent',
} as const;

/**
 * Firewall model
 * @nullable
 */
export type DedicatedServerFirewallOVHModel = DedicatedServerFirewallModelEnumOVH | null;

/**
 * Firewall attached to this server
 */
export interface DedicatedServerFirewallOVH {
  enabled?: boolean;
  readonly firewall?: string;
  /** Firewall management IP */
  readonly ip?: Ipv4OVH;
  /** transparent mode : device is invisible on the network; routed mode : the security appliance is considered to be a router hop in the network */
  readonly mode?: DedicatedServerFirewallModeEnumOVH;
  /**
   * Firewall model
   * @nullable
   */
  readonly model?: DedicatedServerFirewallOVHModel;
}

/**
 * Disk interface type enum
 */
export type DedicatedServerDiskTypeEnumOVH = typeof DedicatedServerDiskTypeEnumOVH[keyof typeof DedicatedServerDiskTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerDiskTypeEnumOVH = {
  NVMe: 'NVMe',
  SAS: 'SAS',
  SATA: 'SATA',
  SSD: 'SSD',
  Unknown: 'Unknown',
} as const;

/**
 * IAM resource metadata
 * @nullable
 */
export type DedicatedServerDedicatedWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * Server informations
 */
export interface DedicatedServerDedicatedWithIAMOVH {
  /** dedicated AZ localisation */
  readonly availabilityZone?: string;
  /** @nullable */
  bootId?: number | null;
  /**
   * Ipxe script served on boot
   * @nullable
   */
  bootScript?: string | null;
  /**
   * dedicater server commercial range
   * @nullable
   */
  readonly commercialRange?: string | null;
  /** dedicated datacenter localisation */
  readonly datacenter?: DedicatedDatacenterEnumOVH;
  /**
   * EfiBootloader path
   * @nullable
   */
  efiBootloaderPath?: string | null;
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: DedicatedServerDedicatedWithIAMOVHIam;
  /** dedicated server ip */
  readonly ip?: Ipv4OVH;
  /** @nullable */
  readonly linkSpeed?: number | null;
  /** Icmp monitoring state */
  monitoring?: boolean;
  /** dedicated server name */
  readonly name?: string;
  readonly newUpgradeSystem?: boolean;
  /** Prevent datacenter intervention */
  noIntervention?: boolean;
  /** Operating system */
  readonly os?: string;
  /** Power state of the server */
  readonly powerState?: DedicatedServerPowerStateEnumOVH;
  /** Does this server have professional use option */
  readonly professionalUse?: boolean;
  readonly rack?: string;
  /** dedicated region localisation */
  readonly region?: string;
  /**
   * Custom email used to receive rescue credentials
   * @nullable
   */
  rescueMail?: string | null;
  /**
   * Public SSH Key used in the rescue mode
   * @nullable
   */
  rescueSshKey?: string | null;
  /**
   * dedicated server reverse
   * @nullable
   */
  readonly reverse?: string | null;
  /** @nullable */
  rootDevice?: string | null;
  /** your server id */
  readonly serverId?: number;
  state?: DedicatedServerStateEnumOVH;
  /** Dedicated server support level */
  readonly supportLevel?: DedicatedServerSupportLevelEnumOVH;
}

/**
 * Server informations
 */
export interface DedicatedServerDedicatedOVH {
  /** dedicated AZ localisation */
  readonly availabilityZone?: string;
  /** @nullable */
  bootId?: number | null;
  /**
   * Ipxe script served on boot
   * @nullable
   */
  bootScript?: string | null;
  /**
   * dedicater server commercial range
   * @nullable
   */
  readonly commercialRange?: string | null;
  /** dedicated datacenter localisation */
  readonly datacenter?: DedicatedDatacenterEnumOVH;
  /**
   * EfiBootloader path
   * @nullable
   */
  efiBootloaderPath?: string | null;
  /** dedicated server ip */
  readonly ip?: Ipv4OVH;
  /** @nullable */
  readonly linkSpeed?: number | null;
  /** Icmp monitoring state */
  monitoring?: boolean;
  /** dedicated server name */
  readonly name?: string;
  readonly newUpgradeSystem?: boolean;
  /** Prevent datacenter intervention */
  noIntervention?: boolean;
  /** Operating system */
  readonly os?: string;
  /** Power state of the server */
  readonly powerState?: DedicatedServerPowerStateEnumOVH;
  /** Does this server have professional use option */
  readonly professionalUse?: boolean;
  readonly rack?: string;
  /** dedicated region localisation */
  readonly region?: string;
  /**
   * Custom email used to receive rescue credentials
   * @nullable
   */
  rescueMail?: string | null;
  /**
   * Public SSH Key used in the rescue mode
   * @nullable
   */
  rescueSshKey?: string | null;
  /**
   * dedicated server reverse
   * @nullable
   */
  readonly reverse?: string | null;
  /** @nullable */
  rootDevice?: string | null;
  /** your server id */
  readonly serverId?: number;
  state?: DedicatedServerStateEnumOVH;
  /** Dedicated server support level */
  readonly supportLevel?: DedicatedServerSupportLevelEnumOVH;
}

/**
 * cpu family 
 */
export type DedicatedServerCpuFamilyEnumOVH = typeof DedicatedServerCpuFamilyEnumOVH[keyof typeof DedicatedServerCpuFamilyEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerCpuFamilyEnumOVH = {
  arm64: 'arm64',
  armhf32: 'armhf32',
  ppc64: 'ppc64',
  x86: 'x86',
  'x86-ht': 'x86-ht',
  x86_64: 'x86_64',
} as const;

/**
 * Time to live in minutes for cache
 */
export type DedicatedServerCacheTTLEnumOVH = typeof DedicatedServerCacheTTLEnumOVH[keyof typeof DedicatedServerCacheTTLEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerCacheTTLEnumOVH = {
  NUMBER_1: 1,
  NUMBER_3: 3,
  NUMBER_5: 5,
  NUMBER_10: 10,
  NUMBER_15: 15,
} as const;

/**
 * Dedicated server bandwidth burst
 */
export type DedicatedServerBurstStatusEnumOVH = typeof DedicatedServerBurstStatusEnumOVH[keyof typeof DedicatedServerBurstStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerBurstStatusEnumOVH = {
  active: 'active',
  inactive: 'inactive',
  inactiveLocked: 'inactiveLocked',
} as const;

/**
 *  Different netboot boot
 */
export type DedicatedServerBootTypeEnumOVH = typeof DedicatedServerBootTypeEnumOVH[keyof typeof DedicatedServerBootTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerBootTypeEnumOVH = {
  harddisk: 'harddisk',
  internal: 'internal',
  network: 'network',
  power: 'power',
  rescue: 'rescue',
} as const;

/**
 * Different option activated on netboot 
 */
export type DedicatedServerBootOptionEnumOVH = typeof DedicatedServerBootOptionEnumOVH[keyof typeof DedicatedServerBootOptionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerBootOptionEnumOVH = {
  cpufamily: 'cpufamily',
  grsec: 'grsec',
  ipv6: 'ipv6',
  smp: 'smp',
} as const;

/**
 * Server boot mode
 */
export type DedicatedServerBootModeEnumOVH = typeof DedicatedServerBootModeEnumOVH[keyof typeof DedicatedServerBootModeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerBootModeEnumOVH = {
  legacy: 'legacy',
  uefi: 'uefi',
  'uefi-legacy': 'uefi-legacy',
} as const;

/**
 * Web SOL session information
 */
export interface DedicatedServerBmcWebSolValueOVH {
  /** Date on which the credentials will no longer be retrievable */
  expirationDate?: string;
  /** URL of the Web SOL session */
  url?: string;
}

/**
 * Web KVM session information
 */
export interface DedicatedServerBmcWebKvmValueOVH {
  /** Date on which the credentials will no longer be retrievable */
  expirationDate?: string;
  /** URL of the Web KVM session */
  url?: string;
}

/**
 * List of tests to run on a BMC
 */
export type DedicatedServerBmcTestTypeEnumOVH = typeof DedicatedServerBmcTestTypeEnumOVH[keyof typeof DedicatedServerBmcTestTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerBmcTestTypeEnumOVH = {
  password: 'password',
  ping: 'ping',
  web: 'web',
} as const;

/**
 * A structure describing BMC test result
 */
export interface DedicatedServerBmcTestResultOVH {
  /** Date of expiration of the result of this test */
  expirationDate?: string;
  /**
   * Error message, null if the test is successfully executed
   * @nullable
   */
  message?: string | null;
  /** Test result, true if successful */
  status?: boolean;
}

/**
 * A structure describing the BMC supported features
 */
export interface DedicatedServerBmcSupportedFeaturesOVH {
  /** Access to the KVM through a Java web launch application */
  javaKvm?: boolean;
  /** Access to the virtual serial port of your server through a SSH client */
  sshSol?: boolean;
  /** Test that the access to the BMC is operational */
  testPassword?: boolean;
  /** Test that the BMC is reachable */
  testPing?: boolean;
  /** Test that the Web interface of the BMC is operational */
  testWeb?: boolean;
  /** Access to the KVM through a Web interface */
  webKvm?: boolean;
  /** Access to the virtual serial port of your server through a Web interface */
  webSol?: boolean;
}

/**
 * Ssh SOL session information
 */
export interface DedicatedServerBmcSshSolValueOVH {
  /** Date on which the credentials will no longer be retrievable */
  expirationDate?: string;
  /** Ssh user and host in "user@host" format */
  uri?: string;
}

/**
 * Java KVM session information
 */
export interface DedicatedServerBmcJavaKvmValueOVH {
  /** Date on which the credentials will no longer be retrievable */
  expirationDate?: string;
  /** value */
  jnlp?: string;
}

/**
 * A structure describing supported bios settings
 */
export interface DedicatedServerBiosSettingsSupportOVH {
  /** SGX feature support */
  sgx?: boolean;
  /** Supported SGX options */
  sgxOptions?: DedicatedServerBiosSettingsSupportSgxOptionsOVH;
}

/**
 * SGX Status enum
 */
export type DedicatedServerBiosSettingsSgxStatusEnumOVH = typeof DedicatedServerBiosSettingsSgxStatusEnumOVH[keyof typeof DedicatedServerBiosSettingsSgxStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerBiosSettingsSgxStatusEnumOVH = {
  disabled: 'disabled',
  enabled: 'enabled',
  software_controlled: 'software controlled',
} as const;

/**
 * SGX PRMRR value enum
 */
export type DedicatedServerBiosSettingsSgxPrmrrEnumOVH = typeof DedicatedServerBiosSettingsSgxPrmrrEnumOVH[keyof typeof DedicatedServerBiosSettingsSgxPrmrrEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerBiosSettingsSgxPrmrrEnumOVH = {
  NUMBER_128: '128',
  NUMBER_131072: '131072',
  NUMBER_16384: '16384',
  NUMBER_2048: '2048',
  NUMBER_256: '256',
  NUMBER_32: '32',
  NUMBER_32768: '32768',
  NUMBER_4096: '4096',
  NUMBER_512: '512',
  NUMBER_64: '64',
  NUMBER_65536: '65536',
  NUMBER_8192: '8192',
} as const;

/**
 * A structure describing supported SGX options values
 */
export interface DedicatedServerBiosSettingsSupportSgxOptionsOVH {
  /** Supported SGX prmrr values */
  prmrr?: DedicatedServerBiosSettingsSgxPrmrrEnumOVH[];
  /** Supported SGX statuses */
  status?: DedicatedServerBiosSettingsSgxStatusEnumOVH[];
}

/**
 * Dedicated server addon.
 */
export interface DedicatedServerBillingAddonOVH {
  /** Addon family */
  family?: DedicatedServerAddonFamilyEnumOVH;
  /** Plan code to order */
  planCode?: string;
}

/**
 *  Different Bandwidth type
 */
export type DedicatedServerBandwidthvRackTypeEnumOVH = typeof DedicatedServerBandwidthvRackTypeEnumOVH[keyof typeof DedicatedServerBandwidthvRackTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerBandwidthvRackTypeEnumOVH = {
  included: 'included',
  standard: 'standard',
} as const;

/**
 *  Different vRack Bandwidth orderable in Mbps
 */
export type DedicatedServerBandwidthvRackOrderEnumOVH = typeof DedicatedServerBandwidthvRackOrderEnumOVH[keyof typeof DedicatedServerBandwidthvRackOrderEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerBandwidthvRackOrderEnumOVH = {
  NUMBER_1000: 1000,
  NUMBER_3000: 3000,
} as const;

/**
 * A structure describing informations bandwidth orderable for this dedicated server
 */
export interface DedicatedServerBandwidthvRackOrderableOVH {
  /** Is bandwidth orderable for this server */
  orderable?: boolean;
  /**
   * vRack Bandwidth orderable in mbps
   * @nullable
   */
  vrack?: DedicatedServerBandwidthvRackOrderEnumOVH[] | null;
}

/**
 * bandwidth offer type
 * @nullable
 */
export type DedicatedServerBandwidthvRackDetailsOVHType = DedicatedServerBandwidthvRackTypeEnumOVH | null;

/**
 * vrack bandwidth limitation
 * @nullable
 */
export type DedicatedServerBandwidthvRackDetailsOVHBandwidth = ComplexTypeUnitAndValueLongOVH | null;

/**
 * A structure describing vRack bandwidth informations about this dedicated server
 */
export interface DedicatedServerBandwidthvRackDetailsOVH {
  /**
   * vrack bandwidth limitation
   * @nullable
   */
  bandwidth?: DedicatedServerBandwidthvRackDetailsOVHBandwidth;
  /**
   * bandwidth offer type
   * @nullable
   */
  type?: DedicatedServerBandwidthvRackDetailsOVHType;
}

/**
 *  Different Bandwidth type
 */
export type DedicatedServerBandwidthTypeEnumOVH = typeof DedicatedServerBandwidthTypeEnumOVH[keyof typeof DedicatedServerBandwidthTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerBandwidthTypeEnumOVH = {
  improved: 'improved',
  included: 'included',
  platinum: 'platinum',
  premium: 'premium',
  standard: 'standard',
  ultimate: 'ultimate',
} as const;

/**
 *  Different Bandwidth orderable in Mbps
 */
export type DedicatedServerBandwidthOrderEnumOVH = typeof DedicatedServerBandwidthOrderEnumOVH[keyof typeof DedicatedServerBandwidthOrderEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerBandwidthOrderEnumOVH = {
  NUMBER_1000: 1000,
  NUMBER_2000: 2000,
  NUMBER_3000: 3000,
} as const;

/**
 * A structure describing informations bandwidth orderable for this dedicated server
 */
export interface DedicatedServerBandwidthOrderableOVH {
  /** Is bandwidth orderable for this server */
  orderable?: boolean;
  /**
   * Bandwidth "platinum" orderable in mbps
   * @nullable
   */
  platinum?: DedicatedServerBandwidthOrderEnumOVH[] | null;
  /**
   * Bandwidth "premium" orderable in mbps
   * @nullable
   */
  premium?: DedicatedServerBandwidthOrderEnumOVH[] | null;
  /**
   * Bandwidth "ultimate" orderable in mbps
   * @nullable
   */
  ultimate?: DedicatedServerBandwidthOrderEnumOVH[] | null;
}

/**
 * bandwidth offer type
 * @nullable
 */
export type DedicatedServerBandwidthDetailsOVHType = DedicatedServerBandwidthTypeEnumOVH | null;

/**
 * bandwidth limitation OVH to OVH
 * @nullable
 */
export type DedicatedServerBandwidthDetailsOVHOvhToOvh = ComplexTypeUnitAndValueLongOVH | null;

/**
 * bandwidth limitation OVH to Internet
 * @nullable
 */
export type DedicatedServerBandwidthDetailsOVHOvhToInternet = ComplexTypeUnitAndValueLongOVH | null;

/**
 * bandwidth limitation Internet to OVH
 * @nullable
 */
export type DedicatedServerBandwidthDetailsOVHInternetToOvh = ComplexTypeUnitAndValueLongOVH | null;

/**
 * A structure describing bandwidth informations about this dedicated server
 */
export interface DedicatedServerBandwidthDetailsOVH {
  /**
   * bandwidth limitation Internet to OVH
   * @nullable
   */
  InternetToOvh?: DedicatedServerBandwidthDetailsOVHInternetToOvh;
  /**
   * bandwidth limitation OVH to Internet
   * @nullable
   */
  OvhToInternet?: DedicatedServerBandwidthDetailsOVHOvhToInternet;
  /**
   * bandwidth limitation OVH to OVH
   * @nullable
   */
  OvhToOvh?: DedicatedServerBandwidthDetailsOVHOvhToOvh;
  /**
   * bandwidth offer type
   * @nullable
   */
  type?: DedicatedServerBandwidthDetailsOVHType;
}

/**
 * Different backup storage type
 */
export type DedicatedServerBackupStorageTypeEnumOVH = typeof DedicatedServerBackupStorageTypeEnumOVH[keyof typeof DedicatedServerBackupStorageTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerBackupStorageTypeEnumOVH = {
  included: 'included',
  storage: 'storage',
} as const;

/**
 * Different backup storage capacity in gigabytes
 */
export type DedicatedServerBackupStorageCapacityEnumOVH = typeof DedicatedServerBackupStorageCapacityEnumOVH[keyof typeof DedicatedServerBackupStorageCapacityEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerBackupStorageCapacityEnumOVH = {
  NUMBER_500: 500,
  NUMBER_1000: 1000,
  NUMBER_5000: 5000,
  NUMBER_10000: 10000,
} as const;

/**
 * A structure describing informations storage backup orderable for this dedicated server
 */
export interface DedicatedServerBackupStorageOrderableOVH {
  /**
   * Backup storage orderable capacities in gigabytes
   * @nullable
   */
  capacities?: DedicatedServerBackupStorageCapacityEnumOVH[] | null;
  /** Is a backup storage is orderable for this server */
  orderable?: boolean;
}

/**
 * Backup Ftp ACL for this server and Backup Ftp
 */
export interface DedicatedServerBackupFtpAclOVH {
  /** Whether to allow the CIFS (SMB) protocol for this ACL */
  cifs?: boolean;
  /** Whether to allow the FTP protocol for this ACL */
  ftp?: boolean;
  /** The IP Block specific to this ACL */
  readonly ipBlock?: IpBlockOVH;
  /** Whether the rule has been applied on the Backup Ftp */
  readonly isApplied?: boolean;
  /** Date of the last object modification */
  readonly lastUpdate?: string;
  /** Whether to allow the NFS protocol for this ACL */
  nfs?: boolean;
}

/**
 * The disk space currently used on your backup FTP in percent
 * @nullable
 */
export type DedicatedServerBackupFtpOVHUsage = ComplexTypeUnitAndValueLongOVH | null;

/**
 * The disk space available in gigabytes
 * @nullable
 */
export type DedicatedServerBackupFtpOVHQuota = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Backup Ftp assigned to this server
 */
export interface DedicatedServerBackupFtpOVH {
  /** The backup FTP server name */
  readonly ftpBackupName?: string;
  /**
   * The disk space available in gigabytes
   * @nullable
   */
  readonly quota?: DedicatedServerBackupFtpOVHQuota;
  /**
   * If not-null, gives the date since when your account was set in read-only mode because the quota was exceeded
   * @nullable
   */
  readonly readOnlyDate?: string | null;
  /** The backup FTP type */
  readonly type?: DedicatedServerBackupStorageTypeEnumOVH;
  /**
   * The disk space currently used on your backup FTP in percent
   * @nullable
   */
  readonly usage?: DedicatedServerBackupFtpOVHUsage;
}

/**
 * Storage space info.
 * @nullable
 */
export type DedicatedServerBackupCloudOVHStorage = DedicatedServerBackupBackupContainerOVH | null;

/**
 * Archive space info.
 * @nullable
 */
export type DedicatedServerBackupCloudOVHArchive = DedicatedServerBackupBackupContainerOVH | null;

/**
 * Backup Cloud assigned to this server
 */
export interface DedicatedServerBackupCloudOVH {
  /**
   * Agreement ids waiting for validation
   * @nullable
   */
  readonly agreements?: readonly number[] | null;
  /**
   * Archive space info.
   * @nullable
   */
  readonly archive?: DedicatedServerBackupCloudOVHArchive;
  /** Status of the container. */
  readonly status?: DedicatedServerBackupBackupStatusOVH;
  /**
   * Storage space info.
   * @nullable
   */
  readonly storage?: DedicatedServerBackupCloudOVHStorage;
}

/**
 * Server BMC interface (formerly named IPMI)
 */
export interface DedicatedServerBMCOVH {
  /** True, if a BMC is available on this server */
  readonly available?: boolean;
  /** A structure describing the BMC supported features */
  readonly supportedFeatures?: DedicatedServerBmcSupportedFeaturesOVH;
}

/**
 * The region
 */
export type DedicatedServerAvailabilityRegionalizationEnumOVH = typeof DedicatedServerAvailabilityRegionalizationEnumOVH[keyof typeof DedicatedServerAvailabilityRegionalizationEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerAvailabilityRegionalizationEnumOVH = {
  'ap-south-1': 'ap-south-1',
  'ap-southeast-sgp': 'ap-southeast-sgp',
  'ap-southeast-syd': 'ap-southeast-syd',
  'ca-east-1': 'ca-east-1',
  'ca-east-bhs': 'ca-east-bhs',
  'eu-central-waw': 'eu-central-waw',
  'eu-west-eri': 'eu-west-eri',
  'eu-west-gra': 'eu-west-gra',
  'eu-west-lim': 'eu-west-lim',
  'eu-west-par': 'eu-west-par',
  'eu-west-rbx': 'eu-west-rbx',
  'eu-west-sbg': 'eu-west-sbg',
  'us-east-vin': 'us-east-vin',
  'us-west-hil': 'us-west-hil',
} as const;

/**
 * The availability
 */
export type DedicatedServerAvailabilityEnumOVH = typeof DedicatedServerAvailabilityEnumOVH[keyof typeof DedicatedServerAvailabilityEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerAvailabilityEnumOVH = {
  '120H': '120H',
  '1440H': '1440H',
  '1H-high': '1H-high',
  '1H-low': '1H-low',
  '2160H': '2160H',
  '240H': '240H',
  '24H': '24H',
  '480H': '480H',
  '720H': '720H',
  '72H': '72H',
  comingSoon: 'comingSoon',
  unavailable: 'unavailable',
  unknown: 'unknown',
} as const;

/**
 * Addon family
 */
export type DedicatedServerAddonFamilyEnumOVH = typeof DedicatedServerAddonFamilyEnumOVH[keyof typeof DedicatedServerAddonFamilyEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerAddonFamilyEnumOVH = {
  memory: 'memory',
  storage: 'storage',
} as const;

/**
 * Application access type
 */
export type DedicatedServerAccessTypeEnumOVH = typeof DedicatedServerAccessTypeEnumOVH[keyof typeof DedicatedServerAccessTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedServerAccessTypeEnumOVH = {
  DIRECTADMIN_PANEL: 'DIRECTADMIN_PANEL',
  PLESK_PANEL: 'PLESK_PANEL',
  PROXMOX_PANEL: 'PROXMOX_PANEL',
  RDP: 'RDP',
  SQL_SERVER: 'SQL_SERVER',
  SSH: 'SSH',
  WEB_PANEL: 'WEB_PANEL',
} as const;

/**
 * A structure describing the server's access
 */
export interface DedicatedServerAccessOVH {
  /**
   * Password
   * @nullable
   */
  password?: string | null;
  /** Application access type */
  type?: DedicatedServerAccessTypeEnumOVH;
  /**
   * Url
   * @nullable
   */
  url?: string | null;
  /**
   * Login
   * @nullable
   */
  user?: string | null;
}

/**
 * List NetworkInterfaceController linktype
 */
export type DedicatedNetworkInterfaceControllerNetworkInterfaceControllerLinkTypeEnumOVH = typeof DedicatedNetworkInterfaceControllerNetworkInterfaceControllerLinkTypeEnumOVH[keyof typeof DedicatedNetworkInterfaceControllerNetworkInterfaceControllerLinkTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedNetworkInterfaceControllerNetworkInterfaceControllerLinkTypeEnumOVH = {
  isolated: 'isolated',
  private: 'private',
  private_lag: 'private_lag',
  provisioning: 'provisioning',
  provisioning_lag: 'provisioning_lag',
  public: 'public',
  public_lag: 'public_lag',
} as const;

/**
 * Your networkInterfaceController
 */
export interface DedicatedNetworkInterfaceControllerNetworkInterfaceControllerOVH {
  /** NetworkInterfaceController linkType */
  readonly linkType?: DedicatedNetworkInterfaceControllerNetworkInterfaceControllerLinkTypeEnumOVH;
  /** NetworkInterfaceController mac */
  readonly mac?: MacAddressOVH;
  /**
   * VirtualNetworkInterface bound to this NetworkInterfaceController
   * @nullable
   */
  readonly virtualNetworkInterface?: string | null;
}

/**
 * Your BiosSettings for SGX feature
 */
export interface DedicatedBiosSettingsSgxBiosSettingsSgxOVH {
  /** Settings sections */
  readonly prmrr?: DedicatedServerBiosSettingsSgxPrmrrEnumOVH;
  /** Settings sections */
  readonly status?: DedicatedServerBiosSettingsSgxStatusEnumOVH;
}

/**
 * Your BiosSettings
 */
export interface DedicatedBiosSettingsBiosSettingsOVH {
  /** List supported setting */
  readonly supportedSettings?: DedicatedServerBiosSettingsSupportOVH;
}

/**
 * different task status
 */
export type DedicatedTaskStatusEnumOVH = typeof DedicatedTaskStatusEnumOVH[keyof typeof DedicatedTaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedTaskStatusEnumOVH = {
  cancelled: 'cancelled',
  customerError: 'customerError',
  doing: 'doing',
  done: 'done',
  init: 'init',
  ovhError: 'ovhError',
  todo: 'todo',
} as const;

/**
 * different task operation
 */
export type DedicatedTaskFunctionEnumOVH = typeof DedicatedTaskFunctionEnumOVH[keyof typeof DedicatedTaskFunctionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedTaskFunctionEnumOVH = {
  INFRA_002_VirtualNetworkInterface: 'INFRA_002_VirtualNetworkInterface',
  INFRA_002_VirtualNetworkInterface_group: 'INFRA_002_VirtualNetworkInterface_group',
  INFRA_002_VirtualNetworkInterface_ungroup: 'INFRA_002_VirtualNetworkInterface_ungroup',
  INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_group: 'INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_group',
  INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_ungroup: 'INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_ungroup',
  INFRA_ONE_NETWORK_VirtualNetworkInterface_group: 'INFRA_ONE_NETWORK_VirtualNetworkInterface_group',
  INFRA_ONE_NETWORK_VirtualNetworkInterface_ungroup: 'INFRA_ONE_NETWORK_VirtualNetworkInterface_ungroup',
  addVirtualMac: 'addVirtualMac',
  addWindowSplaFromExistingSerial: 'addWindowSplaFromExistingSerial',
  applyBackupFtpAcls: 'applyBackupFtpAcls',
  applyBackupFtpQuota: 'applyBackupFtpQuota',
  bypassAntiDDosGame: 'bypassAntiDDosGame',
  changePasswordBackupFTP: 'changePasswordBackupFTP',
  changeRipeOrg: 'changeRipeOrg',
  checkAndReleaseIp: 'checkAndReleaseIp',
  createBackupFTP: 'createBackupFTP',
  createOrUpdateRipeOrg: 'createOrUpdateRipeOrg',
  createPrivateNetwork: 'createPrivateNetwork',
  disableFirewall: 'disableFirewall',
  enableFirewall: 'enableFirewall',
  genericMoveFloatingIp: 'genericMoveFloatingIp',
  hardReboot: 'hardReboot',
  hardware_update: 'hardware_update',
  'ipmi/configureSGX': 'ipmi/configureSGX',
  migrateBackupFTP: 'migrateBackupFTP',
  moveFloatingIp: 'moveFloatingIp',
  moveVirtualMac: 'moveVirtualMac',
  reagregateBlock: 'reagregateBlock',
  rebootPower8To: 'rebootPower8To',
  reinstallServer: 'reinstallServer',
  releaseIp: 'releaseIp',
  removeBackupFTP: 'removeBackupFTP',
  removeVirtualMac: 'removeVirtualMac',
  requestAccessIPMI: 'requestAccessIPMI',
  resetIPMI: 'resetIPMI',
  resetIPMISession: 'resetIPMISession',
  testIPMIhttp: 'testIPMIhttp',
  testIPMIpassword: 'testIPMIpassword',
  testIPMIping: 'testIPMIping',
  virtualMacAdd: 'virtualMacAdd',
  virtualMacDelete: 'virtualMacDelete',
} as const;

/**
 * enable or disable
 */
export type DedicatedStatusEnumOVH = typeof DedicatedStatusEnumOVH[keyof typeof DedicatedStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedStatusEnumOVH = {
  disable: 'disable',
  enable: 'enable',
} as const;

/**
 * A log entry for a specific server
 */
export interface DedicatedPublicLogEntryOVH {
  /** Timestamp logged */
  datetime?: string;
  /** Short text describing the entry */
  resume?: string;
  /** Name of the dedicated server */
  server?: string;
}

/**
 * List of logs
 */
export interface DedicatedPublicLogOVH {
  /**
   * Cache store timestamp
   * @nullable
   */
  cacheDate?: string | null;
  /** Total amount of lines */
  count?: number;
  /** Logs */
  data?: DedicatedPublicLogEntryOVH[];
}

/**
 * Intervention type
 */
export type DedicatedPlannedInterventionTypeEnumOVH = typeof DedicatedPlannedInterventionTypeEnumOVH[keyof typeof DedicatedPlannedInterventionTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedPlannedInterventionTypeEnumOVH = {
  HARDWARE_UPGRADE_ON_ACTIVE_SERVER: 'HARDWARE_UPGRADE_ON_ACTIVE_SERVER',
} as const;

/**
 * A time slot for a planned intervention
 */
export interface DedicatedPlannedInterventionTimeSlotOVH {
  /** End date for the planned intervention */
  endDate?: string;
  /** Start date for the planned intervention */
  startDate?: string;
}

/**
 * Intervention status
 */
export type DedicatedPlannedInterventionStatusEnumOVH = typeof DedicatedPlannedInterventionStatusEnumOVH[keyof typeof DedicatedPlannedInterventionStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedPlannedInterventionStatusEnumOVH = {
  doing: 'doing',
  done: 'done',
  todo: 'todo',
} as const;

/**
 * List of operation type
 */
export type DedicatedOperationFunctionEnumOVH = typeof DedicatedOperationFunctionEnumOVH[keyof typeof DedicatedOperationFunctionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedOperationFunctionEnumOVH = {
  'bmc/javaKvm': 'bmc/javaKvm',
  'bmc/restart': 'bmc/restart',
  'bmc/revokeSessions': 'bmc/revokeSessions',
  'bmc/sshSol': 'bmc/sshSol',
  'bmc/testPassword': 'bmc/testPassword',
  'bmc/testPing': 'bmc/testPing',
  'bmc/testWeb': 'bmc/testWeb',
  'bmc/webKvm': 'bmc/webKvm',
  'bmc/webSol': 'bmc/webSol',
} as const;

/**
 * A structure describing the raw availabilities of dedicated server
 */
export interface DedicatedDatacenterRawAvailabilityOVH {
  /** The hardware raw availability for each datacenter */
  readonly datacenters?: readonly DedicatedAvailabilityRawDatacenterOVH[];
  /** Fully qualified and unique name of the hardware */
  readonly fqn?: string;
  /**
   * Name of the gpu hardware part
   * @nullable
   */
  readonly gpu?: string | null;
  /**
   * Name of the memory hardware part
   * @nullable
   */
  readonly memory?: string | null;
  /** Plan code in which the hardware is involved */
  readonly planCode?: string;
  /**
   * The hardware raw availability for each datacenter
   * @nullable
   */
  readonly regions?: readonly DedicatedAvailabilityRawRegionOVH[] | null;
  /** Name of the base hardware */
  readonly server?: string;
  /**
   * Name of the storage hardware part
   * @nullable
   */
  readonly storage?: string | null;
  /**
   * Name of the system storage hardware part
   * @nullable
   */
  readonly systemStorage?: string | null;
}

/**
 * ovh datacenter
 */
export type DedicatedDatacenterEnumOVH = typeof DedicatedDatacenterEnumOVH[keyof typeof DedicatedDatacenterEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedDatacenterEnumOVH = {
  bhs1: 'bhs1',
  bhs2: 'bhs2',
  bhs3: 'bhs3',
  bhs4: 'bhs4',
  bhs5: 'bhs5',
  bhs6: 'bhs6',
  bhs7: 'bhs7',
  bhs8: 'bhs8',
  cch01: 'cch01',
  crx1: 'crx1',
  crx2: 'crx2',
  dc1: 'dc1',
  eri1: 'eri1',
  eri2: 'eri2',
  gra04: 'gra04',
  gra1: 'gra1',
  gra2: 'gra2',
  gra3: 'gra3',
  gsw: 'gsw',
  hdf01: 'hdf01',
  hil1: 'hil1',
  ieb01: 'ieb01',
  'lil1-int1': 'lil1-int1',
  lim1: 'lim1',
  lim2: 'lim2',
  lim3: 'lim3',
  mr901: 'mr901',
  p19: 'p19',
  rbx: 'rbx',
  'rbx-hz': 'rbx-hz',
  rbx1: 'rbx1',
  rbx10: 'rbx10',
  rbx2: 'rbx2',
  rbx3: 'rbx3',
  rbx4: 'rbx4',
  rbx5: 'rbx5',
  rbx6: 'rbx6',
  rbx7: 'rbx7',
  rbx8: 'rbx8',
  rbx9: 'rbx9',
  sbg1: 'sbg1',
  sbg2: 'sbg2',
  sbg3: 'sbg3',
  sbg4: 'sbg4',
  sbg5: 'sbg5',
  sgp02: 'sgp02',
  sgp1: 'sgp1',
  syd03: 'syd03',
  syd1: 'syd1',
  syd2: 'syd2',
  vin1: 'vin1',
  waw1: 'waw1',
  ynm1: 'ynm1',
  yyz01: 'yyz01',
} as const;

/**
 * A task for a dedicated server
 */
export interface DedicatedExposedTaskOVH {
  /** Location of the server */
  datacenter?: DedicatedDatacenterEnumOVH;
  /** Short text describing the entry */
  description?: string;
  /** Name of the dedicated server */
  server?: string;
  /** Timestamp for processing */
  todoDate?: string;
}

/**
 * A structure describing the availabilities of dedicated server
 */
export interface DedicatedDatacenterAvailabilityOVH {
  /** The hardware availability for each datacenter */
  readonly datacenters?: readonly DedicatedAvailabilityDatacenterOVH[];
  /** Fully qualified and unique name of the hardware */
  readonly fqn?: string;
  /**
   * Name of the gpu hardware part
   * @nullable
   */
  readonly gpu?: string | null;
  /**
   * Name of the memory hardware part
   * @nullable
   */
  readonly memory?: string | null;
  /** Plan code in which the hardware is involved */
  readonly planCode?: string;
  /** Name of the base hardware */
  readonly server?: string;
  /**
   * Name of the storage hardware part
   * @nullable
   */
  readonly storage?: string | null;
  /**
   * Name of the system storage hardware part
   * @nullable
   */
  readonly systemStorage?: string | null;
}

/**
 * The region
 */
export type DedicatedAvailabilityRegionalizationEnumOVH = typeof DedicatedAvailabilityRegionalizationEnumOVH[keyof typeof DedicatedAvailabilityRegionalizationEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedAvailabilityRegionalizationEnumOVH = {
  'ap-south-1': 'ap-south-1',
  'ap-southeast-sgp': 'ap-southeast-sgp',
  'ap-southeast-syd': 'ap-southeast-syd',
  'ca-east-1': 'ca-east-1',
  'ca-east-bhs': 'ca-east-bhs',
  'eu-central-waw': 'eu-central-waw',
  'eu-west-1': 'eu-west-1',
  'eu-west-eri': 'eu-west-eri',
  'eu-west-gra': 'eu-west-gra',
  'eu-west-lim': 'eu-west-lim',
  'eu-west-rbx': 'eu-west-rbx',
  'eu-west-sbg': 'eu-west-sbg',
  'us-east-vin': 'us-east-vin',
  'us-west-hil': 'us-west-hil',
} as const;

/**
 * The region
 */
export type DedicatedAvailabilityRegionEnumOVH = typeof DedicatedAvailabilityRegionEnumOVH[keyof typeof DedicatedAvailabilityRegionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedAvailabilityRegionEnumOVH = {
  'ap-south-1-a': 'ap-south-1-a',
  'ap-south-mum-a': 'ap-south-mum-a',
  'ap-southeast-sgp-a': 'ap-southeast-sgp-a',
  'ap-southeast-syd-a': 'ap-southeast-syd-a',
  apac: 'apac',
  bhs: 'bhs',
  'ca-east-bhs-a': 'ca-east-bhs-a',
  canada: 'canada',
  crx: 'crx',
  'eu-central-waw-a': 'eu-central-waw-a',
  'eu-west-1-a': 'eu-west-1-a',
  'eu-west-1-b': 'eu-west-1-b',
  'eu-west-1-c': 'eu-west-1-c',
  'eu-west-eri-a': 'eu-west-eri-a',
  'eu-west-gra-a': 'eu-west-gra-a',
  'eu-west-lim-a': 'eu-west-lim-a',
  'eu-west-par-a': 'eu-west-par-a',
  'eu-west-rbx-a': 'eu-west-rbx-a',
  'eu-west-sbg-a': 'eu-west-sbg-a',
  europe: 'europe',
  fr: 'fr',
  fra: 'fra',
  gra: 'gra',
  'lil1-int1': 'lil1-int1',
  lon: 'lon',
  northAmerica: 'northAmerica',
  par: 'par',
  rbx: 'rbx',
  'rbx-hz': 'rbx-hz',
  sbg: 'sbg',
  sgp: 'sgp',
  syd: 'syd',
  waw: 'waw',
  ynm: 'ynm',
} as const;

/**
 * The availability
 */
export type DedicatedAvailabilityEnumOVH = typeof DedicatedAvailabilityEnumOVH[keyof typeof DedicatedAvailabilityEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedAvailabilityEnumOVH = {
  '120H': '120H',
  '1440H': '1440H',
  '1H-high': '1H-high',
  '1H-low': '1H-low',
  '2160H': '2160H',
  '240H': '240H',
  '24H': '24H',
  '480H': '480H',
  '720H': '720H',
  '72H': '72H',
  comingSoon: 'comingSoon',
  unavailable: 'unavailable',
  unknown: 'unknown',
} as const;

/**
 * A structure describing the hardware raw availability for each datacenter
 */
export interface DedicatedAvailabilityRawRegionOVH {
  /** The availability */
  readonly availability?: DedicatedAvailabilityEnumOVH;
  /** Availability for each availability zone */
  readonly availabilityZones?: readonly DedicatedAvailabilityRawAvailabilityZonesOVH[];
  /**
   * Last availability rule applied
   * @nullable
   */
  readonly lastRule?: string | null;
  /** Real stock including parent references */
  readonly parentAvailable?: number;
  /** The region */
  readonly region?: DedicatedAvailabilityRegionalizationEnumOVH;
  /** Real stock */
  readonly trueAvailable?: number;
}

/**
 * A structure describing the hardware raw availability for each datacenter
 */
export interface DedicatedAvailabilityRawDatacenterOVH {
  /** The availability */
  readonly availability?: DedicatedAvailabilityEnumOVH;
  /** The datacenter */
  readonly datacenter?: DedicatedAvailabilityDatacenterEnumOVH;
  /**
   * Last availability rule applied
   * @nullable
   */
  readonly lastRule?: string | null;
  /** Real stock including parent references */
  readonly parentAvailable?: number;
  /** Real stock */
  readonly trueAvailable?: number;
}

/**
 * A structure describing the hardware raw availability for each availability zone
 */
export interface DedicatedAvailabilityRawAvailabilityZonesOVH {
  /** The availability */
  readonly availability?: DedicatedAvailabilityEnumOVH;
  /** The availability zone */
  readonly availabilityZone?: DedicatedAvailabilityAvailabilityZoneEnumOVH;
  /**
   * Last availability rule applied
   * @nullable
   */
  readonly lastRule?: string | null;
  /** Real stock including parent references */
  readonly parentAvailable?: number;
  /** Real stock */
  readonly trueAvailable?: number;
}

/**
 * The datacenter
 */
export type DedicatedAvailabilityDatacenterEnumOVH = typeof DedicatedAvailabilityDatacenterEnumOVH[keyof typeof DedicatedAvailabilityDatacenterEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedAvailabilityDatacenterEnumOVH = {
  'ap-south-1-a': 'ap-south-1-a',
  'ap-southeast-sgp-a': 'ap-southeast-sgp-a',
  'ap-southeast-syd-a': 'ap-southeast-syd-a',
  au: 'au',
  bhs: 'bhs',
  ca: 'ca',
  'ca-east-1-a': 'ca-east-1-a',
  'ca-east-bhs-a': 'ca-east-bhs-a',
  de: 'de',
  default: 'default',
  'eu-central-waw-a': 'eu-central-waw-a',
  'eu-west-1-a': 'eu-west-1-a',
  'eu-west-1-b': 'eu-west-1-b',
  'eu-west-1-c': 'eu-west-1-c',
  'eu-west-eri-a': 'eu-west-eri-a',
  'eu-west-gra-a': 'eu-west-gra-a',
  'eu-west-lim-a': 'eu-west-lim-a',
  'eu-west-rbx-a': 'eu-west-rbx-a',
  'eu-west-sbg-a': 'eu-west-sbg-a',
  fr: 'fr',
  fra: 'fra',
  gb: 'gb',
  gra: 'gra',
  hil: 'hil',
  in: 'in',
  lon: 'lon',
  pl: 'pl',
  rbx: 'rbx',
  'rbx-hz': 'rbx-hz',
  sbg: 'sbg',
  sg: 'sg',
  sgp: 'sgp',
  syd: 'syd',
  us: 'us',
  'us-east-vin-a': 'us-east-vin-a',
  'us-west-hil-a': 'us-west-hil-a',
  vin: 'vin',
  waw: 'waw',
  ynm: 'ynm',
} as const;

/**
 * A structure describing the hardware availability for each datacenter
 */
export interface DedicatedAvailabilityDatacenterOVH {
  /** The availability */
  readonly availability?: DedicatedAvailabilityEnumOVH;
  /** The datacenter */
  readonly datacenter?: DedicatedAvailabilityDatacenterEnumOVH;
}

/**
 * The availability zone
 */
export type DedicatedAvailabilityAvailabilityZoneEnumOVH = typeof DedicatedAvailabilityAvailabilityZoneEnumOVH[keyof typeof DedicatedAvailabilityAvailabilityZoneEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedAvailabilityAvailabilityZoneEnumOVH = {
  'ap-south-1-a': 'ap-south-1-a',
  'ap-southeast-sgp-a': 'ap-southeast-sgp-a',
  'ap-southeast-syd-a': 'ap-southeast-syd-a',
  'ca-east-bhs-a': 'ca-east-bhs-a',
  'eu-central-waw-a': 'eu-central-waw-a',
  'eu-west-1-a': 'eu-west-1-a',
  'eu-west-1-b': 'eu-west-1-b',
  'eu-west-1-c': 'eu-west-1-c',
  'eu-west-eri-a': 'eu-west-eri-a',
  'eu-west-gra-a': 'eu-west-gra-a',
  'eu-west-lim-a': 'eu-west-lim-a',
  'eu-west-rbx-a': 'eu-west-rbx-a',
  'eu-west-sbg-a': 'eu-west-sbg-a',
  'us-east-vin-a': 'us-east-vin-a',
  'us-west-hil-a': 'us-west-hil-a',
} as const;

/**
 * A structure describing the availabilities of dedicated server
 */
export interface DedicatedAvailabilitiesRawOVH {
  /** The availability */
  readonly availability?: DedicatedAvailabilityEnumOVH;
  /** Real stock in database */
  readonly available?: number;
  /**
   * Stock in datacenter
   * @nullable
   */
  readonly incomingDatacenter?: number | null;
  /**
   * Last availability rule applied
   * @nullable
   */
  readonly lastRule?: string | null;
  /** Ordered count */
  readonly ordered?: number;
  /**
   * Validating order count
   * @nullable
   */
  readonly orderedCheck?: number | null;
  /**
   * Blockbuster stock count
   * @nullable
   */
  readonly parentAvailable?: number | null;
  /** Product reference */
  readonly reference?: string;
  /** Real stock (considering order in validating) */
  readonly trueAvailable?: number;
  /**
   * 24H count
   * @nullable
   */
  readonly trueAvailable24H?: number | null;
  /**
   * 4H count
   * @nullable
   */
  readonly trueAvailable4H?: number | null;
  /** The region */
  readonly zone?: DedicatedAvailabilityRegionEnumOVH;
}

/**
 * A structure describing the availabilities of dedicated server
 */
export interface DedicatedAvailabilitiesOVH {
  /** The hardware availability for each datacenter which composed a region */
  readonly datacenters?: readonly DedicatedAvailabilityDatacenterOVH[];
  /**
   * Name of the hardware
   * @nullable
   */
  readonly hardware?: string | null;
  /** The region */
  readonly region?: DedicatedAvailabilityRegionEnumOVH;
}

/**
 * A numeric value tagged with its unit
 */
export interface ComplexTypeUnitAndValueStringOVH {
  unit?: string;
  value?: string;
}

/**
 * A numeric value tagged with its unit
 */
export interface ComplexTypeUnitAndValueLongOVH {
  unit?: string;
  value?: number;
}

/**
 * A numeric value tagged with its unit
 */
export interface ComplexTypeUnitAndValueDoubleOVH {
  unit?: string;
  value?: number;
}

/**
 * Key and value, with proper key strings
 */
export interface ComplexTypeSafeKeyValueStringOVH {
  key?: string;
  value?: string;
}

/**
 * Key and value, with proper key strings
 */
export interface ComplexTypeSafeKeyValueCanBeNullStringOVH {
  /** @nullable */
  key?: string | null;
  value?: string;
}

