/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type GetIamResourceGroupGroupIdParams = {
/**
 * Add extra information about resources in output
 */
details?: boolean;
};

export type GetIamResourceGroupParams = {
/**
 * Add extra information about resources in output
 */
details?: boolean;
};

export type GetIamResourceParams = {
/**
 * Filter resources for specific resource names
 */
resourceName?: string[];
/**
 * Filter resources for specific resource types
 */
resourceType?: string[];
/**
 * Filter resources for specific resource URN patterns
 */
resourceURN?: string[];
/**
 * Filter resources using tag filters
 */
tags?: {[key: string]: IamResourceTagFilterOVH[]};
};

export type GetIamReferenceActionParams = {
/**
 * Filter actions for specific resource types
 */
resourceType?: string[];
};

export type GetIamPolicyPolicyIdParams = {
/**
 * Add extra information about resources in output
 */
details?: boolean;
};

export type GetIamPolicyParams = {
/**
 * Filter on policies embedding the given IAM action
 */
action?: string[];
/**
 * Add extra information about resources in output
 */
details?: boolean;
/**
 * Filter on policies embedding the given identity
 */
identity?: string[];
/**
 * Filter on the readOnly attribute
 */
readOnly?: boolean;
/**
 * Filter on policies embedding the given resource URN
 */
resourceURN?: string[];
};

export type GetIamLogSubscriptionParams = {
/**
 * Filter on a specific kind (e.g., default)
 */
kind?: string;
};

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceResourceOVHTags = {[key: string]: string} | null;

/**
 * Resource is an entity standing for a product. It is used for right delegation
 */
export interface IamResourceResourceOVH {
  /** Resource display name */
  readonly displayName?: string;
  /** Unique identifier of the resource */
  readonly id?: string;
  /** Resource name */
  readonly name?: string;
  /** Resource owner */
  readonly owner?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  tags?: IamResourceResourceOVHTags;
  /** Resource type. All types can be retrieved at /reference/resource/type */
  readonly type?: string;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Fields to add a tag to a resource
 */
export interface IamResourceAddTagOVH {
  /** Resource tag key. It must comply with '^[a-zA-Z0-9_.:/=+@-]{1,128}\z' */
  key: string;
  /** Resource tag value. It must comply with '^[a-zA-Z0-9_.:/=+@-]{0,256}\z' */
  value: string;
}

/**
 * Action that can be allowed or denied on a resource
 */
export interface IamReferenceActionOVH {
  /** Name of the action */
  readonly action?: string;
  /** List of categories the action belongs to */
  readonly categories?: readonly string[];
  /** Description of the action */
  readonly description?: string;
  /** Whether you can use the action with additional parameters */
  readonly hasQueryParameters?: boolean;
  /** Resource type related to the action */
  readonly resourceType?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamPolicySingleResourceOVHTags = {[key: string]: string} | null;

/**
 * Single resource in a policy
 */
export interface IamPolicySingleResourceOVH {
  /** Display name of the resource */
  readonly displayName?: string;
  /** Unique identifier of the resource */
  readonly id?: string;
  /** Name of the resource */
  readonly name?: string;
  /** Owner of the resource */
  readonly owner?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamPolicySingleResourceOVHTags;
  /** Resource type. All types can be retrieved at /reference/resource/type */
  readonly type?: string;
}

/**
 * Resource object, if resource is a single resource
 * @nullable
 */
export type IamPolicyResourceOVHResource = IamPolicySingleResourceOVH | null;

/**
 * Resource in a policy
 */
export interface IamPolicyResourceOVH {
  /**
   * Group object, if resource is a group
   * @nullable
   */
  readonly group?: IamPolicyResourceOVHGroup;
  /**
   * Resource object, if resource is a single resource
   * @nullable
   */
  readonly resource?: IamPolicyResourceOVHResource;
  /** URN of the resource */
  urn: string;
}

/**
 * Permissions included in a policy
 */
export interface IamPolicyPermissionsOVH {
  /**
   * List of allowed actions
   * @nullable
   */
  allow?: IamPolicyActionOVH[] | null;
  /**
   * Actions to deny the access to
   * @nullable
   */
  deny?: IamPolicyActionOVH[] | null;
  /**
   * Actions to filter from the allowed list
   * @nullable
   */
  except?: IamPolicyActionOVH[] | null;
}

/**
 * Permissions embedded in the permissions group
 * @nullable
 */
export type IamPolicyPermissionsGroupOVHPermissions = IamPolicyPermissionsOVH | null;

/**
 * Permissions group linked to a policy
 */
export interface IamPolicyPermissionsGroupOVH {
  /**
   * Name of the permissions group
   * @nullable
   */
  readonly name?: string | null;
  /**
   * Owner of the permissions group
   * @nullable
   */
  readonly owner?: string | null;
  /**
   * Permissions embedded in the permissions group
   * @nullable
   */
  readonly permissions?: IamPolicyPermissionsGroupOVHPermissions;
  /** URN of the permissions group */
  urn?: string;
}

/**
 * Properties needed to update a policy
 */
export interface IamPolicyUpdateOVH {
  /** Description of the policy */
  description?: string;
  /**
   * Expiration date of the policy, after this date it will no longer be applied
   * @nullable
   */
  expiredAt?: string | null;
  /** Recipients of the delegated resources */
  identities: string[];
  /** Name of the policy */
  name: string;
  /** Permissions accorded to the recipients on the given resources */
  permissions: IamPolicyPermissionsOVH;
  /**
   * Permissions groups accorded to the recipients on the given resources
   * @nullable
   */
  permissionsGroups?: IamPolicyPermissionsGroupOVH[] | null;
  /** Resources to delegate */
  resources: IamPolicyResourceOVH[];
}

/**
 * Policy definition
 */
export interface IamPolicyResponseOVH {
  /** Creation time */
  readonly createdAt?: string;
  /**
   * Description of the policy
   * @nullable
   */
  readonly description?: string | null;
  /**
   * Expiration date of the policy, after this date it will no longer be applied
   * @nullable
   */
  readonly expiredAt?: string | null;
  /** Unique identifier of the policy */
  readonly id?: string;
  /** Recipients of the delegated resources */
  readonly identities?: readonly string[];
  /** Name of the policy */
  readonly name?: string;
  /** Owner of the policy */
  readonly owner?: string;
  /** Permissions accorded to the recipients on the given resources */
  readonly permissions?: IamPolicyPermissionsOVH;
  /** Permissions groups accorded to the recipients on the given resources */
  readonly permissionsGroups?: readonly IamPolicyPermissionsGroupOVH[];
  /** Whether you can update policy */
  readonly readOnly?: boolean;
  /** Resources to delegate */
  readonly resources?: readonly IamPolicyResourceOVH[];
  /**
   * Last update time
   * @nullable
   */
  readonly updatedAt?: string | null;
}

/**
 * Group defines a set of resources
 */
export interface IamPolicyGroupOVH {
  /** Unique identifier of the group */
  readonly id?: string;
  /** Name of the group */
  readonly name?: string;
  /** Whether you can add or remove resources */
  readonly readOnly?: boolean;
}

/**
 * Group object, if resource is a group
 * @nullable
 */
export type IamPolicyResourceOVHGroup = IamPolicyGroupOVH | null;

/**
 * Policy definition
 */
export interface IamPolicyCreationOVH {
  /** Description of the policy */
  description?: string;
  /**
   * Expiration date of the policy, after this date it will no longer be applied
   * @nullable
   */
  expiredAt?: string | null;
  /** Recipients of the delegated resources */
  identities: string[];
  /** Name of the policy */
  name: string;
  /** Permissions accorded to the recipients on the given resources */
  permissions: IamPolicyPermissionsOVH;
  /**
   * Permissions groups accorded to the recipients on the given resources
   * @nullable
   */
  permissionsGroups?: IamPolicyPermissionsGroupOVH[] | null;
  /** Resources to delegate */
  resources: IamPolicyResourceOVH[];
}

/**
 * Action that can be allowed or denied on a resource
 */
export interface IamPolicyActionOVH {
  /** Name of the action */
  action: string;
}

/**
 * Forward logs response
 */
export interface IamLogsForwardResponseOVH {
  /** Identifier of the operation */
  readonly operationId?: string;
}

/**
 * Forward logs request
 */
export interface IamLogsForwardRequestOVH {
  /** Identifier of the destination logs stream */
  streamId: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamGroupResourceOVHTags = {[key: string]: string} | null;

/**
 * Resource is an entity standing for a product. It is used for right delegation
 */
export interface IamGroupResourceOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  id?: string;
  /**
   * Resource name
   * @nullable
   */
  readonly name?: string | null;
  /**
   * Resource owner
   * @nullable
   */
  readonly owner?: string | null;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamGroupResourceOVHTags;
  /**
   * Resource type. All types can be retrieved at /reference/resource/type
   * @nullable
   */
  readonly type?: string | null;
  /**
   * Unique resource name used in policies
   * @nullable
   */
  urn?: string | null;
}

/**
 * Fields to update for a given group
 */
export interface IamGroupUpdateOVH {
  /** New name of the group */
  name: string;
  /** New list of resources of the group */
  resources: IamGroupResourceOVH[];
}

/**
 * Group defines a set of resources
 */
export interface IamGroupResponseOVH {
  /** Creation time */
  readonly createdAt?: string;
  /** Unique identifier of the group */
  readonly id?: string;
  /** Name of the group */
  readonly name?: string;
  /** Owner of the group */
  readonly owner?: string;
  /** Whether you can add or remove resources */
  readonly readOnly?: boolean;
  /** Resources included in the group */
  readonly resources?: readonly IamGroupResourceOVH[];
  /**
   * Last update time
   * @nullable
   */
  readonly updatedAt?: string | null;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Properties needed to create a group
 */
export interface IamGroupCreationOVH {
  /** Name of the group */
  name: string;
  /** Resources to add in the created group */
  resources?: IamGroupResourceOVH[];
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Permissions group defines a re-usable set of permissions
 */
export interface IamPermissionsGroupOVH {
  /** Creation time */
  readonly createdAt?: string;
  /** Description of the permissions group */
  description: string;
  /** Unique identifier of the permissions group */
  readonly id?: string;
  /** Name of the permissions group */
  name: string;
  /** Owner of the permissions group */
  readonly owner?: string;
  /** Permissions granted when using this permissions group */
  permissions: IamPolicyPermissionsOVH;
  /**
   * Last update time
   * @nullable
   */
  readonly updatedAt?: string | null;
  /** Unique resource name used in policies to include this permissions group */
  readonly urn?: string;
}

/**
 * Result of an authorization request
 */
export interface IamAuthorizeResponseOVH {
  /** Authorized actions */
  readonly authorizedActions?: readonly string[];
  /** Unauthorized actions */
  readonly unauthorizedActions?: readonly string[];
}

/**
 * Authorization request
 */
export interface IamAuthorizeRequestOVH {
  /** List of actions to check authorizations for */
  actions: string[];
}

/**
 * Result of an authorization request
 */
export interface IamAuthorizeBatchResponseOVH {
  /** Authorized actions */
  readonly authorizedActions?: readonly string[];
  /** URN of the resource */
  readonly resourceURN?: string;
  /** Unauthorized actions */
  readonly unauthorizedActions?: readonly string[];
}

/**
 * Authorization request
 */
export interface IamAuthorizeBatchRequestOVH {
  /** List of actions to check authorizations for */
  actions: string[];
  /** Resources on which accesses should be checked */
  resourceURNs: string[];
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * Temporary url information
 */
export interface DbaasLogsTemporaryLogsLinkOVH {
  /** Temporary url expiration date */
  readonly expirationDate?: string;
  /** Temporary url */
  readonly url?: string;
}

/**
 * Log temporary URL creation payload
 */
export interface DbaasLogsLogUrlCreationOVH {
  /** Log kind name */
  kind: string;
}

/**
 * Asynchronous operation after subscribing or unsubscribing to a resource logs
 */
export interface DbaasLogsLogSubscriptionResponseOVH {
  /** Identifier of the operation */
  readonly operationId?: string;
  /** Operation owner's service name */
  readonly serviceName?: string;
}

/**
 * Log subscription resource
 */
export interface DbaasLogsLogSubscriptionResourceOVH {
  /** Name of subscribed resource */
  readonly name?: string;
  /** Type of subscribed resource */
  readonly type?: string;
}

/**
 * Log subscription creation payload
 */
export interface DbaasLogsLogSubscriptionCreationOVH {
  /** Log kind name to subscribe to */
  kind: string;
  /** Customer log stream ID */
  streamId: string;
}

/**
 * Log subscription
 */
export interface DbaasLogsLogSubscriptionOVH {
  /** Creation date of the subscription */
  readonly createdAt?: string;
  /** Log kind name of this subscription */
  readonly kind?: string;
  /** Subscribed resource, where the logs come from */
  readonly resource?: DbaasLogsLogSubscriptionResourceOVH;
  /** Name of the destination log service */
  readonly serviceName?: string;
  /** Id of the destination log stream */
  readonly streamId?: string;
  /** Subscription ID */
  readonly subscriptionId?: string;
  /** Last update date of the subscription */
  readonly updatedAt?: string;
}

/**
 * Log kind
 */
export interface DbaasLogsLogKindOVH {
  /** List of additional log fields managed in this log kind */
  readonly additionalReturnedFields?: readonly string[];
  /** Creation date of the log kind */
  readonly createdAt?: string;
  /** Log kind display name */
  readonly displayName?: string;
  /** Log kind ID */
  readonly kindId?: string;
  /** Log kind name */
  readonly name?: string;
  /** Last update date of the log kind */
  readonly updatedAt?: string;
}

