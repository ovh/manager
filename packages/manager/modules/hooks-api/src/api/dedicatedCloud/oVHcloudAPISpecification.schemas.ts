/**
 * Generated by orval v7.3.0 🍺
 * Do not edit manually.
 * OVHcloud API specification
 * Specification for OVHcloud API
 * OpenAPI spec version: 1.0
 */
export type PostDedicatedCloudServiceNameVropsUpgradeBody = {
  /** Target version for VMware Aria Operations upgrade */
  version?: string;
};

export type PostDedicatedCloudServiceNameVropsOutgoingFlowOutgoingFlowIdChangePropertiesBody = {
  /** Outgoing flow description */
  description?: string;
};

export type PostDedicatedCloudServiceNameVropsOutgoingFlowBody = {
  /** Outgoing flow description */
  description?: string;
  /** IP address of the remote service, e.g. 123.100.200.0 */
  ip: Ipv4OVH;
  /** Remote service port (25, 465, 587 or 2525) */
  servicePort: number;
};

export type PostDedicatedCloudServiceNameVmEncryptionKmsKmsIdChangePropertiesBody = {
  /** Description of your option access network */
  description?: string;
  /** SSL thumbprint of the remote service, e.g. A7:61:68:...:61:91:2F */
  sslThumbprint: string;
};

export type PostDedicatedCloudServiceNameVmEncryptionKmsBody = {
  /** Description of your option access network */
  description?: string;
  /** IP address of the remote service, e.g. 123.100.200.0 */
  ip: Ipv4OVH;
  /** SSL thumbprint of the remote service, e.g. A7:61:68:...:61:91:2F */
  sslThumbprint: string;
};

export type PostDedicatedCloudServiceNameVendorOvhIdBody = {
  /** object type */
  objectType: DedicatedCloudVendorObjectTypeEnumOVH;
  /** object type id */
  vendorId: string;
};

export type PostDedicatedCloudServiceNameUserUserIdTaskTaskIdResetTaskStateBody = {
  /** Reason of task restart */
  reason: string;
};

export type PostDedicatedCloudServiceNameUserUserIdTaskTaskIdChangeMaintenanceExecutionDateBody = {
  /** The new execution date */
  executionDate: string;
};

export type GetDedicatedCloudServiceNameUserUserIdTaskParams = {
/**
 * Filter the value of name property (like)
 */
name?: string;
/**
 * Filter the value of state property (=)
 */
state?: DedicatedCloudTaskStateEnumOVH;
};

export type PostDedicatedCloudServiceNameUserUserIdObjectRightBody = {
  /** Right propagation on children objects */
  propagate?: boolean;
  /** User access on the VMware object */
  right: DedicatedCloudRightRightEnumOVH;
  /** Type of the object */
  type: DedicatedCloudRightUserObjectRightTypeEnumOVH;
  /** The VMware MoRef of the object */
  vmwareObjectId: string;
};

export type PostDedicatedCloudServiceNameUserUserIdConfirmPhoneNumberBody = {
  /** Token sent by SMS */
  token: string;
};

export type PostDedicatedCloudServiceNameUserUserIdChangePropertiesBody = {
  /** Defines if the user can manage ip failovers */
  canManageIpFailOvers?: boolean;
  /** Defines if the user can manage the network */
  canManageNetwork?: boolean;
  /** Defines if the user can manage the users rights */
  canManageRights?: boolean;
  /** Email address of the user */
  email?: string;
  /** Defines if the user can manage encryption / KMS configuration */
  encryptionRight?: boolean;
  /** First name of the user */
  firstName?: string;
  /** Defines if the user is a full admin in readonly */
  fullAdminRo?: boolean;
  /** Last name of the user */
  lastName?: string;
  /** Is this User able to access nsx interface (requires NSX option) */
  nsxRight?: boolean;
  /** Mobile phone number of the user in international format (+prefix.number) */
  phoneNumber?: string;
  /** Defines if the user receives technical alerts */
  receiveAlerts?: boolean;
  /** Defines if the user can confirm security tokens (if a compatible option is enabled) */
  tokenValidator?: boolean;
};

export type PostDedicatedCloudServiceNameUserUserIdChangePasswordBody = {
  /** New password for this VMware on OVHcloud user. It must fit your VMware on OVHcloud password policy. If this field is empty, a random password will be generated and sent by email. */
  password?: string;
};

export type PostDedicatedCloudServiceNameUserBody = {
  /** Is this User able to add ressources in the Datacenter he has access ? (default is no right to add ressource) */
  canAddRessource?: boolean;
  /** Is this user able to manage the users rights */
  canManageRights?: boolean;
  /** The user email. If this field is empty, user informations will be sent to the dedicatedCloud administrator contact. */
  email?: string;
  /** Defines if the user can manage encryption / KMS configuration */
  encryptionRight?: boolean;
  /** Date of removal of the user. */
  expirationDate?: string;
  /** First name of the user */
  firstName?: string;
  /** Last name of the user */
  lastName?: string;
  /** Name of the user (login) */
  name: string;
  /** Determine how this user will be able to act on this VMware on OVHcloud v(x)Lans */
  networkRole?: DedicatedCloudRightNetworkRoleEnumOVH;
  /** Is this User able to access nsx interface (requires NSX option) */
  nsxRight?: boolean;
  /** The user password. It must fits your VMware on OVHcloud password policy. If this field is empty, a random password will be generated and sent by email. */
  password?: string;
  /** Mobile phone number of the user */
  phoneNumber?: string;
  /** Defines if the user receives technical alerts */
  receiveAlerts?: boolean;
  /** Determine what kind of access the User will have in all Datacenters of your VMware on OVHcloud (default is disabled) */
  right?: DedicatedCloudRightRightEnumOVH;
  /** Defines if the user can confirm security tokens (if a compatible option is enabled) */
  tokenValidator?: boolean;
  /** Determine how this user will be able to act on this VMware on OVHcloud VM Network */
  vmNetworkRole?: DedicatedCloudRightVmNetworkRoleEnumOVH;
};

export type GetDedicatedCloudServiceNameUserParams = {
/**
 * Filter the value of name property (like)
 */
name?: string;
};

export type PostDedicatedCloudServiceNameUpgradeVcenterBody = {
  /** Version information for vCenter upgrade (minor by default) */
  release?: DedicatedCloudReleaseEnumOVH;
};

export type PostDedicatedCloudServiceNameTwoFAWhitelistIdChangePropertiesBody = {
  /** Description of your whitelist */
  description?: string;
};

export type PostDedicatedCloudServiceNameTwoFAWhitelistBody = {
  /** Description of the exception */
  description: string;
  /** IP address or network of the remote service, e.g. 123.100.200.0 */
  ip: IpBlockOVH;
};

export type PostDedicatedCloudServiceNameTaskTaskIdResetTaskStateBody = {
  /** Reason of task restart */
  reason: string;
};

export type PostDedicatedCloudServiceNameTaskTaskIdChangeMaintenanceExecutionDateBody = {
  /** The new execution date */
  executionDate: string;
};

export type GetDedicatedCloudServiceNameTaskParams = {
/**
 * Filter the value of name property (like)
 */
name?: string;
/**
 * Filter the value of state property (=)
 */
state?: DedicatedCloudTaskStateEnumOVH;
};

export type PostDedicatedCloudServiceNameSyslogForwardForwarderLogForwardIdChangePropertiesBody = {
  /** Log forwarder flow description */
  description?: string;
  /** Minimal log level */
  logLevel: DedicatedCloudSyslogForwardLogLevelEnumOVH;
  /** Use unsecure log forwarding */
  noSsl: boolean;
  /** Possible log sources type */
  sourceType: DedicatedCloudSyslogForwardSourceTypeEnumOVH[];
  /** SSL thumbprint of the remote service */
  sslThumbprint: string;
};

export type PostDedicatedCloudServiceNameSyslogForwardForwarderBody = {
  /** Log forwarder description */
  description?: string;
  /** IP address of the remote service, e.g. 123.100.200.0 */
  ip: Ipv4OVH;
  /** Minimal log level */
  logLevel: DedicatedCloudSyslogForwardLogLevelEnumOVH;
  /** Use unsecure log forwarding */
  noSsl: boolean;
  /** Remote service port */
  servicePort: number;
  /** Possible log sources type */
  sourceType: DedicatedCloudSyslogForwardSourceTypeEnumOVH[];
  /** SSL thumbprint of the remote service */
  sslThumbprint: string;
};

export type PostDedicatedCloudServiceNameSecurityOptionsResumePendingEnablingBody = {
  /** Security option to resume enabling */
  option: DedicatedCloudSecurityOptionSecurityOptionEnumOVH;
};

export type GetDedicatedCloudServiceNameSecurityOptionsDependenciesTreeParams = {
/**
 * Target security option
 */
option: DedicatedCloudSecurityOptionSecurityOptionEnumOVH;
};

export type GetDedicatedCloudServiceNameSecurityOptionsCompatibilityMatrixParams = {
/**
 * Show incompatible security options (enabled by default)
 */
showIncompatible?: boolean;
/**
 * Show internal security options
 */
showInternal?: boolean;
};

export type PostDedicatedCloudServiceNameOrderNewFilerHourlyBody = {
  /** Filer profile you want to order */
  name: string;
};

export type PostDedicatedCloudServiceNameLogUrlBody = {
  /** Log kinds for your dedicated cloud */
  kind: string;
};

export type PostDedicatedCloudServiceNameLogSubscriptionBody = {
  /** Log kind name of the subscription */
  kind: string;
  /** Id of the destination log stream */
  streamId: string;
};

export type GetDedicatedCloudServiceNameLogSubscriptionParams = {
/**
 * Filter the value of kind property (=)
 */
kind?: string;
};

export type PostDedicatedCloudServiceNameIpNetworkTaskTaskIdResetTaskStateBody = {
  /** Reason of task restart */
  reason: string;
};

export type PostDedicatedCloudServiceNameIpNetworkTaskTaskIdChangeMaintenanceExecutionDateBody = {
  /** The new execution date */
  executionDate: string;
};

export type GetDedicatedCloudServiceNameIpNetworkTaskParams = {
/**
 * Filter the value of name property (like)
 */
name?: string;
/**
 * Filter the value of state property (=)
 */
state?: DedicatedCloudTaskStateEnumOVH;
};

export type PostDedicatedCloudServiceNameIamAddRoleBody = {
  /** Role name, e.g. mygroup */
  name: string;
};

export type GetDedicatedCloudServiceNameGlobalTasksParams = {
/**
 * Filter the tasks by datacenter Id
 */
datacenterId?: number;
/**
 * Filter the tasks by end date (>=)
 */
'endDate.from'?: string;
/**
 * Filter the tasks by end date (<=)
 */
'endDate.to'?: string;
/**
 * Filter the tasks by execution date (>=)
 */
'executionDate.from'?: string;
/**
 * Filter the tasks by execution date (<=)
 */
'executionDate.to'?: string;
/**
 * Filter the tasks by filer Id
 */
filerId?: number;
/**
 * Filter the tasks by host Id
 */
hostId?: number;
/**
 * Filter the tasks by last modification date (>=)
 */
'lastModificationDate.from'?: string;
/**
 * Filter the tasks by last modification date (<=)
 */
'lastModificationDate.to'?: string;
/**
 * Filter the tasks by name
 */
name?: string;
/**
 * Filter the tasks by network access Id
 */
networkAccessId?: number;
/**
 * Filter the tasks by order Id
 */
orderId?: number;
/**
 * Filter the tasks by parent task Id
 */
parentTaskId?: number;
/**
 * Filter the tasks by state
 */
state?: DedicatedCloudTaskStateEnumOVH[];
/**
 * Filter the tasks by user Id
 */
userId?: number;
/**
 * Filter the tasks by vlan Id
 */
vlanId?: number;
};

export type PostDedicatedCloudServiceNameFilerFilerIdTaskTaskIdResetTaskStateBody = {
  /** Reason of task restart */
  reason: string;
};

export type PostDedicatedCloudServiceNameFilerFilerIdTaskTaskIdChangeMaintenanceExecutionDateBody = {
  /** The new execution date */
  executionDate: string;
};

export type GetDedicatedCloudServiceNameFilerFilerIdTaskParams = {
/**
 * Filter the value of name property (like)
 */
name?: string;
/**
 * Filter the value of state property (=)
 */
state?: DedicatedCloudTaskStateEnumOVH;
};

export type GetDedicatedCloudServiceNameFilerFilerIdLocationParams = {
/**
 * Filer cluster node used to get location (default value: master)
 */
node?: DedicatedCloudFilerNodeTypeEnumOVH;
};

export type PostDedicatedCloudServiceNameFederationActiveDirectoryActiveDirectoryIdGrantActiveDirectoryUserBody = {
  /** Active Directory user name (pre-Windows 2000 name), e.g. jdoe@example.com or jdoe */
  username: string;
};

export type PostDedicatedCloudServiceNameFederationActiveDirectoryActiveDirectoryIdGrantActiveDirectoryGroupBody = {
  /** Active Directory group name (pre-Windows 2000 name), e.g. mygroup */
  groupName: string;
};

export type PostDedicatedCloudServiceNameFederationActiveDirectoryActiveDirectoryIdChangePropertiesBody = {
  /** Description of your option access network */
  description?: string;
  /** Active Directory password */
  password: string;
  /** SSL thumbprint of the remote service, e.g. A7:61:68:...:61:91:2F */
  sslThumbprint?: string;
  /** Active Directory user name (pre-Windows 2000 name), e.g. jdoe@example.com or jdoe */
  username: string;
};

export type PostDedicatedCloudServiceNameFederationActiveDirectoryBody = {
  /** Active Directory base DN for groups, e.g. dc=example,dc=com */
  baseDnForGroups: string;
  /** Active Directory base DN for users, e.g. dc=example,dc=com */
  baseDnForUsers: string;
  /** Description of your option access network */
  description?: string;
  /** Active Directory NetBIOS name, e.g. example */
  domainAlias: string;
  /** Active Directory domain name, e.g. example.com */
  domainName: string;
  /** IP address of the remote service, e.g. 123.100.200.0 */
  ip: Ipv4OVH;
  /** Active Directory LDAP hostname */
  ldapHostname?: string;
  /** Active Directory LDAP/LDAPS TCP port (636 for LDAPS or 389 for LDAP) */
  ldapTcpPort?: number;
  /** Use unsecure LDAP instead of LDAPS */
  noSsl?: boolean;
  /** Active Directory password */
  password: string;
  /** SSL thumbprint of the remote service, e.g. A7:61:68:...:61:91:2F */
  sslThumbprint?: string;
  /** Active Directory user name (pre-Windows 2000 name), e.g. jdoe@example.com */
  username: string;
};

export type GetDedicatedCloudServiceNameDatacenterDatacenterIdVmLicensedParams = {
/**
 * Only display virtual machines with this license
 */
kmsLicense?: DedicatedCloudSplaKmsLicenseIncludingLegacyEnumOVH;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdVmVmIdSetLicenseBody = {
  /** Bypass compatibility check between managed license and current VMware guest configured OS family */
  bypassGuestOsFamilyCheck: boolean;
  /** License to use */
  kmsLicense: DedicatedCloudSplaKmsLicenseEnumOVH;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdVmVmIdRestoreBackupBody = {
  /** Id of the filer where we should restore this Backup */
  filerId: number;
  /** Type of filer where vm will be restored(Default value : nas) */
  filerType?: DedicatedCloudFilerFilerTypeEnumOVH;
  /** Id of the restorePoint you want to restore */
  restorePointId: number;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdVmVmIdEnableCarpBody = {
  /** Mac address of the port to enable Carp */
  macAddress: string;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdVmVmIdEnableBackupBody = {
  /** List of days your Virtual Machine will be backuped */
  backupDays: DedicatedCloudBackupBackupDaysEnumOVH[];
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdVmVmIdEditBackupBody = {
  /** List of days your Virtual Machine will be backuped */
  backupDays: DedicatedCloudBackupBackupDaysEnumOVH[];
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdVmVmIdDisableCarpBody = {
  /** Mac address of the port to enable Carp */
  macAddress: string;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdTaskTaskIdResetTaskStateBody = {
  /** Reason of task restart */
  reason: string;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdTaskTaskIdChangeMaintenanceExecutionDateBody = {
  /** The new execution date */
  executionDate: string;
};

export type GetDedicatedCloudServiceNameDatacenterDatacenterIdTaskParams = {
/**
 * Filter the value of name property (like)
 */
name?: string;
/**
 * Filter the value of state property (=)
 */
state?: DedicatedCloudTaskStateEnumOVH;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdPrivateGatewayReconfigureBody = {
  /** Ip to set on your private gateway in your network */
  ip?: IpOVH;
  /** Your netmask to set on the private gateway */
  netmask?: IpOVH;
  /** Datacenter id where your private gateway will be moved */
  newDatacenterId?: number;
  /** Portgroup in your VMware on OVHcloud used to deploy the private gateway */
  portgroup?: string;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdPrivateGatewayEnableBody = {
  /** Ip to set on your private gateway in your network */
  ip: IpOVH;
  /** Your netmask to set on the private gateway */
  netmask: IpOVH;
  /** Portgroup in your VMware on OVHcloud used to deploy the private gateway */
  portgroup: string;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdOrderNewHostHourlyBody = {
  /** Host profile you want to order */
  name: string;
  /** Id of the cluster you want the host to be added ("domain-cXX") */
  vmwareClusterId?: string;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdOrderNewFilerHourlyBody = {
  /** Filer profile you want to order */
  name: string;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdNsxtEdgeNsxtEdgeIdResilienceEnableBody = {
  /** Duration test in minutes. NSX-T Edge will be reconnected after this period (min:10min, max:24h, default:1h) */
  duration?: number;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdNsxtEdgeNsxtEdgeIdRelocateEdgeBody = {
  /** Datastore where you want to relocate NSX-T Edge disks */
  datastore: string;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdHostHostIdTaskTaskIdResetTaskStateBody = {
  /** Reason of task restart */
  reason: string;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdHostHostIdTaskTaskIdChangeMaintenanceExecutionDateBody = {
  /** The new execution date */
  executionDate: string;
};

export type GetDedicatedCloudServiceNameDatacenterDatacenterIdHostHostIdTaskParams = {
/**
 * Filter the value of name property (like)
 */
name?: string;
/**
 * Filter the value of state property (=)
 */
state?: DedicatedCloudTaskStateEnumOVH;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdHostHostIdResilienceEnableBody = {
  /** Duration test in minutes. Host will be reconnected after this period (min:10min, max:24h, default:1h) */
  duration?: number;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdHostHostIdAddHostSpareBody = {
  /** Reason of spare add */
  reason: string;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdFilerFilerIdTaskTaskIdResetTaskStateBody = {
  /** Reason of task restart */
  reason: string;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdFilerFilerIdTaskTaskIdChangeMaintenanceExecutionDateBody = {
  /** The new execution date */
  executionDate: string;
};

export type GetDedicatedCloudServiceNameDatacenterDatacenterIdFilerFilerIdTaskParams = {
/**
 * Filter the value of name property (like)
 */
name?: string;
/**
 * Filter the value of state property (=)
 */
state?: DedicatedCloudTaskStateEnumOVH;
};

export type GetDedicatedCloudServiceNameDatacenterDatacenterIdFilerFilerIdLocationParams = {
/**
 * Filer cluster node used to get location (default value: master)
 */
node?: DedicatedCloudFilerNodeTypeEnumOVH;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdDisasterRecoveryZertoSingleRemoteSitesBody = {
  /** The name for this connection */
  label: string;
  /** Pre-Shared Key to secure data transfer between both sites */
  preSharedKey: string;
  /** Your onsite endpoint internal IP for the secured replication data tunnel */
  remoteEndpointInternalIp: Ipv4OVH;
  /** Your onsite endpoint public IP for the secured replication data tunnel */
  remoteEndpointPublicIp: Ipv4OVH;
  /** Internal zerto subnet of your onsite infrastructure (ip/cidr) */
  remoteVraNetwork: Ipv4BlockOVH;
  /** Internal ZVM ip of your onsite infrastructure */
  remoteZvmInternalIp: Ipv4OVH;
};

export type DeleteDedicatedCloudServiceNameDatacenterDatacenterIdDisasterRecoveryZertoSingleRemoteSitesParams = {
/**
 * The id number of the network to remove (as returned by a GET call)
 */
id: number;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdDisasterRecoveryZertoSingleEndpointPublicIpBody = {
  /** Your new public IP on your VMware on OVHcloud for the secured replication data tunnel endpoint */
  newEndpointPublicIp: IpOVH;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdDisasterRecoveryZertoSingleConfigureVpnBody = {
  /** Pre-Shared Key to secure data transfer between both sites */
  preSharedKey: string;
  /** Your onsite endpoint internal IP for the secured replication data tunnel */
  remoteEndpointInternalIp: Ipv4OVH;
  /** Your onsite endpoint public IP for the secured replication data tunnel */
  remoteEndpointPublicIp: Ipv4OVH;
  /** Internal zerto subnet of your onsite infrastructure (ip/cidr) */
  remoteVraNetwork?: Ipv4BlockOVH;
  /** Internal ZVM ip of your onsite infrastructure */
  remoteZvmInternalIp: Ipv4OVH;
};

export type GetDedicatedCloudServiceNameDatacenterDatacenterIdDisasterRecoveryZertoUsageReportParams = {
/**
 * Billing month
 */
month: number;
/**
 * Billing year
 */
year: number;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdDisasterRecoveryZertoRemoteSitesBody = {
  /** The name for this connection */
  label: string;
  /** Pre-Shared Key to secure data transfer between both sites */
  preSharedKey: string;
  /** Your onsite endpoint internal IP for the secured replication data tunnel */
  remoteEndpointInternalIp: Ipv4OVH;
  /** Your onsite endpoint public IP for the secured replication data tunnel */
  remoteEndpointPublicIp: Ipv4OVH;
  /** Internal zerto subnet of your onsite infrastructure (ip/cidr) */
  remoteVraNetwork: Ipv4BlockOVH;
  /** Internal ZVM ip of your onsite infrastructure */
  remoteZvmInternalIp: Ipv4OVH;
};

export type DeleteDedicatedCloudServiceNameDatacenterDatacenterIdDisasterRecoveryZertoRemoteSitesParams = {
/**
 * The id number of the network to remove (as returned by a GET call)
 */
id: number;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdDisasterRecoveryZertoEndpointPublicIpBody = {
  /** Your new public IP for the secured replication data tunnel endpoint */
  newEndpointPublicIp: IpOVH;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdDisasterRecoveryZertoDisableBody = {
  /** Your secondary datacenter id */
  secondaryDatacenterId: number;
  /** Your secondary dedicatedCloud */
  secondaryServiceName: string;
};

export type PutDedicatedCloudServiceNameDatacenterDatacenterIdClusterClusterIdAutoscaleBody = {
  /** Mode of Auto Scale-In Host operation: If automatic - Scale-In operation of Host is fully Automatic else based on the alert user has to take action */
  autoScaleInHost?: DedicatedCloudClusterAutoScaleModeEnumOVH;
  /** Mode of Auto Scale-Out Host operation: If automatic - Scale-Out operation of Host is fully Automatic else based on the alert user has to take action */
  autoScaleOutHost?: DedicatedCloudClusterAutoScaleModeEnumOVH;
  /** Mode of Auto Scale-Out Storage operation: If automatic - Scale-Out operation of storage fully Automatic else based on the alert user has to take action */
  autoScaleOutStorage?: DedicatedCloudClusterAutoScaleModeEnumOVH;
  /** ID of the AutoScale Configuration */
  configId?: number;
  /** checked - Puts Autoscale under Maintenance, unchecked - Removes maintenance */
  inMaintenanceMode?: boolean;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdClusterClusterIdAutoscaleBody = {
  /** Mode of Auto Scale-In Host operation: If automatic - Scale-In operation of Host is fully Automatic else based on the alert user has to take action */
  autoScaleInHost: DedicatedCloudClusterAutoScaleModeEnumOVH;
  /** Mode of Auto Scale-Out Host operation: If automatic - Scale-Out operation of Host is fully Automatic else based on the alert user has to take action */
  autoScaleOutHost: DedicatedCloudClusterAutoScaleModeEnumOVH;
  /** Mode of Auto Scale-Out Storage operation: If automatic - Scale-Out operation of storage fully Automatic else based on the alert user has to take action */
  autoScaleOutStorage: DedicatedCloudClusterAutoScaleModeEnumOVH;
  /** ID of the AutoScale Configuration */
  configId: number;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdBackupChangePropertiesBody = {
  /** Duration on email report */
  backupDurationInReport: boolean;
  /** Backup offer type */
  backupOffer: DedicatedCloudBackupOfferTypeEnumOVH;
  /** Backup size on day on email report */
  backupSizeInReport: boolean;
  /** Disk size on mail report */
  diskSizeInReport: boolean;
  /** Full day on mail report */
  fullDayInReport: boolean;
  /** Unique additional email address for backup daily report */
  mailAddress?: string;
  /** RestorePoint number on mail report */
  restorePointInReport: boolean;
  /** Schedule hour for start backup. UTC Timezone */
  scheduleHour?: TimeOVH;
};

export type PostDedicatedCloudServiceNameDatacenterDatacenterIdBackupBatchRestoreBody = {
  /** The backup job name pcc-XXX-XXX-XXX-XXX_vm-XXX if you want to restore one single virtual machine. It can be retrieved in the report sent by generateReport */
  backupJobName?: string;
  /** The backup files location name bkp-XXXXX, it can be retrieved in the report sent by generateReport */
  backupRepositoryName: string;
};

export type PostDedicatedCloudServiceNameDatacenterBody = {
  /** The commercial range of this new datacenter. You can see what commercial ranges are orderable on this API section : /dedicatedCloud/commercialRange/ */
  commercialRangeName: string;
  /** Name of the Vrack link to the new datacenter. */
  vrackName?: string;
};

export type PostDedicatedCloudServiceNameConfirmTerminationBody = {
  /** Commentary about your termination request */
  commentary?: string;
  /** What next after your termination request */
  futureUse?: ServiceTerminationFutureUseEnumOVH;
  /** Reason of your termination request */
  reason?: ServiceTerminationReasonEnumOVH;
  /** The termination token sent by email to the admin contact */
  token: string;
};

export type PostDedicatedCloudServiceNameChangePropertiesBody = {
  /** Description of your VMware on OVHcloud */
  description?: string;
  /** Enable SSL v3 support. Warning: this option is not recommended as it was recognized as a security breach. If this is enabled, we advise you to enable the filtered User access policy */
  sslV3?: boolean;
  /** Access policy of your VMware on OVHcloud: opened to each IP or filtered */
  userAccessPolicy?: DedicatedCloudUserAccessPolicyEnumOVH;
  /** The maximum amount of connected users allowed on the VMware on OVHcloud management interface */
  userLimitConcurrentSession?: number;
  /** Logout policy of your VMware on OVHcloud */
  userLogoutPolicy?: DedicatedCloudUserLogoutPolicyEnumOVH;
  /** The timeout (in seconds) for the user sessions on the VMware on OVHcloud management interface. 0 value disable the timeout */
  userSessionTimeout?: number;
};

export type PostDedicatedCloudServiceNameChangeContactBody = {
  /** The contact to set as admin contact */
  contactAdmin?: string;
  /** The contact to set as billing contact */
  contactBilling?: string;
  /** The contact to set as tech contact */
  contactTech?: string;
};

export type GetDedicatedCloudServiceNameCanDeployNsxtEdgesOnGlobalDatastoresParams = {
/**
 * Number of edges wanted
 */
count?: number;
/**
 * Size of NSX-T edge (default to MEDIUM)
 */
size?: DedicatedCloudNsxtNsxtEdgeSizeEnumOVH;
};

export type PostDedicatedCloudServiceNameAutoscaleConfigurationBody = {
  /** CPU Max Threshold */
  cpuMaxThreshold: number;
  /** CPU Min Threshold */
  cpuMinThreshold: number;
  /** Description of AutoScale configurations */
  description?: string;
  /** Maximum number of hosts in the cluster */
  maxNumOfHosts: number;
  /** Memory Max Threshold */
  memMaxThreshold: number;
  /** Memory Min Threshold */
  memMinThreshold: number;
  /** Minimum number of hosts in the cluster */
  minNumOfHosts: number;
  /** Storage Max Threshold */
  storageMaxThreshold: number;
  /** Time delay between two scale-ins in mins */
  timeDelayScaleIn: number;
  /** Time delay between two scale-outs in mins */
  timeDelayScaleOut: number;
  /** Time delay between two storage scale-outs in mins */
  timeDelayStorageScaleOut: number;
};

export type PostDedicatedCloudServiceNameAllowedNetworkNetworkAccessIdTaskTaskIdResetTaskStateBody = {
  /** Reason of task restart */
  reason: string;
};

export type PostDedicatedCloudServiceNameAllowedNetworkNetworkAccessIdTaskTaskIdChangeMaintenanceExecutionDateBody = {
  /** The new execution date */
  executionDate: string;
};

export type GetDedicatedCloudServiceNameAllowedNetworkNetworkAccessIdTaskParams = {
/**
 * Filter the value of name property (like)
 */
name?: string;
/**
 * Filter the value of state property (=)
 */
state?: DedicatedCloudTaskStateEnumOVH;
};

export type PostDedicatedCloudServiceNameAllowedNetworkBody = {
  /** Description for your ACL */
  description?: string;
  /** Network name, e.g. 123.100.200.0/32 */
  network: Ipv4BlockOVH;
};

export type GetDedicatedCloudLocationPccZoneStockZpoolParams = {
/**
 * Profile filter
 */
profileFilter?: string;
};

export type GetDedicatedCloudLocationPccZoneStockHostParams = {
/**
 * Minimum reference year
 */
minYear?: number;
};

export type GetDedicatedCloudParams = {
/**
 * Filter resources on IAM tags
 */
iamTags?: {[key: string]: IamResourceTagFilterOVH[]};
};

/**
 * VMware on OVHcloud vRack link
 */
export interface VrackDedicatedCloudOVH {
  /** your dedicated cloud service */
  readonly dedicatedCloud?: string;
  /**
   * Dedicated cloud vlanId used
   * @nullable
   */
  readonly vlanId?: number | null;
  /** vrack name */
  readonly vrack?: string;
}

/**
 * All states a vRack Task can be in
 */
export type VrackTaskStatusEnumOVH = typeof VrackTaskStatusEnumOVH[keyof typeof VrackTaskStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VrackTaskStatusEnumOVH = {
  cancelled: 'cancelled',
  doing: 'doing',
  done: 'done',
  init: 'init',
  todo: 'todo',
} as const;

/**
 * vrack tasks
 */
export interface VrackTaskOVH {
  readonly function?: string;
  readonly id?: number;
  /** @nullable */
  readonly lastUpdate?: string | null;
  /** @nullable */
  readonly orderId?: number | null;
  /** @nullable */
  readonly serviceName?: string | null;
  /** Task status */
  readonly status?: VrackTaskStatusEnumOVH;
  /** @nullable */
  readonly targetDomain?: string | null;
  /** @nullable */
  readonly todoDate?: string | null;
}

/**
 * Time (e.g., 15:04:05)
 */
export type TimeOVH = string;

/**
 * Way of handling the renew
 * @nullable
 */
export type ServicesServiceOVHRenew = ServiceRenewTypeOVH | null;

/**
 * All reasons you can provide for a service termination
 */
export type ServiceTerminationReasonEnumOVH = typeof ServiceTerminationReasonEnumOVH[keyof typeof ServiceTerminationReasonEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationReasonEnumOVH = {
  FEATURES_DONT_SUIT_ME: 'FEATURES_DONT_SUIT_ME',
  LACK_OF_PERFORMANCES: 'LACK_OF_PERFORMANCES',
  MIGRATED_TO_ANOTHER_OVH_PRODUCT: 'MIGRATED_TO_ANOTHER_OVH_PRODUCT',
  MIGRATED_TO_COMPETITOR: 'MIGRATED_TO_COMPETITOR',
  NOT_ENOUGH_RECOGNITION: 'NOT_ENOUGH_RECOGNITION',
  NOT_NEEDED_ANYMORE: 'NOT_NEEDED_ANYMORE',
  NOT_RELIABLE: 'NOT_RELIABLE',
  NO_ANSWER: 'NO_ANSWER',
  OTHER: 'OTHER',
  PRODUCT_DIMENSION_DONT_SUIT_ME: 'PRODUCT_DIMENSION_DONT_SUIT_ME',
  PRODUCT_TOOLS_DONT_SUIT_ME: 'PRODUCT_TOOLS_DONT_SUIT_ME',
  TOO_EXPENSIVE: 'TOO_EXPENSIVE',
  TOO_HARD_TO_USE: 'TOO_HARD_TO_USE',
  UNSATIFIED_BY_CUSTOMER_SUPPORT: 'UNSATIFIED_BY_CUSTOMER_SUPPORT',
} as const;

/**
 * All future uses you can provide for a service termination
 */
export type ServiceTerminationFutureUseEnumOVH = typeof ServiceTerminationFutureUseEnumOVH[keyof typeof ServiceTerminationFutureUseEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceTerminationFutureUseEnumOVH = {
  NOT_REPLACING_SERVICE: 'NOT_REPLACING_SERVICE',
  OTHER: 'OTHER',
  SUBSCRIBE_AN_OTHER_SERVICE: 'SUBSCRIBE_AN_OTHER_SERVICE',
  SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR',
  SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR: 'SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR',
} as const;

export type ServiceStateEnumOVH = typeof ServiceStateEnumOVH[keyof typeof ServiceStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceStateEnumOVH = {
  autorenewInProgress: 'autorenewInProgress',
  expired: 'expired',
  inCreation: 'inCreation',
  ok: 'ok',
  pendingDebt: 'pendingDebt',
  unPaid: 'unPaid',
} as const;

/**
 * Detailed renewal type of a service
 */
export type ServiceRenewalTypeEnumOVH = typeof ServiceRenewalTypeEnumOVH[keyof typeof ServiceRenewalTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceRenewalTypeEnumOVH = {
  automaticForcedProduct: 'automaticForcedProduct',
  automaticV2012: 'automaticV2012',
  automaticV2014: 'automaticV2014',
  automaticV2016: 'automaticV2016',
  automaticV2024: 'automaticV2024',
  manual: 'manual',
  oneShot: 'oneShot',
  option: 'option',
} as const;

/**
 * Details about a Service
 */
export interface ServicesServiceOVH {
  /** Indicates that the service can be set up to be deleted at expiration */
  readonly canDeleteAtExpiration?: boolean;
  readonly contactAdmin?: string;
  readonly contactBilling?: string;
  readonly contactTech?: string;
  readonly creation?: string;
  readonly domain?: string;
  /** @nullable */
  readonly engagedUpTo?: string | null;
  readonly expiration?: string;
  /**
   * All the possible renew period of your service in month
   * @nullable
   */
  readonly possibleRenewPeriod?: readonly number[] | null;
  /**
   * Way of handling the renew
   * @nullable
   */
  renew?: ServicesServiceOVHRenew;
  readonly renewalType?: ServiceRenewalTypeEnumOVH;
  readonly serviceId?: number;
  readonly status?: ServiceStateEnumOVH;
}

/**
 * Map a possible renew for a specific service
 */
export interface ServiceRenewTypeOVH {
  /** The service is automatically renewed */
  automatic?: boolean;
  /** The service will be deleted at expiration */
  deleteAtExpiration?: boolean;
  /** The service forced to be renewed */
  forced?: boolean;
  /**
   * The service needs to be manually renewed and paid
   * @nullable
   */
  manualPayment?: boolean | null;
  /**
   * period of renew in month
   * @nullable
   */
  period?: number | null;
}

/**
 * Phone number
 */
export type PhoneNumberOVH = string;

export type OrderCurrencyCodeEnumOVH = typeof OrderCurrencyCodeEnumOVH[keyof typeof OrderCurrencyCodeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OrderCurrencyCodeEnumOVH = {
  AUD: 'AUD',
  CAD: 'CAD',
  CZK: 'CZK',
  EUR: 'EUR',
  GBP: 'GBP',
  INR: 'INR',
  LTL: 'LTL',
  MAD: 'MAD',
  'N/A': 'N/A',
  PLN: 'PLN',
  SGD: 'SGD',
  TND: 'TND',
  USD: 'USD',
  XOF: 'XOF',
  points: 'points',
} as const;

/**
 * Price with it's currency and textual representation
 */
export interface OrderPriceOVH {
  currencyCode?: OrderCurrencyCodeEnumOVH;
  text?: string;
  value?: number;
}

/**
 * Countries a nichandle can choose
 */
export type NichandleCountryEnumOVH = typeof NichandleCountryEnumOVH[keyof typeof NichandleCountryEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const NichandleCountryEnumOVH = {
  AC: 'AC',
  AD: 'AD',
  AE: 'AE',
  AF: 'AF',
  AG: 'AG',
  AI: 'AI',
  AL: 'AL',
  AM: 'AM',
  AO: 'AO',
  AQ: 'AQ',
  AR: 'AR',
  AS: 'AS',
  AT: 'AT',
  AU: 'AU',
  AW: 'AW',
  AX: 'AX',
  AZ: 'AZ',
  BA: 'BA',
  BB: 'BB',
  BD: 'BD',
  BE: 'BE',
  BF: 'BF',
  BG: 'BG',
  BH: 'BH',
  BI: 'BI',
  BJ: 'BJ',
  BL: 'BL',
  BM: 'BM',
  BN: 'BN',
  BO: 'BO',
  BQ: 'BQ',
  BR: 'BR',
  BS: 'BS',
  BT: 'BT',
  BW: 'BW',
  BY: 'BY',
  BZ: 'BZ',
  CA: 'CA',
  CC: 'CC',
  CD: 'CD',
  CF: 'CF',
  CG: 'CG',
  CH: 'CH',
  CI: 'CI',
  CK: 'CK',
  CL: 'CL',
  CM: 'CM',
  CN: 'CN',
  CO: 'CO',
  CR: 'CR',
  CU: 'CU',
  CV: 'CV',
  CW: 'CW',
  CX: 'CX',
  CY: 'CY',
  CZ: 'CZ',
  DE: 'DE',
  DG: 'DG',
  DJ: 'DJ',
  DK: 'DK',
  DM: 'DM',
  DO: 'DO',
  DZ: 'DZ',
  EA: 'EA',
  EC: 'EC',
  EE: 'EE',
  EG: 'EG',
  EH: 'EH',
  ER: 'ER',
  ES: 'ES',
  ET: 'ET',
  FI: 'FI',
  FJ: 'FJ',
  FK: 'FK',
  FM: 'FM',
  FO: 'FO',
  FR: 'FR',
  GA: 'GA',
  GB: 'GB',
  GD: 'GD',
  GE: 'GE',
  GF: 'GF',
  GG: 'GG',
  GH: 'GH',
  GI: 'GI',
  GL: 'GL',
  GM: 'GM',
  GN: 'GN',
  GP: 'GP',
  GQ: 'GQ',
  GR: 'GR',
  GS: 'GS',
  GT: 'GT',
  GU: 'GU',
  GW: 'GW',
  GY: 'GY',
  HK: 'HK',
  HN: 'HN',
  HR: 'HR',
  HT: 'HT',
  HU: 'HU',
  IC: 'IC',
  ID: 'ID',
  IE: 'IE',
  IL: 'IL',
  IM: 'IM',
  IN: 'IN',
  IO: 'IO',
  IQ: 'IQ',
  IR: 'IR',
  IS: 'IS',
  IT: 'IT',
  JE: 'JE',
  JM: 'JM',
  JO: 'JO',
  JP: 'JP',
  KE: 'KE',
  KG: 'KG',
  KH: 'KH',
  KI: 'KI',
  KM: 'KM',
  KN: 'KN',
  KP: 'KP',
  KR: 'KR',
  KW: 'KW',
  KY: 'KY',
  KZ: 'KZ',
  LA: 'LA',
  LB: 'LB',
  LC: 'LC',
  LI: 'LI',
  LK: 'LK',
  LR: 'LR',
  LS: 'LS',
  LT: 'LT',
  LU: 'LU',
  LV: 'LV',
  LY: 'LY',
  MA: 'MA',
  MC: 'MC',
  MD: 'MD',
  ME: 'ME',
  MF: 'MF',
  MG: 'MG',
  MH: 'MH',
  MK: 'MK',
  ML: 'ML',
  MM: 'MM',
  MN: 'MN',
  MO: 'MO',
  MP: 'MP',
  MQ: 'MQ',
  MR: 'MR',
  MS: 'MS',
  MT: 'MT',
  MU: 'MU',
  MV: 'MV',
  MW: 'MW',
  MX: 'MX',
  MY: 'MY',
  MZ: 'MZ',
  NA: 'NA',
  NC: 'NC',
  NE: 'NE',
  NF: 'NF',
  NG: 'NG',
  NI: 'NI',
  NL: 'NL',
  NO: 'NO',
  NP: 'NP',
  NR: 'NR',
  NU: 'NU',
  NZ: 'NZ',
  OM: 'OM',
  PA: 'PA',
  PE: 'PE',
  PF: 'PF',
  PG: 'PG',
  PH: 'PH',
  PK: 'PK',
  PL: 'PL',
  PM: 'PM',
  PN: 'PN',
  PR: 'PR',
  PS: 'PS',
  PT: 'PT',
  PW: 'PW',
  PY: 'PY',
  QA: 'QA',
  RE: 'RE',
  RO: 'RO',
  RS: 'RS',
  RU: 'RU',
  RW: 'RW',
  SA: 'SA',
  SB: 'SB',
  SC: 'SC',
  SD: 'SD',
  SE: 'SE',
  SG: 'SG',
  SH: 'SH',
  SI: 'SI',
  SJ: 'SJ',
  SK: 'SK',
  SL: 'SL',
  SM: 'SM',
  SN: 'SN',
  SO: 'SO',
  SR: 'SR',
  SS: 'SS',
  ST: 'ST',
  SV: 'SV',
  SX: 'SX',
  SY: 'SY',
  SZ: 'SZ',
  TA: 'TA',
  TC: 'TC',
  TD: 'TD',
  TF: 'TF',
  TG: 'TG',
  TH: 'TH',
  TJ: 'TJ',
  TK: 'TK',
  TL: 'TL',
  TM: 'TM',
  TN: 'TN',
  TO: 'TO',
  TR: 'TR',
  TT: 'TT',
  TV: 'TV',
  TW: 'TW',
  TZ: 'TZ',
  UA: 'UA',
  UG: 'UG',
  UM: 'UM',
  UNKNOWN: 'UNKNOWN',
  US: 'US',
  UY: 'UY',
  UZ: 'UZ',
  VA: 'VA',
  VC: 'VC',
  VE: 'VE',
  VG: 'VG',
  VI: 'VI',
  VN: 'VN',
  VU: 'VU',
  WF: 'WF',
  WS: 'WS',
  XK: 'XK',
  YE: 'YE',
  YT: 'YT',
  ZA: 'ZA',
  ZM: 'ZM',
  ZW: 'ZW',
} as const;

/**
 * MAC address (e.g., 2001:4860:4860::8844)
 */
export type MacAddressOVH = string;

/**
 * IPv6 CIDR notation (e.g., 2001:41d0::/128)
 */
export type Ipv6BlockOVH = string;

/**
 * IPv6 address (e.g., 2001:41d0:1:1994::1)
 */
export type Ipv6OVH = string;

/**
 * IPv4 CIDR notation (e.g., 192.0.2.0/24)
 */
export type Ipv4BlockOVH = string;

/**
 * IPv4 address (e.g., 192.0.2.0)
 */
export type Ipv4OVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpInterfaceOVH = string;

/**
 * IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)
 */
export type IpBlockOVH = string;

/**
 * IP address (e.g., 192.0.2.0)
 */
export type IpOVH = string;

/**
 * International phone number
 */
export type InternationalPhoneNumberOVH = string;

/**
 * Operator that can be used in order to filter resources tags
 */
export type IamResourceTagFilterOperatorEnumOVH = typeof IamResourceTagFilterOperatorEnumOVH[keyof typeof IamResourceTagFilterOperatorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IamResourceTagFilterOperatorEnumOVH = {
  EQ: 'EQ',
  EXISTS: 'EXISTS',
  ILIKE: 'ILIKE',
  LIKE: 'LIKE',
  NEQ: 'NEQ',
  NEXISTS: 'NEXISTS',
} as const;

/**
 * Operator to use in order to filter on the value (defaults to 'EQ')
 * @nullable
 */
export type IamResourceTagFilterOVHOperator = IamResourceTagFilterOperatorEnumOVH | null;

/**
 * Resource tag filter
 */
export interface IamResourceTagFilterOVH {
  /**
   * Operator to use in order to filter on the value (defaults to 'EQ')
   * @nullable
   */
  readonly operator?: IamResourceTagFilterOVHOperator;
  /** Value to use in order to filter tags */
  readonly value?: string;
}

/**
 * Resource tags. Tags that were internally computed are prefixed with ovh:
 * @nullable
 */
export type IamResourceMetadataOVHTags = {[key: string]: string} | null;

/**
 * IAM resource metadata embedded in services models
 */
export interface IamResourceMetadataOVH {
  /**
   * Resource display name
   * @nullable
   */
  readonly displayName?: string | null;
  /** Unique identifier of the resource */
  readonly id?: string;
  /**
   * Resource tags. Tags that were internally computed are prefixed with ovh:
   * @nullable
   */
  readonly tags?: IamResourceMetadataOVHTags;
  /** Unique resource name used in policies */
  readonly urn?: string;
}

/**
 * Email address (e.g., api@ml.ovh.net)
 */
export type EmailOVH = string;

/**
 * Duration (e.g., P1Y2M3DT4H6M9S)
 */
export type DurationOVH = string;

/**
 * A structure describing the vmware bool policy data object
 */
export interface DedicatedCloudVmwareBoolPolicyOVH {
  inherited?: boolean;
  value?: boolean;
}

/**
 * The type of the network backing
 */
export type DedicatedCloudVmNetworkBackingTypeEnumOVH = typeof DedicatedCloudVmNetworkBackingTypeEnumOVH[keyof typeof DedicatedCloudVmNetworkBackingTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudVmNetworkBackingTypeEnumOVH = {
  DVS: 'DVS',
  VSS: 'VSS',
} as const;

/**
 * @nullable
 */
export type DedicatedCloudVmNetworkBackingOVHPortKeySecurityPolicy = DedicatedCloudDvsSecurityPolicyOVH | null;

/**
 * A structure describing the backing network of a the virtual machine
 */
export interface DedicatedCloudVmNetworkBackingOVH {
  /** @nullable */
  carpState?: string | null;
  /** @nullable */
  deviceName?: string | null;
  /** @nullable */
  portGroupKey?: string | null;
  /** @nullable */
  portGroupName?: string | null;
  /** @nullable */
  portKey?: string | null;
  /** @nullable */
  portKeySecurityPolicy?: DedicatedCloudVmNetworkBackingOVHPortKeySecurityPolicy;
  /** @nullable */
  switchUuid?: string | null;
  type?: DedicatedCloudVmNetworkBackingTypeEnumOVH;
  /** @nullable */
  useAutoDetect?: boolean | null;
  /** @nullable */
  valueMoref?: string | null;
}

/**
 * A structure describing the network of a the virtual machine
 */
export interface DedicatedCloudVmNetworkOVH {
  allowGuestControl?: boolean;
  backing?: DedicatedCloudVmNetworkBackingOVH;
  connected?: boolean;
  controler?: string;
  label?: string;
  macAddress?: string;
  startConnected?: boolean;
  status?: DedicatedCloudVirtualDeviceConnectInfoStatusOVH;
}

/**
 * A structure describing filer disks of a the virtual machine
 */
export interface DedicatedCloudVmFilerDiskOVH {
  capacity?: number;
  id?: string;
}

/**
 * A structure describing filers of a the virtual machine
 */
export interface DedicatedCloudVmFilerOVH {
  committed?: number;
  disks?: DedicatedCloudVmFilerDiskOVH[];
  name?: string;
}

/**
 * This Dedicated Cloud vlan type
 */
export type DedicatedCloudVlanTypeEnumOVH = typeof DedicatedCloudVlanTypeEnumOVH[keyof typeof DedicatedCloudVlanTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudVlanTypeEnumOVH = {
  admin: 'admin',
  free: 'free',
  paid: 'paid',
} as const;

/**
 * All states a Dedicated Cloud Vlan can be in
 */
export type DedicatedCloudVlanStateEnumOVH = typeof DedicatedCloudVlanStateEnumOVH[keyof typeof DedicatedCloudVlanStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudVlanStateEnumOVH = {
  available: 'available',
  delivered: 'delivered',
  disabled: 'disabled',
  error: 'error',
  removing: 'removing',
  reserved: 'reserved',
} as const;

/**
 * The power state of the virtual machine
 */
export type DedicatedCloudVirtualMachinePowerStateOVH = typeof DedicatedCloudVirtualMachinePowerStateOVH[keyof typeof DedicatedCloudVirtualMachinePowerStateOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudVirtualMachinePowerStateOVH = {
  deleted: 'deleted',
  poweredOff: 'poweredOff',
  poweredOn: 'poweredOn',
  suspended: 'suspended',
} as const;

/**
 * A structure describing the licensing of a virtual machine
 */
export interface DedicatedCloudVirtualMachineLicensingSummaryOVH {
  /**
   * Guest Operating System reported by VMware tools
   * @nullable
   */
  guestOsFamily?: string | null;
  /** Attached SPLA licensing */
  license?: DedicatedCloudSplaKmsLicenseIncludingLegacyEnumOVH;
  /** VMware Managed object Reference identifier */
  moRef?: string;
  /** Virtual machine name */
  name?: string;
  /** Virtual machine identifier */
  vmId?: number;
}

/**
 * The fault tolerance state of the virtual machine
 */
export type DedicatedCloudVirtualMachineFaultToleranceStateOVH = typeof DedicatedCloudVirtualMachineFaultToleranceStateOVH[keyof typeof DedicatedCloudVirtualMachineFaultToleranceStateOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudVirtualMachineFaultToleranceStateOVH = {
  disabled: 'disabled',
  enabled: 'enabled',
  needSecondary: 'needSecondary',
  notConfigured: 'notConfigured',
  running: 'running',
  starting: 'starting',
} as const;

/**
 * A structure describing the cdrom configuration of a virtual machine
 */
export interface DedicatedCloudVirtualMachineCdromOVH {
  /** @nullable */
  connected?: boolean | null;
  /** @nullable */
  iso?: string | null;
}

/**
 * The connectable virtual device status
 */
export type DedicatedCloudVirtualDeviceConnectInfoStatusOVH = typeof DedicatedCloudVirtualDeviceConnectInfoStatusOVH[keyof typeof DedicatedCloudVirtualDeviceConnectInfoStatusOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudVirtualDeviceConnectInfoStatusOVH = {
  ok: 'ok',
  recoverableError: 'recoverableError',
  unrecoverableError: 'unrecoverableError',
  untried: 'untried',
} as const;

/**
 * Representation of a Vendor object in OVH API
 */
export interface DedicatedCloudVendorOvhIdOVH {
  /**
   * Datacenter id
   * @nullable
   */
  datacenterId?: number | null;
  /**
   * Filer id
   * @nullable
   */
  filerId?: number | null;
  /**
   * Host id
   * @nullable
   */
  hostId?: number | null;
  /**
   * Vm id
   * @nullable
   */
  vmId?: number | null;
}

/**
 * A structure describing the vCenter available upgrade for your Dedicated Cloud
 */
export interface DedicatedCloudVcenterOVH {
  /** Current vCenter version */
  currentVersion?: DedicatedCloudVersionOVH;
  /** Last major vCenter version */
  lastMajor?: DedicatedCloudVersionOVH;
  /** Last minor vCenter version */
  lastMinor?: DedicatedCloudVersionOVH;
}

/**
 * The type of the user
 */
export type DedicatedCloudUserTypeEnumOVH = typeof DedicatedCloudUserTypeEnumOVH[keyof typeof DedicatedCloudUserTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudUserTypeEnumOVH = {
  group: 'group',
  user: 'user',
} as const;

/**
 * All states a Dedicated Cloud User can be in
 */
export type DedicatedCloudUserStateEnumOVH = typeof DedicatedCloudUserStateEnumOVH[keyof typeof DedicatedCloudUserStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudUserStateEnumOVH = {
  creating: 'creating',
  deleting: 'deleting',
  delivered: 'delivered',
  error: 'error',
} as const;

/**
 * The type of the identity provider
 */
export type DedicatedCloudUserIdentityProviderTypeEnumOVH = typeof DedicatedCloudUserIdentityProviderTypeEnumOVH[keyof typeof DedicatedCloudUserIdentityProviderTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudUserIdentityProviderTypeEnumOVH = {
  federation: 'federation',
  iam: 'iam',
} as const;

/**
 * All activation states a Dedicated Cloud User can have
 */
export type DedicatedCloudUserActivationStateEnumOVH = typeof DedicatedCloudUserActivationStateEnumOVH[keyof typeof DedicatedCloudUserActivationStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudUserActivationStateEnumOVH = {
  disabled: 'disabled',
  disabling: 'disabling',
  enabled: 'enabled',
  enabling: 'enabling',
  toDisable: 'toDisable',
  toEnable: 'toEnable',
} as const;

/**
 * Two factor authentication whitelisted network
 */
export interface DedicatedCloudTwoFAWhitelistOVH {
  /** IP netmask (CIDR notation) of the remote service */
  readonly cidrNetmask?: number;
  /** Description of the trusted IP */
  readonly description?: string;
  /** Id of the trusted IP */
  readonly id?: number;
  /** IP address of the remote service */
  readonly ip?: Ipv4OVH;
  /** State of the whitelist */
  readonly state?: DedicatedCloudTwoFAWhitelistStateEnumOVH;
}

/**
 * Log possible sources
 */
export type DedicatedCloudSyslogForwardSourceTypeEnumOVH = typeof DedicatedCloudSyslogForwardSourceTypeEnumOVH[keyof typeof DedicatedCloudSyslogForwardSourceTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudSyslogForwardSourceTypeEnumOVH = {
  esxi: 'esxi',
  nsxtEdge: 'nsxtEdge',
  nsxtManager: 'nsxtManager',
  nsxv: 'nsxv',
  vcsa: 'vcsa',
} as const;

/**
 * All possible log levels
 */
export type DedicatedCloudSyslogForwardLogLevelEnumOVH = typeof DedicatedCloudSyslogForwardLogLevelEnumOVH[keyof typeof DedicatedCloudSyslogForwardLogLevelEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudSyslogForwardLogLevelEnumOVH = {
  alert: 'alert',
  critical: 'critical',
  emergency: 'emergency',
  error: 'error',
  info: 'info',
  notice: 'notice',
  warning: 'warning',
} as const;

/**
 * Managed license identifiers (including legacy ones)
 */
export type DedicatedCloudSplaKmsLicenseIncludingLegacyEnumOVH = typeof DedicatedCloudSplaKmsLicenseIncludingLegacyEnumOVH[keyof typeof DedicatedCloudSplaKmsLicenseIncludingLegacyEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudSplaKmsLicenseIncludingLegacyEnumOVH = {
  unknown_or_unsupported_license: 'unknown or unsupported license',
  windows_2008_R2_Datacenter: 'windows 2008 R2 Datacenter',
  windows_2008_R2_Enterprise: 'windows 2008 R2 Enterprise',
  windows_2008_R2_Standard: 'windows 2008 R2 Standard',
  windows_2008_R2_Web: 'windows 2008 R2 Web',
  windows_2012_Datacenter: 'windows 2012 Datacenter',
  windows_2012_R2_Datacenter: 'windows 2012 R2 Datacenter',
  windows_2012_R2_Standard: 'windows 2012 R2 Standard',
  windows_2012_R2_Standard_SQL2016_Standard: 'windows 2012 R2 Standard SQL2016 Standard',
  windows_2012_R2_Standard_SQL2016_Web: 'windows 2012 R2 Standard SQL2016 Web',
  windows_2012_Standard: 'windows 2012 Standard',
  windows_2016_Datacenter: 'windows 2016 Datacenter',
  windows_2016_Standard: 'windows 2016 Standard',
  windows_2016_Standard_SQL2016_Standard: 'windows 2016 Standard SQL2016 Standard',
  windows_2016_Standard_SQL2016_Web: 'windows 2016 Standard SQL2016 Web',
  windows_2019_Datacenter: 'windows 2019 Datacenter',
  windows_2019_Datacenter_Core: 'windows 2019 Datacenter Core',
  windows_2019_Standard: 'windows 2019 Standard',
  windows_2019_Standard_Core: 'windows 2019 Standard Core',
  windows_2019_Standard_SQL2019_Standard: 'windows 2019 Standard SQL2019 Standard',
  windows_2019_Standard_SQL2019_Web: 'windows 2019 Standard SQL2019 Web',
  windows_2019_Standard_SQL2022_Standard: 'windows 2019 Standard SQL2022 Standard',
  windows_2019_Standard_SQL2022_Web: 'windows 2019 Standard SQL2022 Web',
  windows_2022_Datacenter: 'windows 2022 Datacenter',
  windows_2022_Datacenter_Core: 'windows 2022 Datacenter Core',
  windows_2022_Datacenter_SQL2019_Standard: 'windows 2022 Datacenter SQL2019 Standard',
  windows_2022_Datacenter_SQL2019_Web: 'windows 2022 Datacenter SQL2019 Web',
  windows_2022_Datacenter_SQL2022_Standard: 'windows 2022 Datacenter SQL2022 Standard',
  windows_2022_Datacenter_SQL2022_Web: 'windows 2022 Datacenter SQL2022 Web',
  windows_2022_Standard: 'windows 2022 Standard',
  windows_2022_Standard_Core: 'windows 2022 Standard Core',
  windows_2022_Standard_SQL2019_Standard: 'windows 2022 Standard SQL2019 Standard',
  windows_2022_Standard_SQL2019_Web: 'windows 2022 Standard SQL2019 Web',
  windows_2022_Standard_SQL2022_Standard: 'windows 2022 Standard SQL2022 Standard',
  windows_2022_Standard_SQL2022_Web: 'windows 2022 Standard SQL2022 Web',
} as const;

/**
 * Managed license identifiers
 */
export type DedicatedCloudSplaKmsLicenseEnumOVH = typeof DedicatedCloudSplaKmsLicenseEnumOVH[keyof typeof DedicatedCloudSplaKmsLicenseEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudSplaKmsLicenseEnumOVH = {
  windows_2016_Datacenter: 'windows 2016 Datacenter',
  windows_2016_Standard: 'windows 2016 Standard',
  windows_2016_Standard_SQL2016_Standard: 'windows 2016 Standard SQL2016 Standard',
  windows_2016_Standard_SQL2016_Web: 'windows 2016 Standard SQL2016 Web',
  windows_2019_Datacenter: 'windows 2019 Datacenter',
  windows_2019_Datacenter_Core: 'windows 2019 Datacenter Core',
  windows_2019_Standard: 'windows 2019 Standard',
  windows_2019_Standard_Core: 'windows 2019 Standard Core',
  windows_2019_Standard_SQL2019_Standard: 'windows 2019 Standard SQL2019 Standard',
  windows_2019_Standard_SQL2019_Web: 'windows 2019 Standard SQL2019 Web',
  windows_2019_Standard_SQL2022_Standard: 'windows 2019 Standard SQL2022 Standard',
  windows_2019_Standard_SQL2022_Web: 'windows 2019 Standard SQL2022 Web',
  windows_2022_Datacenter: 'windows 2022 Datacenter',
  windows_2022_Datacenter_Core: 'windows 2022 Datacenter Core',
  windows_2022_Datacenter_SQL2019_Standard: 'windows 2022 Datacenter SQL2019 Standard',
  windows_2022_Datacenter_SQL2019_Web: 'windows 2022 Datacenter SQL2019 Web',
  windows_2022_Datacenter_SQL2022_Standard: 'windows 2022 Datacenter SQL2022 Standard',
  windows_2022_Datacenter_SQL2022_Web: 'windows 2022 Datacenter SQL2022 Web',
  windows_2022_Standard: 'windows 2022 Standard',
  windows_2022_Standard_Core: 'windows 2022 Standard Core',
  windows_2022_Standard_SQL2019_Standard: 'windows 2022 Standard SQL2019 Standard',
  windows_2022_Standard_SQL2019_Web: 'windows 2022 Standard SQL2019 Web',
  windows_2022_Standard_SQL2022_Standard: 'windows 2022 Standard SQL2022 Standard',
  windows_2022_Standard_SQL2022_Web: 'windows 2022 Standard SQL2022 Web',
} as const;

/**
 * List of possible state of the service pack
 */
export type DedicatedCloudServicePackStateEnumOVH = typeof DedicatedCloudServicePackStateEnumOVH[keyof typeof DedicatedCloudServicePackStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudServicePackStateEnumOVH = {
  activating: 'activating',
  active: 'active',
  error: 'error',
  waitingForCustomer: 'waitingForCustomer',
} as const;

/**
 * List of possible service pack
 */
export type DedicatedCloudServicePackEnumOVH = typeof DedicatedCloudServicePackEnumOVH[keyof typeof DedicatedCloudServicePackEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudServicePackEnumOVH = {
  default: 'default',
  'default-nsxt': 'default-nsxt',
  hds: 'hds',
  'hds-nsxt': 'hds-nsxt',
  hipaa: 'hipaa',
  legacy: 'legacy',
  nsx: 'nsx',
  'nsx-and-vrops': 'nsx-and-vrops',
  nsxt: 'nsxt',
  pcidss: 'pcidss',
  'pcidss-nsxt': 'pcidss-nsxt',
  vrops: 'vrops',
  'vrops-nsxt': 'vrops-nsxt',
} as const;

/**
 * Service pack informations
 */
export interface DedicatedCloudServicePackStatusOVH {
  /** Name of the service pack */
  name?: DedicatedCloudServicePackEnumOVH;
  /** State of the service pack */
  state?: DedicatedCloudServicePackStateEnumOVH;
}

/**
 * Security option detailed states
 */
export type DedicatedCloudSecurityOptionStateEnumOVH = typeof DedicatedCloudSecurityOptionStateEnumOVH[keyof typeof DedicatedCloudSecurityOptionStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudSecurityOptionStateEnumOVH = {
  creating: 'creating',
  deleted: 'deleted',
  deleting: 'deleting',
  delivered: 'delivered',
  disabled: 'disabled',
  pending: 'pending',
  toCreate: 'toCreate',
  updating: 'updating',
} as const;

/**
 * Security option identifiers
 */
export type DedicatedCloudSecurityOptionSecurityOptionEnumOVH = typeof DedicatedCloudSecurityOptionSecurityOptionEnumOVH[keyof typeof DedicatedCloudSecurityOptionSecurityOptionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudSecurityOptionSecurityOptionEnumOVH = {
  accessNetworkFiltered: 'accessNetworkFiltered',
  advancedSecurity: 'advancedSecurity',
  base: 'base',
  contentLibrary: 'contentLibrary',
  grsecKernel: 'grsecKernel',
  hds: 'hds',
  hids: 'hids',
  hipaa: 'hipaa',
  logForwarder: 'logForwarder',
  nids: 'nids',
  pcidss: 'pcidss',
  privateCustomerVlan: 'privateCustomerVlan',
  privateGw: 'privateGw',
  sendLogToCustomer: 'sendLogToCustomer',
  sessionTimeout: 'sessionTimeout',
  sftp: 'sftp',
  snc: 'snc',
  spla: 'spla',
  sslV3: 'sslV3',
  tls12: 'tls1.2',
  tokenValidation: 'tokenValidation',
  twoFa: 'twoFa',
  twoFaFail2ban: 'twoFaFail2ban',
  vrliForwarder: 'vrliForwarder',
  waf: 'waf',
} as const;

/**
 * Security option management errors
 */
export type DedicatedCloudSecurityOptionErrorEnumOVH = typeof DedicatedCloudSecurityOptionErrorEnumOVH[keyof typeof DedicatedCloudSecurityOptionErrorEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudSecurityOptionErrorEnumOVH = {
  ACTION_IMPOSSIBLE: 'ACTION_IMPOSSIBLE',
  ALREADY_DISABLED: 'ALREADY_DISABLED',
  ALREADY_ENABLED: 'ALREADY_ENABLED',
  BAD_ZONE: 'BAD_ZONE',
  BREAKING_REQUIREMENTS: 'BREAKING_REQUIREMENTS',
  CONFLICTING_OPTIONS: 'CONFLICTING_OPTIONS',
  DEFINITIVE_OPTION: 'DEFINITIVE_OPTION',
  GENERIC_ERROR: 'GENERIC_ERROR',
  HAS_UNSUPPORTED_DEPENDENCIES: 'HAS_UNSUPPORTED_DEPENDENCIES',
  MISSING_REQUIREMENTS_OPTIONS: 'MISSING_REQUIREMENTS_OPTIONS',
  NOT_ENABLED: 'NOT_ENABLED',
  NOT_MANAGEABLE_DIRECTLY: 'NOT_MANAGEABLE_DIRECTLY',
  SERVICE_SUSPENDED: 'SERVICE_SUSPENDED',
} as const;

/**
 * Security option code
 */
export interface DedicatedCloudSecurityOptionErrorMessageOVH {
  /** Error code */
  code?: DedicatedCloudSecurityOptionErrorEnumOVH;
  /** Error message */
  message?: string;
}

/**
 * Display requirements, conflicts and dependencies of a security option
 */
export interface DedicatedCloudSecurityOptionDependenciesTreeOVH {
  /** List of conflicting security options which prevents installing given security option */
  conflicts?: DedicatedCloudSecurityOptionSecurityOptionEnumOVH[];
  /** List of dependencies that will also be enabled during an install of given security option */
  depends?: DedicatedCloudSecurityOptionSecurityOptionEnumOVH[];
  /** List of required security options which must be enabled to install given security option */
  requires?: DedicatedCloudSecurityOptionSecurityOptionEnumOVH[];
}

/**
 * If your Dedicated Cloud is not compatible with this option, indicates the reason
 * @nullable
 */
export type DedicatedCloudSecurityOptionCompatibilityMatrixEntryOVHReason = DedicatedCloudSecurityOptionErrorMessageOVH | null;

/**
 * Representation of a security option
 */
export interface DedicatedCloudSecurityOptionCompatibilityMatrixEntryOVH {
  /** Indicates if option is compatible and can be enabled on your Dedicated Cloud */
  compatible?: boolean;
  /** Security option description */
  description?: string;
  /** Indicates if option is enabled on your Dedicated Cloud */
  enabled?: boolean;
  /** Security option name */
  name?: DedicatedCloudSecurityOptionSecurityOptionEnumOVH;
  /**
   * If your Dedicated Cloud is not compatible with this option, indicates the reason
   * @nullable
   */
  reason?: DedicatedCloudSecurityOptionCompatibilityMatrixEntryOVHReason;
  /** Detailed security option state */
  state?: DedicatedCloudSecurityOptionStateEnumOVH;
}

/**
 * Determine how this user can act on the Dedicated Cloud vmNetwork
 */
export type DedicatedCloudRightVmNetworkRoleEnumOVH = typeof DedicatedCloudRightVmNetworkRoleEnumOVH[keyof typeof DedicatedCloudRightVmNetworkRoleEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudRightVmNetworkRoleEnumOVH = {
  admin: 'admin',
  noAccess: 'noAccess',
  readonly: 'readonly',
} as const;

/**
 * All types of objects handled in objectRights
 */
export type DedicatedCloudRightUserObjectRightTypeEnumOVH = typeof DedicatedCloudRightUserObjectRightTypeEnumOVH[keyof typeof DedicatedCloudRightUserObjectRightTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudRightUserObjectRightTypeEnumOVH = {
  cluster: 'cluster',
  datastore: 'datastore',
  dvportgroup: 'dvportgroup',
  folder: 'folder',
  pool: 'pool',
  vm: 'vm',
} as const;

/**
 * All rights a Dedicated Cloud user may be associated with
 */
export type DedicatedCloudRightRightEnumOVH = typeof DedicatedCloudRightRightEnumOVH[keyof typeof DedicatedCloudRightRightEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudRightRightEnumOVH = {
  admin: 'admin',
  disabled: 'disabled',
  readonly: 'readonly',
  readwrite: 'readwrite',
} as const;

/**
 * Determine how this user can act on the Dedicated Cloud vLans or vxLans
 */
export type DedicatedCloudRightNetworkRoleEnumOVH = typeof DedicatedCloudRightNetworkRoleEnumOVH[keyof typeof DedicatedCloudRightNetworkRoleEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudRightNetworkRoleEnumOVH = {
  admin: 'admin',
  manager: 'manager',
  noAccess: 'noAccess',
  readonly: 'readonly',
} as const;

/**
 * The resource type of this Dedicated Cloud ressource
 */
export type DedicatedCloudRessourcesResourceTypeEnumOVH = typeof DedicatedCloudRessourcesResourceTypeEnumOVH[keyof typeof DedicatedCloudRessourcesResourceTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudRessourcesResourceTypeEnumOVH = {
  host: 'host',
  storage: 'storage',
} as const;

/**
 * The billing type of this Dedicated Cloud ressource
 */
export type DedicatedCloudRessourcesBillingTypeEnumOVH = typeof DedicatedCloudRessourcesBillingTypeEnumOVH[keyof typeof DedicatedCloudRessourcesBillingTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudRessourcesBillingTypeEnumOVH = {
  freeSpare: 'freeSpare',
  hourly: 'hourly',
  monthly: 'monthly',
  undefined: 'undefined',
} as const;

/**
 * A structure describing the Resource's new price
 */
export interface DedicatedCloudResourceNewPricesEntryOVH {
  billingType?: DedicatedCloudRessourcesBillingTypeEnumOVH;
  changed?: boolean;
  name?: string;
  newPrice?: OrderPriceOVH;
  oldPrice?: OrderPriceOVH;
  resourceType?: DedicatedCloudRessourcesResourceTypeEnumOVH;
}

/**
 * A structure describing the Resource's new price
 */
export interface DedicatedCloudResourceNewPricesOVH {
  /** @nullable */
  resources?: DedicatedCloudResourceNewPricesEntryOVH[] | null;
}

/**
 * required addon information
 */
export interface DedicatedCloudRequiredAddonOVH {
  planCode?: string;
  quantity?: number;
}

/**
 * All vCenter upgrade possibility
 */
export type DedicatedCloudReleaseEnumOVH = typeof DedicatedCloudReleaseEnumOVH[keyof typeof DedicatedCloudReleaseEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudReleaseEnumOVH = {
  major: 'major',
  minor: 'minor',
} as const;

/**
 * The reference universe information for your Dedicated Cloud
 */
export type DedicatedCloudProductReferenceEnumOVH = typeof DedicatedCloudProductReferenceEnumOVH[keyof typeof DedicatedCloudProductReferenceEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudProductReferenceEnumOVH = {
  EPCC: 'EPCC',
  MBM: 'MBM',
} as const;

/**
 * A structure describing the current password policy for your Dedicated Cloud
 */
export interface DedicatedCloudPasswordPolicyOVH {
  /** List of denied characters in the password */
  deniedChars?: string[];
  /** Whether or not a digit (0-9) is mandatory in the password */
  digitMandatory?: boolean;
  /** Number of previous passwords to keep */
  historyCheck?: number;
  /** Whether or not a letter (a-z or A-Z) is mandatory in the password */
  letterMandatory?: boolean;
  /** Whether or not a lowercase letter (a-z) is mandatory in the password */
  lowercaseLetterMandatory?: boolean;
  /** Maximum lenght of the password */
  maxLength?: number;
  /** Minimum lenght of the password */
  minLength?: number;
  /** Whether or not a special character (\W or _) is mandatory in the password */
  specialMandatory?: boolean;
  /** Whether or not an uppercase letter (A-Z) is mandatory in the password */
  uppercaseLetterMandatory?: boolean;
  /** Password validity period (in days) */
  validityPeriod?: number;
}

/**
 * A structure describing option compatibility
 */
export interface DedicatedCloudOptionCompatibilityOVH {
  /** The new/future commercial version */
  newCommercialVersion?: string;
  /** The old/current commercial version */
  oldCommercialVersion?: string;
}

/**
 * States of a Dedicated Cloud option
 */
export type DedicatedCloudOptionAccessNetworkStateEnumOVH = typeof DedicatedCloudOptionAccessNetworkStateEnumOVH[keyof typeof DedicatedCloudOptionAccessNetworkStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudOptionAccessNetworkStateEnumOVH = {
  creating: 'creating',
  deleting: 'deleting',
  delivered: 'delivered',
  error: 'error',
  toCreate: 'toCreate',
  toDelete: 'toDelete',
  toUpdate: 'toUpdate',
  unknown: 'unknown',
  updating: 'updating',
} as const;

/**
 * States of a Dedicated Cloud option
 */
export type DedicatedCloudOptionStateEnumOVH = typeof DedicatedCloudOptionStateEnumOVH[keyof typeof DedicatedCloudOptionStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudOptionStateEnumOVH = {
  disabled: 'disabled',
  disabling: 'disabling',
  enabled: 'enabled',
  enabling: 'enabling',
  error: 'error',
  migrating: 'migrating',
  unknown: 'unknown',
} as const;

/**
 * States of a Dedicated Cloud Datacenter Option
 */
export interface DedicatedCloudOptionDatacenterOptionStateOVH {
  /** ID of the Datacenter */
  id?: number;
  /** State of the Datacenter option */
  state?: DedicatedCloudOptionStateEnumOVH;
}

/**
 * Available sizing of NSX-T Edges supported in datacenter
 */
export interface DedicatedCloudNsxtNsxtEdgeSizingCapabilityOVH {
  size?: string[];
}

/**
 * Sizes of NSX-T Edges
 */
export type DedicatedCloudNsxtNsxtEdgeSizeEnumOVH = typeof DedicatedCloudNsxtNsxtEdgeSizeEnumOVH[keyof typeof DedicatedCloudNsxtNsxtEdgeSizeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudNsxtNsxtEdgeSizeEnumOVH = {
  LARGE: 'LARGE',
  MEDIUM: 'MEDIUM',
  XLARGE: 'XLARGE',
} as const;

/**
 * Maximum number of NSX-T Edges supported in datacenter
 */
export interface DedicatedCloudNsxtNsxtEdgeScalingCapabilityOVH {
  /** @nullable */
  number?: number | null;
}

/**
 * Log subscription for your dedicated cloud
 */
export interface DedicatedCloudLdpSubscriptionOVH {
  /** Creation date of the subscription */
  readonly createdAt?: string;
  /** Log kind name of this subscription */
  readonly kind?: string;
  /** Subscribed resource, where the logs come from */
  readonly resource?: DedicatedCloudLogSubscriptionResourceOVH;
  /** Name of the destination log service */
  readonly serviceName?: string;
  /** Id of the destination log stream */
  readonly streamId?: string;
  /** Subscription ID */
  readonly subscriptionId?: string;
  /** Last update date of the subscription */
  readonly updatedAt?: string;
}

/**
 * Log kind for your dedicated cloud
 */
export interface DedicatedCloudLdpKindOVH {
  /** List of additional log fields managed in this log kind */
  readonly additionalReturnedFields?: readonly string[];
  /** Creation date of the log kind */
  readonly createdAt?: string;
  /** Log kind display name */
  readonly displayName?: string;
  /** Log kind ID */
  readonly kindId?: string;
  /** Log kind name */
  readonly name?: string;
  /** Last update date of the log kind */
  readonly updatedAt?: string;
}

/**
 * IP address usage
 */
export type DedicatedCloudIpUsageEnumOVH = typeof DedicatedCloudIpUsageEnumOVH[keyof typeof DedicatedCloudIpUsageEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudIpUsageEnumOVH = {
  nsxt: 'nsxt',
  reserved: 'reserved',
  vm: 'vm',
} as const;

/**
 * The connection state of the host
 */
export type DedicatedCloudHostSystemConnectionStateOVH = typeof DedicatedCloudHostSystemConnectionStateOVH[keyof typeof DedicatedCloudHostSystemConnectionStateOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudHostSystemConnectionStateOVH = {
  connected: 'connected',
  disconnected: 'disconnected',
  notResponding: 'notResponding',
} as const;

/**
 * All states a Dedicated Cloud Host can be in
 */
export type DedicatedCloudHostStateEnumOVH = typeof DedicatedCloudHostStateEnumOVH[keyof typeof DedicatedCloudHostStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudHostStateEnumOVH = {
  adding: 'adding',
  delivered: 'delivered',
  error: 'error',
  removing: 'removing',
  unknown: 'unknown',
} as const;

/**
 * A Host profile
 */
export interface DedicatedCloudHostProfileOVH {
  core?: string;
  cpu?: ComplexTypeUnitAndValueDoubleOVH;
  name?: string;
  ram?: ComplexTypeUnitAndValueLongOVH;
}

/**
 * Location of the Host
 */
export interface DedicatedCloudHostLocationOVH {
  /** Datacenter of the Host. */
  datacenter?: DedicatedDatacenterEnumOVH;
  /** Rack of the Host. */
  rack?: string;
  /** Room of the Host. */
  room?: string;
}

/**
 * Hourly consumption of a host
 */
export interface DedicatedCloudHostHourlyConsumptionOVH {
  /** Consumption of the Host. */
  consumption?: ComplexTypeUnitAndValueDoubleOVH;
  /** Last update. */
  lastUpdate?: string;
}

/**
 * All states a Dedicated Cloud Filer can be in
 */
export type DedicatedCloudFilerStateEnumOVH = typeof DedicatedCloudFilerStateEnumOVH[keyof typeof DedicatedCloudFilerStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudFilerStateEnumOVH = {
  adding: 'adding',
  delivered: 'delivered',
  error: 'error',
  removing: 'removing',
  unknown: 'unknown',
} as const;

/**
 * A Filer profile
 */
export interface DedicatedCloudFilerProfileOVH {
  /** Human-Readable name */
  fullName?: string;
  /** Commercial name */
  name?: string;
  size?: ComplexTypeUnitAndValueLongOVH;
}

/**
 * All nodes types for a Filer
 */
export type DedicatedCloudFilerNodeTypeEnumOVH = typeof DedicatedCloudFilerNodeTypeEnumOVH[keyof typeof DedicatedCloudFilerNodeTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudFilerNodeTypeEnumOVH = {
  master: 'master',
  slave: 'slave',
} as const;

/**
 * Location of the Filer
 */
export interface DedicatedCloudFilerLocationOVH {
  /** Datacenter of the Filer. */
  datacenter?: DedicatedDatacenterEnumOVH;
  /** Rack of the slave Filer. */
  rack?: string;
  /** Room of the Filer. */
  room?: string;
}

/**
 * Hourly consumption of a filer
 */
export interface DedicatedCloudFilerHourlyConsumptionOVH {
  /** Consumption of the Filer */
  consumption?: ComplexTypeUnitAndValueDoubleOVH;
  /** Last update */
  lastUpdate?: string;
}

/**
 * All types of filer that are available for restoring a VM
 */
export type DedicatedCloudFilerFilerTypeEnumOVH = typeof DedicatedCloudFilerFilerTypeEnumOVH[keyof typeof DedicatedCloudFilerFilerTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudFilerFilerTypeEnumOVH = {
  nas: 'nas',
  vsan: 'vsan',
} as const;

/**
 * Connexion states for a Dedicated Cloud Filer.
 */
export type DedicatedCloudFilerConnexionStateEnumOVH = typeof DedicatedCloudFilerConnexionStateEnumOVH[keyof typeof DedicatedCloudFilerConnexionStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudFilerConnexionStateEnumOVH = {
  offline: 'offline',
  online: 'online',
} as const;

/**
 * Zerto disaster recovery remote site
 */
export interface DedicatedCloudDisasterRecoveryZertoRemoteVraOVH {
  /** ID of the remote Vra Network */
  id?: number;
  /** Name given to this network */
  label?: string;
  /** Your onsite endpoint public IP for the secured replication data tunnel */
  remoteEndpointPublicIp?: IpOVH;
  /** Internal zerto subnet of your onsite infrastructure (ip/cidr) */
  remoteVraNetwork?: IpBlockOVH;
  /** Internal ZVM ip on your onsite infrastructure local network */
  remoteZvmInternalIp?: IpOVH;
}

/**
 * Information on virtual machine protected by Zerto
 */
export interface DedicatedCloudDisasterRecoveryZertoProtectedVmOVH {
  /** Start of the backup for the requested period */
  fromDate?: string;
  /** Name of the site in which the VM is running */
  protectedSite?: string;
  /** Name of the site where the VM is backed up */
  recoverySite?: string;
  /** ID of the protected VM */
  vmId?: string;
  /** Name of the protected VM */
  vmName?: string;
  /** Name of the virtual protection group in which the VM is located */
  vpgName?: string;
}

/**
 * Zerto VPN configuration state
 */
export type DedicatedCloudDisasterRecoveryVpnConfigStateEnumOVH = typeof DedicatedCloudDisasterRecoveryVpnConfigStateEnumOVH[keyof typeof DedicatedCloudDisasterRecoveryVpnConfigStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudDisasterRecoveryVpnConfigStateEnumOVH = {
  configured: 'configured',
  configuring: 'configuring',
  error: 'error',
  notConfigured: 'notConfigured',
  tunnelError: 'tunnelError',
} as const;

/**
 * Site manager hosting type
 */
export type DedicatedCloudDisasterRecoverySiteTypeEnumOVH = typeof DedicatedCloudDisasterRecoverySiteTypeEnumOVH[keyof typeof DedicatedCloudDisasterRecoverySiteTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudDisasterRecoverySiteTypeEnumOVH = {
  onPremise: 'onPremise',
  ovhPrivateCloud: 'ovhPrivateCloud',
} as const;

/**
 * Site manager configured mode
 */
export type DedicatedCloudDisasterRecoverySiteRoleEnumOVH = typeof DedicatedCloudDisasterRecoverySiteRoleEnumOVH[keyof typeof DedicatedCloudDisasterRecoverySiteRoleEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudDisasterRecoverySiteRoleEnumOVH = {
  primary: 'primary',
  secondary: 'secondary',
  single: 'single',
} as const;

/**
 * VPN configuration state (if type is onPremise)
 * @nullable
 */
export type DedicatedCloudDisasterRecoveryRemoteSiteDetailsOVHVpnConfigState = DedicatedCloudDisasterRecoveryVpnConfigStateEnumOVH | null;

/**
 * State of the remote Zvm
 * @nullable
 */
export type DedicatedCloudDisasterRecoveryRemoteSiteDetailsOVHState = DedicatedCloudStateEnumOVH | null;

/**
 * Zvm mode configured
 * @nullable
 */
export type DedicatedCloudDisasterRecoveryRemoteSiteDetailsOVHRole = DedicatedCloudDisasterRecoverySiteRoleEnumOVH | null;

/**
 * Remote ZVM IP (if type is onPremise)
 * @nullable
 */
export type DedicatedCloudDisasterRecoveryRemoteSiteDetailsOVHRemoteZvmInternalIp = Ipv4OVH | null;

/**
 * Stunnel endpoint public IP (if type is onPremise)
 * @nullable
 */
export type DedicatedCloudDisasterRecoveryRemoteSiteDetailsOVHRemoteEndpointPublicIp = Ipv4OVH | null;

/**
 * Stunnel endpoint internal IP (if type is onPremise)
 * @nullable
 */
export type DedicatedCloudDisasterRecoveryRemoteSiteDetailsOVHRemoteEndpointInternalIp = Ipv4OVH | null;

/**
 * Information on the remote datacenter linked to the local one
 */
export interface DedicatedCloudDisasterRecoveryRemoteSiteDetailsOVH {
  /**
   * Datacenter Id (if hosted by OVH)
   * @nullable
   */
  datacenterId?: number | null;
  /**
   * Datacenter name (if hosted by OVH)
   * @nullable
   */
  datacenterName?: string | null;
  /**
   * Last VPN config change date (if type is onPremise)
   * @nullable
   */
  lastVpnConfig?: string | null;
  /**
   * Stunnel endpoint internal IP (if type is onPremise)
   * @nullable
   */
  remoteEndpointInternalIp?: DedicatedCloudDisasterRecoveryRemoteSiteDetailsOVHRemoteEndpointInternalIp;
  /**
   * Stunnel endpoint public IP (if type is onPremise)
   * @nullable
   */
  remoteEndpointPublicIp?: DedicatedCloudDisasterRecoveryRemoteSiteDetailsOVHRemoteEndpointPublicIp;
  /**
   * Remote ZVM IP (if type is onPremise)
   * @nullable
   */
  remoteZvmInternalIp?: DedicatedCloudDisasterRecoveryRemoteSiteDetailsOVHRemoteZvmInternalIp;
  /**
   * Zvm mode configured
   * @nullable
   */
  role?: DedicatedCloudDisasterRecoveryRemoteSiteDetailsOVHRole;
  /**
   * Service name (if hosted by OVH)
   * @nullable
   */
  serviceName?: string | null;
  /**
   * State of the remote Zvm
   * @nullable
   */
  state?: DedicatedCloudDisasterRecoveryRemoteSiteDetailsOVHState;
  /** Type of hosting for the remote datacenter */
  type?: DedicatedCloudDisasterRecoverySiteTypeEnumOVH;
  /**
   * VPN configuration state (if type is onPremise)
   * @nullable
   */
  vpnConfigState?: DedicatedCloudDisasterRecoveryRemoteSiteDetailsOVHVpnConfigState;
  /**
   * Installed version of Zerto
   * @nullable
   */
  zertoVersion?: string | null;
}

/**
 * Information about the remote paired site
 * @nullable
 */
export type DedicatedCloudDisasterRecoveryProfileOVHRemoteSiteInformation = DedicatedCloudDisasterRecoveryRemoteSiteDetailsOVH | null;

/**
 * Information about the site installed on this Dedicated Cloud
 * @nullable
 */
export type DedicatedCloudDisasterRecoveryProfileOVHLocalSiteInformation = DedicatedCloudDisasterRecoveryLocalSiteDetailsOVH | null;

/**
 * Disaster Recovery Plan Type
 * @nullable
 */
export type DedicatedCloudDisasterRecoveryProfileOVHDrpType = DedicatedCloudDisasterRecoveryDrpTypeEnumOVH | null;

/**
 * State of the disaster recovery option
 */
export interface DedicatedCloudDisasterRecoveryProfileOVH {
  /**
   * Disaster Recovery Plan Type
   * @nullable
   */
  drpType?: DedicatedCloudDisasterRecoveryProfileOVHDrpType;
  /**
   * Information about the site installed on this Dedicated Cloud
   * @nullable
   */
  localSiteInformation?: DedicatedCloudDisasterRecoveryProfileOVHLocalSiteInformation;
  /**
   * Information about the remote paired site
   * @nullable
   */
  remoteSiteInformation?: DedicatedCloudDisasterRecoveryProfileOVHRemoteSiteInformation;
  /** State of the disaster recovery service */
  state?: DedicatedCloudStateEnumOVH;
  /** Technical solution used */
  systemVersion?: string;
}

/**
 * Local Network Ip of the Zerto virtual manager
 * @nullable
 */
export type DedicatedCloudDisasterRecoveryLocalSiteDetailsOVHZvmIp = IpOVH | null;

/**
 * State of the local Zvm
 * @nullable
 */
export type DedicatedCloudDisasterRecoveryLocalSiteDetailsOVHState = DedicatedCloudStateEnumOVH | null;

/**
 * Local tunnel endpoint public Ip
 * @nullable
 */
export type DedicatedCloudDisasterRecoveryLocalSiteDetailsOVHEndpointPublicIp = IpOVH | null;

/**
 * Information on the local datacenter
 */
export interface DedicatedCloudDisasterRecoveryLocalSiteDetailsOVH {
  /**
   * Local tunnel endpoint public Ip
   * @nullable
   */
  endpointPublicIp?: DedicatedCloudDisasterRecoveryLocalSiteDetailsOVHEndpointPublicIp;
  /** Zvm mode configured */
  role?: DedicatedCloudDisasterRecoverySiteRoleEnumOVH;
  /**
   * State of the local Zvm
   * @nullable
   */
  state?: DedicatedCloudDisasterRecoveryLocalSiteDetailsOVHState;
  /** Type of hosting for the local datacenter */
  type?: DedicatedCloudDisasterRecoverySiteTypeEnumOVH;
  /** Installed version of Zerto */
  zertoVersion?: string;
  /**
   * Local Network Ip of the Zerto virtual manager
   * @nullable
   */
  zvmIp?: DedicatedCloudDisasterRecoveryLocalSiteDetailsOVHZvmIp;
}

/**
 * Disaster Recovery Plan Types
 */
export type DedicatedCloudDisasterRecoveryDrpTypeEnumOVH = typeof DedicatedCloudDisasterRecoveryDrpTypeEnumOVH[keyof typeof DedicatedCloudDisasterRecoveryDrpTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudDisasterRecoveryDrpTypeEnumOVH = {
  onPremise: 'onPremise',
  ovh: 'ovh',
} as const;

/**
 * IAM resource metadata
 * @nullable
 */
export type DedicatedCloudDedicatedCloudWithIAMOVHIam = IamResourceMetadataOVH | null;

/**
 * VMware on OVHcloud
 */
export interface DedicatedCloudDedicatedCloudWithIAMOVH {
  /** Advanced security state */
  readonly advancedSecurity?: boolean;
  /** The current bandwidth of your VMware on OVHcloud */
  readonly bandwidth?: string;
  /** Billing type of your VMware on OVHcloud */
  readonly billingType?: DedicatedCloudBillingTypeEnumOVH;
  /** Can the PCC be migrated to VCD */
  readonly canMigrateToVCD?: boolean;
  /** Url to the VMware on OVHcloud certified interface */
  readonly certifiedInterfaceUrl?: string;
  /** The current version of your VMware on OVHcloud */
  readonly commercialRange?: string;
  /** Description of your VMware on OVHcloud */
  description?: string;
  /** Generation of your VMware on OVHcloud */
  readonly generation?: DedicatedCloudGenerationEnumOVH;
  /**
   * IAM resource metadata
   * @nullable
   */
  readonly iam?: DedicatedCloudDedicatedCloudWithIAMOVHIam;
  /** Datacenter where your VMware on OVHcloud is physically located */
  readonly location?: string;
  /** The management interface name */
  readonly managementInterface?: DedicatedCloudManagementInterfaceEnumOVH;
  /** The reference universe information for your VMware on OVHcloud */
  readonly productReference?: DedicatedCloudProductReferenceEnumOVH;
  /** Service name of your VMware on OVHcloud */
  readonly serviceName?: string;
  /**
   * Name of the current service pack
   * @nullable
   */
  readonly servicePackName?: string | null;
  /** SPLA licensing state */
  readonly spla?: boolean;
  /**
   * Enable SSL v3 support. Warning : this option is not recommended as it was recognized as a security breach. If this is enabled, we advise you to enable the filtered User access policy
   * @nullable
   */
  sslV3?: boolean | null;
  /** Current state of your VMware on OVHcloud */
  readonly state?: DedicatedCloudStateEnumOVH;
  /** Access policy of your VMware on OVHcloud : opened to every IPs or filtered */
  userAccessPolicy?: DedicatedCloudUserAccessPolicyEnumOVH;
  /** The maximum amount of connected users allowed on the VMware on OVHcloud management interface */
  userLimitConcurrentSession?: number;
  userLogoutPolicy?: DedicatedCloudUserLogoutPolicyEnumOVH;
  /** The timeout (in seconds) for the user sessions on the VMware on OVHcloud management interface. 0 value disable the timeout */
  userSessionTimeout?: number;
  /** Version of the management interface */
  readonly version?: DedicatedCloudVersionOVH;
  /** Url to the VMware on OVHcloud vScope interface */
  readonly vScopeUrl?: string;
  /** Url to the VMware on OVHcloud web interface */
  readonly webInterfaceUrl?: string;
}

/**
 * VMware on OVHcloud
 */
export interface DedicatedCloudDedicatedCloudOVH {
  /** Advanced security state */
  readonly advancedSecurity?: boolean;
  /** The current bandwidth of your VMware on OVHcloud */
  readonly bandwidth?: string;
  /** Billing type of your VMware on OVHcloud */
  readonly billingType?: DedicatedCloudBillingTypeEnumOVH;
  /** Can the PCC be migrated to VCD */
  readonly canMigrateToVCD?: boolean;
  /** Url to the VMware on OVHcloud certified interface */
  readonly certifiedInterfaceUrl?: string;
  /** The current version of your VMware on OVHcloud */
  readonly commercialRange?: string;
  /** Description of your VMware on OVHcloud */
  description?: string;
  /** Generation of your VMware on OVHcloud */
  readonly generation?: DedicatedCloudGenerationEnumOVH;
  /** Datacenter where your VMware on OVHcloud is physically located */
  readonly location?: string;
  /** The management interface name */
  readonly managementInterface?: DedicatedCloudManagementInterfaceEnumOVH;
  /** The reference universe information for your VMware on OVHcloud */
  readonly productReference?: DedicatedCloudProductReferenceEnumOVH;
  /** Service name of your VMware on OVHcloud */
  readonly serviceName?: string;
  /**
   * Name of the current service pack
   * @nullable
   */
  readonly servicePackName?: string | null;
  /** SPLA licensing state */
  readonly spla?: boolean;
  /**
   * Enable SSL v3 support. Warning : this option is not recommended as it was recognized as a security breach. If this is enabled, we advise you to enable the filtered User access policy
   * @nullable
   */
  sslV3?: boolean | null;
  /** Current state of your VMware on OVHcloud */
  readonly state?: DedicatedCloudStateEnumOVH;
  /** Access policy of your VMware on OVHcloud : opened to every IPs or filtered */
  userAccessPolicy?: DedicatedCloudUserAccessPolicyEnumOVH;
  /** The maximum amount of connected users allowed on the VMware on OVHcloud management interface */
  userLimitConcurrentSession?: number;
  userLogoutPolicy?: DedicatedCloudUserLogoutPolicyEnumOVH;
  /** The timeout (in seconds) for the user sessions on the VMware on OVHcloud management interface. 0 value disable the timeout */
  userSessionTimeout?: number;
  /** Version of the management interface */
  readonly version?: DedicatedCloudVersionOVH;
  /** Url to the VMware on OVHcloud vScope interface */
  readonly vScopeUrl?: string;
  /** Url to the VMware on OVHcloud web interface */
  readonly webInterfaceUrl?: string;
}

/**
 * compliant range information
 */
export interface DedicatedCloudCompliantRangesOVH {
  /** @nullable */
  addons?: DedicatedCloudRequiredAddonOVH[] | null;
  estimateRequired?: boolean;
  name?: string;
  /** @nullable */
  upgradeCode?: string | null;
  upgradeRequired?: boolean;
}

/**
 * Config status of the cluster
 */
export type DedicatedCloudClusterClusterDrsModeEnumOVH = typeof DedicatedCloudClusterClusterDrsModeEnumOVH[keyof typeof DedicatedCloudClusterClusterDrsModeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudClusterClusterDrsModeEnumOVH = {
  fullyAutomated: 'fullyAutomated',
  manual: 'manual',
  partiallyAutomated: 'partiallyAutomated',
} as const;

/**
 * Config status of the cluster
 */
export type DedicatedCloudClusterClusterConfigsStatusEnumOVH = typeof DedicatedCloudClusterClusterConfigsStatusEnumOVH[keyof typeof DedicatedCloudClusterClusterConfigsStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudClusterClusterConfigsStatusEnumOVH = {
  disabled: 'disabled',
  enabled: 'enabled',
  unknown: 'unknown',
} as const;

/**
 * Modes of the AutoScale service
 */
export type DedicatedCloudClusterAutoScaleModeEnumOVH = typeof DedicatedCloudClusterAutoScaleModeEnumOVH[keyof typeof DedicatedCloudClusterAutoScaleModeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudClusterAutoScaleModeEnumOVH = {
  automatic: 'automatic',
  manual: 'manual',
} as const;

/**
 * Details about AutoScale
 */
export interface DedicatedCloudClusterAutoScaleOVH {
  /** Mode of Auto Scale-In Host operation */
  autoScaleInHost?: DedicatedCloudClusterAutoScaleModeEnumOVH;
  /** Mode of Auto Scale-Out Host operation */
  autoScaleOutHost?: DedicatedCloudClusterAutoScaleModeEnumOVH;
  /** Mode of Auto Scale-Out Storage operation */
  autoScaleOutStorage?: DedicatedCloudClusterAutoScaleModeEnumOVH;
  /** AutoScale configuration id */
  configId?: number;
  /** Id of the AutoScale Service */
  id?: number;
  /** Maintenace Mode for AutoScale service */
  inMaintenanceMode?: boolean;
  /** State of the Autoscale service */
  state?: DedicatedCloudOptionStateEnumOVH;
}

/**
 * All Dedicated Cloud feature status available
 */
export type DedicatedCloudCapabilitiesFeatureStatusEnumOVH = typeof DedicatedCloudCapabilitiesFeatureStatusEnumOVH[keyof typeof DedicatedCloudCapabilitiesFeatureStatusEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudCapabilitiesFeatureStatusEnumOVH = {
  active: 'active',
  comingSoon: 'comingSoon',
  no: 'no',
} as const;

/**
 * All the state of the backup
 */
export type DedicatedCloudBackupStateEnumOVH = typeof DedicatedCloudBackupStateEnumOVH[keyof typeof DedicatedCloudBackupStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudBackupStateEnumOVH = {
  deleting: 'deleting',
  delivered: 'delivered',
  disabled: 'disabled',
  disabling: 'disabling',
  enabling: 'enabling',
  error: 'error',
  migrating: 'migrating',
  pending: 'pending',
  removed: 'removed',
  stopping: 'stopping',
  toCreate: 'toCreate',
  toDelete: 'toDelete',
  toDisable: 'toDisable',
  toEnable: 'toEnable',
  toStop: 'toStop',
  unknown: 'unknown',
} as const;

/**
 * Size of the restore point
 * @nullable
 */
export type DedicatedCloudBackupRestorePointOVHSize = ComplexTypeUnitAndValueLongOVH | null;

/**
 * All possible replication sync status
 */
export type DedicatedCloudBackupReplicationSyncStatusOVH = typeof DedicatedCloudBackupReplicationSyncStatusOVH[keyof typeof DedicatedCloudBackupReplicationSyncStatusOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudBackupReplicationSyncStatusOVH = {
  ok: 'ok',
  'out-of-sync': 'out-of-sync',
  'sync-required': 'sync-required',
  unknown: 'unknown',
} as const;

/**
 * All recommendations for the proxies optimization
 */
export type DedicatedCloudBackupOptimizeRecommendationEnumOVH = typeof DedicatedCloudBackupOptimizeRecommendationEnumOVH[keyof typeof DedicatedCloudBackupOptimizeRecommendationEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudBackupOptimizeRecommendationEnumOVH = {
  add: 'add',
  optimized: 'optimized',
  remove: 'remove',
} as const;

/**
 * All messages descriptions for the proxies optimization
 */
export type DedicatedCloudBackupOptimizeMessageEnumOVH = typeof DedicatedCloudBackupOptimizeMessageEnumOVH[keyof typeof DedicatedCloudBackupOptimizeMessageEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudBackupOptimizeMessageEnumOVH = {
  hasMoreBackupJobs: 'hasMoreBackupJobs',
  hasMoreProxies: 'hasMoreProxies',
  hasSufficientProxies: 'hasSufficientProxies',
  noBackupJobs: 'noBackupJobs',
} as const;

/**
 * Details about proxies Optimization
 */
export interface DedicatedCloudBackupOptimizeProxiesOVH {
  /** Brief information about recommendation */
  message?: DedicatedCloudBackupOptimizeMessageEnumOVH;
  /** Number of proxies deployed in the Datacenter */
  numberOfProxiesDeployed?: number;
  /** Number of proxies get impacted by recommendation */
  numberOfProxiesImpact?: number;
  /** Action recommended for the optimization */
  recommendation?: DedicatedCloudBackupOptimizeRecommendationEnumOVH;
}

/**
 * All the offer type of the backup
 */
export type DedicatedCloudBackupOfferTypeEnumOVH = typeof DedicatedCloudBackupOfferTypeEnumOVH[keyof typeof DedicatedCloudBackupOfferTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudBackupOfferTypeEnumOVH = {
  advanced: 'advanced',
  backup: 'backup',
  classic: 'classic',
  legacy: 'legacy',
  premium: 'premium',
} as const;

/**
 * State of the backup job
 */
export type DedicatedCloudBackupJobStateEnumOVH = typeof DedicatedCloudBackupJobStateEnumOVH[keyof typeof DedicatedCloudBackupJobStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudBackupJobStateEnumOVH = {
  failed: 'failed',
  running: 'running',
  stopped: 'stopped',
  stopping: 'stopping',
  success: 'success',
  unknown: 'unknown',
  warning: 'warning',
} as const;

/**
 * All the type of a restore point
 */
export type DedicatedCloudBackupBackupTypeEnumOVH = typeof DedicatedCloudBackupBackupTypeEnumOVH[keyof typeof DedicatedCloudBackupBackupTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudBackupBackupTypeEnumOVH = {
  full: 'full',
  incremental: 'incremental',
} as const;

/**
 * Type of the restore point
 * @nullable
 */
export type DedicatedCloudBackupRestorePointOVHType = DedicatedCloudBackupBackupTypeEnumOVH | null;

/**
 * Details about a restore point
 */
export interface DedicatedCloudBackupRestorePointOVH {
  /**
   * Creation time of the restore point
   * @nullable
   */
  creationTime?: string | null;
  /**
   * Show if the restore point is corrupted
   * @nullable
   */
  isCorrupted?: boolean | null;
  /** Id of the restore point */
  restorePointId?: number;
  /**
   * Size of the restore point
   * @nullable
   */
  size?: DedicatedCloudBackupRestorePointOVHSize;
  /**
   * Type of the restore point
   * @nullable
   */
  type?: DedicatedCloudBackupRestorePointOVHType;
}

/**
 * All the possible Days of Backup
 */
export type DedicatedCloudBackupBackupDaysEnumOVH = typeof DedicatedCloudBackupBackupDaysEnumOVH[keyof typeof DedicatedCloudBackupBackupDaysEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudBackupBackupDaysEnumOVH = {
  Friday: 'Friday',
  Monday: 'Monday',
  Saturday: 'Saturday',
  Sunday: 'Sunday',
  Thursday: 'Thursday',
  Tuesday: 'Tuesday',
  Wednesday: 'Wednesday',
} as const;

/**
 * Details about BackupCapabilities
 */
export interface DedicatedCloudBackupBackupCapabilitiesOVH {
  /** Customized backup days */
  backupDays?: boolean;
  /** Customized Backup report */
  customReport?: boolean;
  /** Indicates additional backup proxy for large disk size VM */
  dedicatedProxy?: boolean;
  /** Indicates if backup will be encrypted */
  encryption?: boolean;
  /** Indicates if customer can add an additional email address for backup report */
  mailAddress?: boolean;
  /** Minimum number of full backups */
  minimumFullBackups?: number;
  /** Name of offer type */
  offerName?: string;
  /** Backup Proxy per host */
  proxyPerHost?: boolean;
  /** Backup Replication enabled */
  replication?: boolean;
  /** Restore points */
  retention?: number;
  /** Scheduled hour of backup start customizable */
  scheduleHour?: boolean;
}

/**
 * State of the backup job
 * @nullable
 */
export type DedicatedCloudBackupBackupOVHState = DedicatedCloudBackupStateEnumOVH | null;

/**
 * Offer type of the backup job
 * @nullable
 */
export type DedicatedCloudBackupBackupOVHOfferType = DedicatedCloudBackupOfferTypeEnumOVH | null;

/**
 * Last successful duration of the backup job
 * @nullable
 */
export type DedicatedCloudBackupBackupOVHLastSuccessfulDuration = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Last result of the backup job
 * @nullable
 */
export type DedicatedCloudBackupBackupOVHLastResult = DedicatedCloudBackupJobStateEnumOVH | null;

/**
 * Last duration of the backup job
 * @nullable
 */
export type DedicatedCloudBackupBackupOVHLastDuration = ComplexTypeUnitAndValueLongOVH | null;

/**
 * Details about a backup
 */
export interface DedicatedCloudBackupBackupOVH {
  /**
   * Disk space allocated to the virtual machine (in GB)
   * @nullable
   */
  allocatedDisk?: number | null;
  /**
   * List of days your Virtual Machine will be backuped
   * @nullable
   */
  backupDays?: DedicatedCloudBackupBackupDaysEnumOVH[] | null;
  /**
   * Associated backup repository Id
   * @nullable
   */
  backupRepositoryId?: number | null;
  /**
   * Backup is encrypted
   * @nullable
   */
  encryption?: boolean | null;
  /**
   * Last creation time of the backup job
   * @nullable
   */
  lastCreationTime?: string | null;
  /**
   * Last duration of the backup job
   * @nullable
   */
  lastDuration?: DedicatedCloudBackupBackupOVHLastDuration;
  /**
   * Last result of the backup job
   * @nullable
   */
  lastResult?: DedicatedCloudBackupBackupOVHLastResult;
  /**
   * Last successful creation time of the backup job
   * @nullable
   */
  lastSuccessfulCreationTime?: string | null;
  /**
   * Last successful duration of the backup job
   * @nullable
   */
  lastSuccessfulDuration?: DedicatedCloudBackupBackupOVHLastSuccessfulDuration;
  /**
   * Offer type of the backup job
   * @nullable
   */
  offerType?: DedicatedCloudBackupBackupOVHOfferType;
  /**
   * Restore points of this backup job
   * @nullable
   */
  restorePoints?: DedicatedCloudBackupRestorePointOVH[] | null;
  /**
   * Number of days before the backup is deleted
   * @nullable
   */
  retentionTime?: number | null;
  /**
   * State of the backup job
   * @nullable
   */
  state?: DedicatedCloudBackupBackupOVHState;
}

/**
 * Zpool and their availability
 */
export interface DedicatedCloudZpoolStockProfileOVH {
  /** Minimum accepted available zpools */
  minimumAvailability?: string;
  /** Reference of zpool */
  profile?: string;
  /** Available zpools */
  realCount?: number;
}

/**
 * Datastore connection state.
 * @nullable
 */
export type DedicatedCloudVsanDatastoreOVHConnectionState = DedicatedCloudFilerConnexionStateEnumOVH | null;

/**
 * vSAN datastore
 */
export interface DedicatedCloudVsanDatastoreOVH {
  /** Id of Cluster. */
  readonly clusterId?: number;
  /**
   * Datastore connection state.
   * @nullable
   */
  readonly connectionState?: DedicatedCloudVsanDatastoreOVHConnectionState;
  /** Id of the datacenter. */
  readonly datacenterId?: number;
  /** Id of the vsan datastore. */
  readonly datastoreId?: number;
  /** Name of the datastore. */
  readonly datastoreName?: string;
  /**
   * Available space of this datastore, in GB
   * @nullable
   */
  readonly spaceFree?: number | null;
  /**
   * Provisioned space of this datastore, in GB
   * @nullable
   */
  readonly spaceProvisioned?: number | null;
  /**
   * Used Space of this datastore, in GB
   * @nullable
   */
  readonly spaceUsed?: number | null;
  /**
   * Number of virtual machine on the datastore
   * @nullable
   */
  readonly vmTotal?: number | null;
}

/**
 * VMware Aria Operations outgoing flows
 */
export interface DedicatedCloudVropsOutgoingFlowOVH {
  /** Outgoing flow description */
  readonly description?: string;
  /** IP address of the remote service */
  readonly ip?: Ipv4OVH;
  /** Id of the VMware Aria Operations outgoing flow */
  readonly outgoingFlowId?: number;
  /** Remote service port (25, 465, 587 or 2525) */
  readonly servicePort?: number;
  /** Outgoing flow state */
  readonly state?: DedicatedCloudOptionAccessNetworkStateEnumOVH;
}

/**
 * VMware Aria Operation public IP
 * @nullable
 */
export type DedicatedCloudVropsOVHVROpsPublicIP = IpOVH | null;

/**
 * VMware Aria Operations option
 */
export interface DedicatedCloudVropsOVH {
  /** State of the option */
  readonly state?: DedicatedCloudOptionStateEnumOVH;
  /**
   * Available upgrades for Aria Operations
   * @nullable
   */
  readonly upgrades?: readonly string[] | null;
  /**
   * Url of Aria Operations interface
   * @nullable
   */
  readonly url?: string | null;
  /**
   * Version of Aria Operations
   * @nullable
   */
  readonly version?: string | null;
  /**
   * VMware Aria Operation public IP
   * @nullable
   */
  readonly vROpsPublicIP?: DedicatedCloudVropsOVHVROpsPublicIP;
}

/**
 * The fault tolerance state of the virtual machine.
 * @nullable
 */
export type DedicatedCloudVmOVHStateFt = DedicatedCloudVirtualMachineFaultToleranceStateOVH | null;

/**
 * Registered managed license
 * @nullable
 */
export type DedicatedCloudVmOVHLicense = DedicatedCloudSplaKmsLicenseIncludingLegacyEnumOVH | null;

/**
 * Backup associated to this Virtual Machine
 * @nullable
 */
export type DedicatedCloudVmOVHBackup = DedicatedCloudBackupBackupOVH | null;

/**
 * Virtual machine
 */
export interface DedicatedCloudVmOVH {
  /**
   * Backup associated to this Virtual Machine
   * @nullable
   */
  readonly backup?: DedicatedCloudVmOVHBackup;
  /**
   * Virtual machine cdroms devices
   * @nullable
   */
  readonly cdroms?: readonly DedicatedCloudVirtualMachineCdromOVH[] | null;
  /**
   * Cluster of the virtual machine.
   * @nullable
   */
  readonly clusterName?: string | null;
  /**
   * Maximum CPU performance, in MHz.
   * @nullable
   */
  readonly cpuMax?: number | null;
  /**
   * Number of processors in the virtual machine.
   * @nullable
   */
  readonly cpuNum?: number | null;
  /**
   * Time that the virtual machine was ready, but could not get scheduled to run on the physical CPU. In millisecond
   * @nullable
   */
  readonly cpuReady?: number | null;
  /**
   * Percentage of time that the virtual machine was ready, but could not get scheduled to run on the physical CPU. In percent
   * @nullable
   */
  readonly cpuReadyPercent?: number | null;
  /**
   * Current CPU performance, in MHz.
   * @nullable
   */
  readonly cpuUsed?: number | null;
  /**
   * List of filers in use by the virtual machine.
   * @nullable
   */
  readonly filers?: readonly DedicatedCloudVmFilerOVH[] | null;
  /**
   * Folder of the virtual machine.
   * @nullable
   */
  readonly folderName?: string | null;
  /**
   * VMware guest configured OS family
   * @nullable
   */
  readonly guestOsFamily?: string | null;
  /**
   * Name of the host hosting the virtual machine.
   * @nullable
   */
  readonly hostName?: string | null;
  /**
   * Registered managed license
   * @nullable
   */
  readonly license?: DedicatedCloudVmOVHLicense;
  /**
   * Memory size of the virtual machine, in MB
   * @nullable
   */
  readonly memoryMax?: number | null;
  /**
   * Amount of guest memory that is shared with other virtual machines, in Mb
   * @nullable
   */
  readonly memoryTps?: string | null;
  /**
   * Current memory utilization, in MB
   * @nullable
   */
  readonly memoryUsed?: number | null;
  /** moRef of the virtual machine. */
  readonly moRef?: string;
  /**
   * Name of the virtual machine.
   * @nullable
   */
  readonly name?: string | null;
  /**
   * Number of packets received.
   * @nullable
   */
  readonly netPacketRx?: number | null;
  /**
   * Number of packets transmitted.
   * @nullable
   */
  readonly netPacketTx?: number | null;
  /**
   * Rate at which data is received. In KB/s
   * @nullable
   */
  readonly netRx?: number | null;
  /**
   * Rate at which data is transmitted. In KB/s
   * @nullable
   */
  readonly netTx?: number | null;
  /**
   * List of the networks link to this virtual machine
   * @nullable
   */
  readonly networks?: readonly DedicatedCloudVmNetworkOVH[] | null;
  /** Power state of the virtual machine. */
  readonly powerState?: DedicatedCloudVirtualMachinePowerStateOVH;
  /**
   * Amount of time for a read operation from the virtual disk. In millisecond
   * @nullable
   */
  readonly readLatency?: number | null;
  /**
   * Number of read issued per second to the virtual disk. In millisecond
   * @nullable
   */
  readonly readPerSecond?: number | null;
  /**
   * Rate of reading data from the virtual disk. In KB/s
   * @nullable
   */
  readonly readRate?: number | null;
  /**
   * The index of the current VM in instanceUuids array starting from 1, so 1 means that it is the primary VM.
   * @nullable
   */
  readonly roleFt?: string | null;
  /**
   * Number of snapshot of the virtual machine.
   * @nullable
   */
  readonly snapshotNum?: number | null;
  /**
   * The fault tolerance state of the virtual machine.
   * @nullable
   */
  readonly stateFt?: DedicatedCloudVmOVHStateFt;
  /** Id of the virtual machine. */
  readonly vmId?: number;
  /**
   * Current version status of VMware Tools in the guest operating system.
   * @nullable
   */
  readonly vmwareTools?: string | null;
  /**
   * Current version of VMware Tools
   * @nullable
   */
  readonly vmwareToolsVersion?: string | null;
  /**
   * Amount of time for a write operation from the virtual disk. In millisecond
   * @nullable
   */
  readonly writeLatency?: number | null;
  /**
   * Number of write issued per second to the virtual disk. In millisecond
   * @nullable
   */
  readonly writePerSecond?: number | null;
  /**
   * Rate of writing data from the virtual disk. In KB/s
   * @nullable
   */
  readonly writeRate?: number | null;
}

/**
 * vLAN
 */
export interface DedicatedCloudVlanOVH {
  readonly name?: string;
  /** Speed in Mbps */
  readonly routingRateLimit?: string;
  readonly state?: DedicatedCloudVlanStateEnumOVH;
  readonly type?: DedicatedCloudVlanTypeEnumOVH;
  readonly vlanId?: number;
  readonly vlanNumber?: number;
}

/**
 * Detailed version
 */
export interface DedicatedCloudVersionOVH {
  build?: string;
  major?: string;
  minor?: string;
}

/**
 * Dedicated Cloud vendors objects types
 */
export type DedicatedCloudVendorObjectTypeEnumOVH = typeof DedicatedCloudVendorObjectTypeEnumOVH[keyof typeof DedicatedCloudVendorObjectTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudVendorObjectTypeEnumOVH = {
  cluster: 'cluster',
  datacenter: 'datacenter',
  filer: 'filer',
  host: 'host',
  vm: 'vm',
} as const;

/**
 * Vendor information
 */
export interface DedicatedCloudVendorOVH {
  /** name */
  readonly vendorName?: string;
}

/**
 * Virtual machine encryption KMS server
 */
export interface DedicatedCloudVMEncryptionAccessNetworkOVH {
  /** Description of your option access network */
  readonly description?: string;
  /** IP address of the remote service */
  readonly ip?: Ipv4OVH;
  /** Id of the VM Encryption KMS */
  readonly kmsId?: number;
  /** VM Encryption KMS TCP port */
  readonly kmsTcpPort?: number;
  /** SSL thumbprint of the remote service */
  readonly sslThumbprint?: string;
  /** State of the option */
  readonly state?: DedicatedCloudOptionAccessNetworkStateEnumOVH;
}

/**
 * Virtual machine encryption option
 */
export interface DedicatedCloudVMEncryptionOVH {
  /** State of the option */
  readonly state?: DedicatedCloudOptionStateEnumOVH;
}

/**
 * Which user will be disconnected first in case of quota of maximum connection is reached
 */
export type DedicatedCloudUserLogoutPolicyEnumOVH = typeof DedicatedCloudUserLogoutPolicyEnumOVH[keyof typeof DedicatedCloudUserLogoutPolicyEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudUserLogoutPolicyEnumOVH = {
  first: 'first',
  last: 'last',
} as const;

/**
 * Open or restricted access to management interface ?
 */
export type DedicatedCloudUserAccessPolicyEnumOVH = typeof DedicatedCloudUserAccessPolicyEnumOVH[keyof typeof DedicatedCloudUserAccessPolicyEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudUserAccessPolicyEnumOVH = {
  filtered: 'filtered',
  open: 'open',
} as const;

/**
 * User type (if any)
 * @nullable
 */
export type DedicatedCloudUserOVHType = DedicatedCloudUserTypeEnumOVH | null;

/**
 * Linked Identity Provider type (if any), can be Federation Active Directory or IAM
 * @nullable
 */
export type DedicatedCloudUserOVHIdentityProviderType = DedicatedCloudUserIdentityProviderTypeEnumOVH | null;

/**
 * Deprecated - Federation Active Directory User type (if any)
 * @nullable
 */
export type DedicatedCloudUserOVHActiveDirectoryType = DedicatedCloudUserTypeEnumOVH | null;

/**
 * Activation state of the user account
 * @nullable
 */
export type DedicatedCloudUserOVHActivationState = DedicatedCloudUserActivationStateEnumOVH | null;

/**
 * User
 */
export interface DedicatedCloudUserOVH {
  /**
   * Activation state of the user account
   * @nullable
   */
  readonly activationState?: DedicatedCloudUserOVHActivationState;
  /**
   * Deprecated - Linked Federation Active Directory (if any)
   * @nullable
   */
  readonly activeDirectoryId?: number | null;
  /**
   * Deprecated - Federation Active Directory User type (if any)
   * @nullable
   */
  readonly activeDirectoryType?: DedicatedCloudUserOVHActiveDirectoryType;
  /** Defines if the user can manage ip failovers */
  readonly canManageIpFailOvers?: boolean;
  /** Defines if the user can manage the network */
  readonly canManageNetwork?: boolean;
  /** Defines if the user can manage users rights */
  readonly canManageRights?: boolean;
  /**
   * Email address of the user
   * @nullable
   */
  readonly email?: string | null;
  /** Defines if the user can manage encryption / KMS configuration */
  readonly encryptionRight?: boolean;
  /**
   * First name of the user
   * @nullable
   */
  readonly firstName?: string | null;
  /** Defines if the user is a full admin in readonly */
  readonly fullAdminRo?: boolean;
  /**
   * Linked Identity Provider (if any), can be Federation Active Directory or IAM
   * @nullable
   */
  readonly identityProviderId?: number | null;
  /**
   * Linked Identity Provider type (if any), can be Federation Active Directory or IAM
   * @nullable
   */
  readonly identityProviderType?: DedicatedCloudUserOVHIdentityProviderType;
  /** Check if the given VMware on OVHcloud user can be enabled or disabled ? */
  readonly isEnableManageable?: boolean;
  /** Defines if the user can confirm security tokens (if a compatible option is enabled) */
  readonly isTokenValidator?: boolean;
  /**
   * Last name of the user
   * @nullable
   */
  readonly lastName?: string | null;
  /** Login of the user */
  readonly login?: string;
  /** Name of the user */
  readonly name?: string;
  /** Is this User able to access nsx interface (requires NSX option) */
  readonly nsxRight?: boolean;
  /**
   * Mobile phone number of the user
   * @nullable
   */
  readonly phoneNumber?: string | null;
  /** Defines if the user receives technical alerts */
  readonly receiveAlerts?: boolean;
  /** State of the user account */
  readonly state?: DedicatedCloudUserStateEnumOVH;
  /**
   * User type (if any)
   * @nullable
   */
  readonly type?: DedicatedCloudUserOVHType;
  readonly userId?: number;
}

/**
 * All states a Dedicated Cloud two factor authentication whitelist can be in
 */
export type DedicatedCloudTwoFAWhitelistStateEnumOVH = typeof DedicatedCloudTwoFAWhitelistStateEnumOVH[keyof typeof DedicatedCloudTwoFAWhitelistStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudTwoFAWhitelistStateEnumOVH = {
  enabled: 'enabled',
  enabling: 'enabling',
  error: 'error',
  migrating: 'migrating',
  removed: 'removed',
  removing: 'removing',
} as const;

/**
 * All states a Dedicated Cloud Task can be in
 */
export type DedicatedCloudTaskStateEnumOVH = typeof DedicatedCloudTaskStateEnumOVH[keyof typeof DedicatedCloudTaskStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudTaskStateEnumOVH = {
  canceled: 'canceled',
  doing: 'doing',
  done: 'done',
  error: 'error',
  fixing: 'fixing',
  toCancel: 'toCancel',
  toCreate: 'toCreate',
  todo: 'todo',
  unknown: 'unknown',
  waitingForChilds: 'waitingForChilds',
  waitingTodo: 'waitingTodo',
} as const;

/**
 * Operation
 */
export interface DedicatedCloudTaskOVH {
  /**
   * Creator of the task
   * @nullable
   */
  readonly createdBy?: string | null;
  /**
   * Origin of the task
   * @nullable
   */
  readonly createdFrom?: string | null;
  /**
   * datacenterId of the associated dedicatedCloud.Datacenter object
   * @nullable
   */
  readonly datacenterId?: number | null;
  /**
   * Current progress description
   * @nullable
   */
  readonly description?: string | null;
  /**
   * Task end date
   * @nullable
   */
  readonly endDate?: string | null;
  /** Task execution date */
  readonly executionDate?: string;
  /**
   * filerId of the associated dedicatedCloud.Filer object
   * @nullable
   */
  readonly filerId?: number | null;
  /**
   * hostId of the associated dedicatedCloud.Host object
   * @nullable
   */
  readonly hostId?: number | null;
  /**
   * Task last modification date
   * @nullable
   */
  readonly lastModificationDate?: string | null;
  /**
   * Maintenance task min allowed execution date
   * @nullable
   */
  readonly maintenanceDateFrom?: string | null;
  /**
   * Maintenance task max allowed execution date
   * @nullable
   */
  readonly maintenanceDateTo?: string | null;
  /** Task name */
  readonly name?: string;
  /**
   * network of the associated dedicatedCloud.Ip object
   * @nullable
   */
  readonly network?: string | null;
  /**
   * networkAccessId of the associated dedicatedCloud.AllowedNetwork object
   * @nullable
   */
  readonly networkAccessId?: number | null;
  /**
   * orderId of the associated billing.Order object
   * @nullable
   */
  readonly orderId?: number | null;
  /**
   * taskId of the parent dedicatedCloud.Task object
   * @nullable
   */
  readonly parentTaskId?: number | null;
  /** Current progress */
  readonly progress?: number;
  /** Current Task state */
  readonly state?: DedicatedCloudTaskStateEnumOVH;
  /** Task id */
  readonly taskId?: number;
  /** Task type */
  readonly type?: string;
  /**
   * userId of the associated dedicatedCloud.User object
   * @nullable
   */
  readonly userId?: number | null;
  /**
   * vlanId of the parent dedicatedCloud.Vlan object
   * @nullable
   */
  readonly vlanId?: number | null;
}

/**
 * Tag states
 */
export type DedicatedCloudTagStateEnumOVH = typeof DedicatedCloudTagStateEnumOVH[keyof typeof DedicatedCloudTagStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudTagStateEnumOVH = {
  disabled: 'disabled',
  disabling: 'disabling',
  enabled: 'enabled',
  enabling: 'enabling',
  error: 'error',
  unknown: 'unknown',
  updating: 'updating',
} as const;

/**
 * State of the tag
 * @nullable
 */
export type DedicatedCloudTagOVHState = DedicatedCloudTagStateEnumOVH | null;

/**
 * Tag
 */
export interface DedicatedCloudTagOVH {
  /**
   * Description of the tag
   * @nullable
   */
  readonly description?: string | null;
  /** Name of the tag */
  readonly name?: string;
  /**
   * State of the tag
   * @nullable
   */
  readonly state?: DedicatedCloudTagOVHState;
  /**
   * Value of the tag
   * @nullable
   */
  readonly value?: string | null;
  /**
   * Version of the tag
   * @nullable
   */
  readonly version?: string | null;
}

/**
 * Forward logs from your PCC infrastructure to your syslog
 */
export interface DedicatedCloudSyslogForwardAccessNetworkOVH {
  /** Log forwarding description */
  readonly description?: string;
  /** IP address of the remote service */
  readonly ip?: Ipv4OVH;
  /** Id of the log forwarder */
  readonly logForwardId?: number;
  /** Minimal log level */
  readonly logLevel?: DedicatedCloudSyslogForwardLogLevelEnumOVH;
  /** Use unsecure log forwarding */
  readonly noSsl?: boolean;
  /** Remote service port */
  readonly servicePort?: number;
  /** Possible log sources type */
  readonly sourceType?: readonly DedicatedCloudSyslogForwardSourceTypeEnumOVH[];
  /**
   * SSL thumbprint of the remote service
   * @nullable
   */
  readonly sslThumbprint?: string | null;
  /** Log fowarder state */
  readonly state?: DedicatedCloudOptionAccessNetworkStateEnumOVH;
}

/**
 * Log forward to syslog option
 */
export interface DedicatedCloudSyslogForwardOVH {
  /** State of the option */
  readonly state?: DedicatedCloudOptionStateEnumOVH;
}

/**
 * All states a Dedicated Cloud can be in
 */
export type DedicatedCloudStateEnumOVH = typeof DedicatedCloudStateEnumOVH[keyof typeof DedicatedCloudStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudStateEnumOVH = {
  available: 'available',
  delivered: 'delivered',
  disabled: 'disabled',
  disabling: 'disabling',
  error: 'error',
  migrating: 'migrating',
  provisionning: 'provisionning',
  recycling: 'recycling',
  reserved: 'reserved',
  toDisable: 'toDisable',
  toProvision: 'toProvision',
  toRecycle: 'toRecycle',
  toRemove: 'toRemove',
  toUnprovision: 'toUnprovision',
  unprovisionning: 'unprovisionning',
  upgrading: 'upgrading',
} as const;

/**
 * Service pack
 */
export interface DedicatedCloudServicePackOVH {
  /** Name of the Service Pack */
  readonly name?: string;
  /** Options available in the Service Pack */
  readonly options?: readonly string[];
}

/**
 * Security option
 */
export interface DedicatedCloudSecurityOptionOVH {
  /** State of security options */
  readonly state?: DedicatedCloudSecurityOptionStateEnumOVH;
}

/**
 * Robot
 */
export interface DedicatedCloudRobotOVH {
  /** The criticity of this robot */
  readonly criticity?: string;
  /**
   * Description of this robot
   * @nullable
   */
  readonly description?: string | null;
  /** Is this robot enabled */
  readonly enabled?: boolean;
  /** The name of this robot */
  readonly name?: string;
  /** The type of this robot */
  readonly type?: string;
}

/**
 * User datacenter right
 */
export interface DedicatedCloudRightOVH {
  /** Determine if the user can add ressources in your VMware on OVHcloud */
  canAddRessource?: boolean;
  readonly datacenterId?: number;
  /** Determine how this user can interact with the VMware on OVHcloud V(x)Lans */
  networkRole?: DedicatedCloudRightNetworkRoleEnumOVH;
  /** Determine what kind of access the User will have in this Datacenter of your VMware on OVHcloud */
  right?: DedicatedCloudRightRightEnumOVH;
  readonly rightId?: number;
  /** Determine how this user can interact with the VMware on OVHcloud VM Network */
  vmNetworkRole?: DedicatedCloudRightVmNetworkRoleEnumOVH;
}

/**
 * Type of the restore point
 * @nullable
 */
export type DedicatedCloudRestorePointOVHType = DedicatedCloudBackupBackupTypeEnumOVH | null;

/**
 * Restore point
 */
export interface DedicatedCloudRestorePointOVH {
  /**
   * Creation time of the restore point
   * @nullable
   */
  readonly creationTime?: string | null;
  /** Show if the restore point is corrupted */
  readonly isCorrupted?: boolean;
  /** Id of the restore point. */
  readonly restorePointId?: number;
  /** Size of the restore point */
  readonly restorePointSize?: ComplexTypeUnitAndValueLongOVH;
  /**
   * Type of the restore point
   * @nullable
   */
  readonly type?: DedicatedCloudRestorePointOVHType;
}

/**
 * Your netmask set on the private gateway
 * @nullable
 */
export type DedicatedCloudPrivateGatewayOVHCustomerNetmask = IpOVH | null;

/**
 * Ip set on your private gateway in your network
 * @nullable
 */
export type DedicatedCloudPrivateGatewayOVHCustomerIp = IpOVH | null;

/**
 * Private management gateway
 */
export interface DedicatedCloudPrivateGatewayOVH {
  /**
   * Ip set on your private gateway in your network
   * @nullable
   */
  readonly customerIp?: DedicatedCloudPrivateGatewayOVHCustomerIp;
  /**
   * Your netmask set on the private gateway
   * @nullable
   */
  readonly customerNetmask?: DedicatedCloudPrivateGatewayOVHCustomerNetmask;
  /**
   * Portgroup in your VMware on OVHcloud used to deploy the private gateway
   * @nullable
   */
  readonly customerPortGroup?: string | null;
  /** State of the option */
  readonly state?: DedicatedCloudOptionStateEnumOVH;
}

/**
 * PCI-DSS certification option
 */
export interface DedicatedCloudPciDssOVH {
  /** State of the option */
  readonly state?: DedicatedCloudOptionStateEnumOVH;
}

/**
 * Hosting location
 */
export interface DedicatedCloudPccZoneOVH {
  /** Name of City */
  readonly city?: string;
  /** Country code */
  readonly countryCode?: NichandleCountryEnumOVH;
  /** Id of pccZone */
  readonly id?: number;
  /** Name of pccZone */
  readonly pccZone?: string;
  /** Region name */
  readonly region?: string;
  /** Location name */
  readonly regionLocation?: string;
}

/**
 * PCC and their availability
 */
export interface DedicatedCloudPccStockProfileOVH {
  /** Available PCC */
  count?: number;
  /** Kind of hypervisor */
  mode?: string;
  /** Hypervisor version */
  realVersion?: string;
}

/**
 * Hypervisor
 */
export interface DedicatedCloudOsOVH {
  /** Full name of hypervisor */
  readonly fullName?: string;
  /** Last modification of hypervisor */
  readonly lastModificationDate?: string;
  /** Short name of hypervisor */
  readonly shortName?: string;
}

/**
 * User object right
 */
export interface DedicatedCloudObjectRightOVH {
  /** Name of the object */
  readonly name?: string;
  readonly objectRightId?: number;
  /** Right propagation on children objects */
  readonly propagate?: boolean;
  /** User access on the VMware object */
  readonly right?: DedicatedCloudRightRightEnumOVH;
  /** Type of the object */
  readonly type?: DedicatedCloudRightUserObjectRightTypeEnumOVH;
  /** The VMware MoRef of the object */
  readonly vmwareObjectId?: string;
}

/**
 * NSX-T Edge resilience test status
 */
export interface DedicatedCloudNsxtEdgeResilienceOVH {
  /** State of the option */
  readonly state?: DedicatedCloudOptionStateEnumOVH;
}

/**
 * NSX-T Edge
 */
export interface DedicatedCloudNsxtEdgeOVH {
  /**
   * Location of NSX-T Edge disks
   * @nullable
   */
  readonly diskLocation?: string | null;
  /** IP of the NSX-T Edge */
  readonly ip?: IpOVH;
  /**
   * The VMware MoRef of the NSX-T Edge
   * @nullable
   */
  readonly moRef?: string | null;
  /** Name of the NSX-T Edge */
  readonly name?: string;
  /** Id of the NSX-T Edge */
  readonly nsxtEdgeId?: number;
  /** Size of the NSX-T Edge */
  readonly size?: DedicatedCloudNsxtNsxtEdgeSizeEnumOVH;
  /** State of the NSX-T Edge */
  readonly state?: DedicatedCloudStateEnumOVH;
}

/**
 * VMware NSX-T option
 */
export interface DedicatedCloudNsxtOVH {
  /**
   * Installation status on all datacenters
   * @nullable
   */
  readonly datacentersState?: readonly DedicatedCloudOptionDatacenterOptionStateOVH[] | null;
  /** State of the NSX-T option */
  readonly state?: DedicatedCloudOptionStateEnumOVH;
  /**
   * Url of the NSX-T interface
   * @nullable
   */
  readonly url?: string | null;
  /**
   * Version of the NSX-T
   * @nullable
   */
  readonly version?: string | null;
}

/**
 * VMware NSX-V option
 */
export interface DedicatedCloudNsxOVH {
  /** State of the option */
  readonly state?: DedicatedCloudOptionStateEnumOVH;
  /**
   * Url of the NSX API
   * @nullable
   */
  readonly url?: string | null;
}

/**
 * The management interface of this Dedicated Cloud
 */
export type DedicatedCloudManagementInterfaceEnumOVH = typeof DedicatedCloudManagementInterfaceEnumOVH[keyof typeof DedicatedCloudManagementInterfaceEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudManagementInterfaceEnumOVH = {
  azure: 'azure',
  openstack: 'openstack',
  systemcenter: 'systemcenter',
  vcloud: 'vcloud',
  vcsa: 'vcsa',
  vsphere: 'vsphere',
} as const;

/**
 * URL with real time logs
 */
export interface DedicatedCloudLogsURLOVH {
  /** Expiration date */
  expirationDate?: string;
  /** URL */
  url?: string;
}

/**
 * synchronous operation after subscribing or unsubscribing to a resource logs
 */
export interface DedicatedCloudLogSubscriptionResponseOVH {
  /** Identifier of the operation */
  operationId?: string;
  /** Operation owner's service name */
  serviceName?: string;
}

/**
 * Log subscription resource
 */
export interface DedicatedCloudLogSubscriptionResourceOVH {
  /** Name of subscribed resource */
  name?: string;
  /** Type of subscribed resource */
  type?: string;
}

/**
 * Details about an Ip
 */
export interface DedicatedCloudIpDetailsOVH {
  /** IP address */
  ip?: IpOVH;
  /**
   * IP address reverse record
   * @nullable
   */
  reverse?: string | null;
  /** IP address usage */
  usage?: DedicatedCloudIpUsageEnumOVH;
  /**
   * IP address usage details
   * @nullable
   */
  usageDetails?: string | null;
}

/**
 * All countries in which an Ip Block may be ordered
 */
export type DedicatedCloudIpCountriesEnumOVH = typeof DedicatedCloudIpCountriesEnumOVH[keyof typeof DedicatedCloudIpCountriesEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudIpCountriesEnumOVH = {
  be: 'be',
  ca: 'ca',
  ch: 'ch',
  cz: 'cz',
  de: 'de',
  es: 'es',
  fi: 'fi',
  fr: 'fr',
  gb: 'gb',
  ie: 'ie',
  it: 'it',
  lt: 'lt',
  nl: 'nl',
  pl: 'pl',
  pt: 'pt',
  us: 'us',
} as const;

/**
 * IP block
 */
export interface DedicatedCloudIpOVH {
  readonly country?: string;
  readonly description?: string;
  /** Gateway value */
  readonly gateway?: IpOVH;
  /** Netmask value */
  readonly netmask?: IpOVH;
  /** IP ex: 213.186.33.34/24 */
  readonly network?: Ipv4BlockOVH;
  /** Network name */
  readonly networkName?: string;
  /** The Regional Internet Registry of this Ip Block */
  readonly register?: DedicatedCloudBlockRegisterEnumOVH;
  /** Vlan where this network is routed */
  readonly vlanNumber?: number;
}

/**
 * OVHcloud IAM option
 */
export interface DedicatedCloudIamOVH {
  /**
   * Identity Provider ID
   * @nullable
   */
  readonly identityProviderId?: number | null;
  /** State of the option */
  readonly state?: DedicatedCloudOptionStateEnumOVH;
}

/**
 * The Hypervisor version of this Dedicated Cloud component
 */
export type DedicatedCloudHypervisorVersionEnumOVH = typeof DedicatedCloudHypervisorVersionEnumOVH[keyof typeof DedicatedCloudHypervisorVersionEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudHypervisorVersionEnumOVH = {
  '41': '4.1',
  '50': '5.0',
  '51': '5.1',
  '55': '5.5',
  '60': '6.0',
  '65': '6.5',
  '67': '6.7',
  '70': '7.0',
  '80': '8.0',
  hv31: 'hv3.1',
  hvdc31: 'hvdc3.1',
  nc10: 'nc1.0',
} as const;

/**
 * Hypervisor and their availability
 */
export interface DedicatedCloudHostStockHypervisorOVH {
  /** Number of available hypervisors */
  value?: number;
  /** Version of hypervisor */
  version?: string;
}

/**
 * Processor generation and their availability
 */
export interface DedicatedCloudHostStockProcGenOVH {
  /** CPU generation */
  cpuGeneration?: string;
  /** Number of available hosts */
  value?: DedicatedCloudHostStockHypervisorOVH[];
}

/**
 * HostProfiles and their availability
 */
export interface DedicatedCloudHostStockProfileOVH {
  /** Id of host profile */
  id?: number;
  /** Name of host profile */
  name?: string;
  /** Reference of host profile */
  ref?: string;
  /** Available hosts */
  value?: DedicatedCloudHostStockProcGenOVH[];
}

/**
 * Host resilience test status
 */
export interface DedicatedCloudHostResilienceOVH {
  /** State of the option */
  readonly state?: DedicatedCloudOptionStateEnumOVH;
}

/**
 * Host profile
 */
export interface DedicatedCloudHostProfileOVH {
  /** Id of Host profile */
  readonly id?: number;
  /** Name of Host profile */
  readonly name?: string;
}

/**
 * Connection state of the host
 * @nullable
 */
export type DedicatedCloudHostOVHConnectionState = DedicatedCloudHostSystemConnectionStateOVH | null;

/**
 * Host
 */
export interface DedicatedCloudHostOVH {
  /** Billing type of the host */
  readonly billingType?: DedicatedCloudRessourcesBillingTypeEnumOVH;
  /**
   * Cluster of the host
   * @nullable
   */
  readonly clusterName?: string | null;
  /**
   * Connection state of the host
   * @nullable
   */
  readonly connectionState?: DedicatedCloudHostOVHConnectionState;
  /** CPU total frenquency */
  readonly cpu?: ComplexTypeUnitAndValueDoubleOVH;
  /**
   * The maximum speed of the cpu, in Mhz
   * @nullable
   */
  readonly cpuMax?: number | null;
  /**
   * The speed of the CPU cores. This is an average value if there are multiple speeds. in Mhz
   * @nullable
   */
  readonly cpuMaxCore?: number | null;
  /**
   * Number of physical CPU cores on the host.
   * @nullable
   */
  readonly cpuNum?: number | null;
  /**
   * Current cpu utilization, in Mhz
   * @nullable
   */
  readonly cpuUsed?: number | null;
  /** Id of the host */
  readonly hostId?: number;
  /**
   * Host is in maintenance mode
   * @nullable
   */
  readonly inMaintenance?: boolean | null;
  /**
   * Amount of used memory. Sum of the memory used by all powered on virtual machines and vSphere services on the host. in MB
   * @nullable
   */
  readonly memoryUsed?: number | null;
  /** Name of the host (IP address) */
  readonly name?: string;
  /**
   * Id of the parent host (if any)
   * @nullable
   */
  readonly parentHostId?: number | null;
  /** Host profile in a commercial range */
  readonly profile?: string;
  /** Host profile code */
  readonly profileCode?: string;
  /** Rack of the host */
  readonly rack?: string;
  /** Total RAM quantity */
  readonly ram?: ComplexTypeUnitAndValueLongOVH;
  /**
   * Resource name
   * @nullable
   */
  readonly resourceName?: string | null;
  /** State of the host */
  readonly state?: DedicatedCloudHostStateEnumOVH;
  /**
   * Host uptime in second
   * @nullable
   */
  readonly uptime?: number | null;
  /**
   * Number of Virtual Machine on the host
   * @nullable
   */
  readonly vmTotal?: number | null;
  /**
   * Number of Vcpu use by virtual machines on the host
   * @nullable
   */
  readonly vmVcpuTotal?: number | null;
}

/**
 * HIPAA certification option
 */
export interface DedicatedCloudHipaaOVH {
  /** State of the option */
  readonly state?: DedicatedCloudOptionStateEnumOVH;
}

/**
 * HDS certification option
 */
export interface DedicatedCloudHdsOVH {
  /** State of the option */
  readonly state?: DedicatedCloudOptionStateEnumOVH;
}

/**
 * VMware Hybrid Cloud Extension option
 */
export interface DedicatedCloudHcxOVH {
  /**
   * Build of the VMware Hybrid Cloud Extension
   * @nullable
   */
  readonly build?: string | null;
  /** State of the option */
  readonly state?: DedicatedCloudOptionStateEnumOVH;
  /**
   * Version of the VMware Hybrid Cloud Extension
   * @nullable
   */
  readonly version?: string | null;
}

/**
 * The generation of a Dedicated Cloud
 */
export type DedicatedCloudGenerationEnumOVH = typeof DedicatedCloudGenerationEnumOVH[keyof typeof DedicatedCloudGenerationEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudGenerationEnumOVH = {
  '10': '1.0',
  '20': '2.0',
} as const;

/**
 * Filer connexion state.
 * @nullable
 */
export type DedicatedCloudFilerOVHConnectionState = DedicatedCloudFilerConnexionStateEnumOVH | null;

/**
 * Billing type of this filer
 * @nullable
 */
export type DedicatedCloudFilerOVHBillingType = DedicatedCloudRessourcesBillingTypeEnumOVH | null;

/**
 * Filer active node.
 * @nullable
 */
export type DedicatedCloudFilerOVHActiveNode = DedicatedCloudFilerNodeTypeEnumOVH | null;

/**
 * Datastore
 */
export interface DedicatedCloudFilerOVH {
  /**
   * Filer active node.
   * @nullable
   */
  readonly activeNode?: DedicatedCloudFilerOVHActiveNode;
  /**
   * Billing type of this filer
   * @nullable
   */
  readonly billingType?: DedicatedCloudFilerOVHBillingType;
  /**
   * Filer connexion state.
   * @nullable
   */
  readonly connectionState?: DedicatedCloudFilerOVHConnectionState;
  /** Filer Id */
  readonly filerId?: number;
  /** Human-Readable profile name */
  readonly fullProfile?: string;
  /** Filer accessibility (if true, customer cannot access it) */
  readonly isManagedByOvh?: boolean;
  /** Filer master node hostname. */
  readonly master?: string;
  /** Filer name */
  readonly name?: string;
  /** Commercial profile name */
  readonly profile?: string;
  /**
   * Resource name
   * @nullable
   */
  readonly resourceName?: string | null;
  /** Filer capacity */
  readonly size?: ComplexTypeUnitAndValueLongOVH;
  /**
   * Filer slave node hostname.
   * @nullable
   */
  readonly slave?: string | null;
  /**
   * Available space of this datastore, in GB
   * @nullable
   */
  readonly spaceFree?: number | null;
  /**
   * Provisionned space of this datastore, in GB
   * @nullable
   */
  readonly spaceProvisionned?: number | null;
  /**
   * Used Space of this filer, in GB
   * @nullable
   */
  readonly spaceUsed?: number | null;
  /** State of the filer */
  readonly state?: DedicatedCloudFilerStateEnumOVH;
  /**
   * Number of virtual machine on the filer
   * @nullable
   */
  readonly vmTotal?: number | null;
}

/**
 * Federated Active Directory
 */
export interface DedicatedCloudFederationAccessNetworkOVH {
  /** Id of the Active Directory */
  readonly activeDirectoryId?: number;
  /** Active Directory base DN for groups */
  readonly baseDnForGroups?: string;
  /** Active Directory base DN for users */
  readonly baseDnForUsers?: string;
  /** Description of your option access network */
  readonly description?: string;
  /** Active Directory NetBIOS name */
  readonly domainAlias?: string;
  /** Active Directory domain name */
  readonly domainName?: string;
  /** IP address of the remote service */
  readonly ip?: Ipv4OVH;
  /**
   * Active Directory LDAP hostname
   * @nullable
   */
  readonly ldapHostname?: string | null;
  /** Active Directory LDAP port */
  readonly ldapTcpPort?: number;
  /** Use unsecure LDAP instead of LDAPS */
  readonly noSsl?: boolean;
  /**
   * SSL thumbprint of the remote service
   * @nullable
   */
  readonly sslThumbprint?: string | null;
  /** State of the option */
  readonly state?: DedicatedCloudOptionAccessNetworkStateEnumOVH;
  /** Active Directory user name */
  readonly username?: string;
}

/**
 * Active Directory federation option
 */
export interface DedicatedCloudFederationOVH {
  /** State of the option */
  readonly state?: DedicatedCloudOptionStateEnumOVH;
}

/**
 * A structure describing the vmware DVSSecurityPolicy data object
 */
export interface DedicatedCloudDvsSecurityPolicyOVH {
  allowPromiscuous?: DedicatedCloudVmwareBoolPolicyOVH;
  forgedTransmits?: DedicatedCloudVmwareBoolPolicyOVH;
  macChanges?: DedicatedCloudVmwareBoolPolicyOVH;
}

/**
 * Commercial ranges
 */
export interface DedicatedCloudCommercialRangeOVH {
  /** The hypervisor versions compliant with this commercial Range */
  readonly allowedHypervisorVersions?: readonly DedicatedCloudHypervisorVersionEnumOVH[];
  /** The list of NetworkRoles allowed for one user in this commercial range */
  readonly allowedNetworkRoles?: readonly DedicatedCloudRightNetworkRoleEnumOVH[];
  /** The name of this commercial range */
  readonly commercialRangeName?: string;
  /** The name of the dedicated Cloud version associated to this commercial range */
  readonly dedicatedCloudVersion?: string;
  /**
   * The range of this Datacenter in this VMware on OVHcloud version
   * @nullable
   */
  readonly range?: string | null;
}

/**
 * The commercial name component
 */
export type DedicatedCloudCommercialNameEnumOVH = typeof DedicatedCloudCommercialNameEnumOVH[keyof typeof DedicatedCloudCommercialNameEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudCommercialNameEnumOVH = {
  CDI: 'CDI',
  'CDI-HDS': 'CDI-HDS',
  'CDI-HIPAA': 'CDI-HIPAA',
  'CDI-NSX': 'CDI-NSX',
  'CDI-NSX-T': 'CDI-NSX-T',
  'CDI-NSX-VROPS': 'CDI-NSX-VROPS',
  'CDI-PCIDSS': 'CDI-PCIDSS',
  'CDI-UNKNOWN': 'CDI-UNKNOWN',
  'CDI-VROPS': 'CDI-VROPS',
  DC: 'DC',
  'DC-ANCIENT': 'DC-ANCIENT',
  'DC-ANCIENT-HDS': 'DC-ANCIENT-HDS',
  'DC-ANCIENT-HIPAA': 'DC-ANCIENT-HIPAA',
  'DC-ANCIENT-NSX': 'DC-ANCIENT-NSX',
  'DC-ANCIENT-NSX-T': 'DC-ANCIENT-NSX-T',
  'DC-ANCIENT-NSX-VROPS': 'DC-ANCIENT-NSX-VROPS',
  'DC-ANCIENT-PCIDSS': 'DC-ANCIENT-PCIDSS',
  'DC-ANCIENT-UNKNOWN': 'DC-ANCIENT-UNKNOWN',
  'DC-ANCIENT-VROPS': 'DC-ANCIENT-VROPS',
  'DC-HDS': 'DC-HDS',
  'DC-HIPAA': 'DC-HIPAA',
  'DC-LEGACY': 'DC-LEGACY',
  'DC-LEGACY-HDS': 'DC-LEGACY-HDS',
  'DC-LEGACY-HIPAA': 'DC-LEGACY-HIPAA',
  'DC-LEGACY-NSX': 'DC-LEGACY-NSX',
  'DC-LEGACY-NSX-T': 'DC-LEGACY-NSX-T',
  'DC-LEGACY-NSX-VROPS': 'DC-LEGACY-NSX-VROPS',
  'DC-LEGACY-PCIDSS': 'DC-LEGACY-PCIDSS',
  'DC-LEGACY-UNKNOWN': 'DC-LEGACY-UNKNOWN',
  'DC-LEGACY-VROPS': 'DC-LEGACY-VROPS',
  'DC-NSX': 'DC-NSX',
  'DC-NSX-T': 'DC-NSX-T',
  'DC-NSX-VROPS': 'DC-NSX-VROPS',
  'DC-PCIDSS': 'DC-PCIDSS',
  'DC-UNKNOWN': 'DC-UNKNOWN',
  'DC-VROPS': 'DC-VROPS',
  ESSENTIALS: 'ESSENTIALS',
  'ESSENTIALS-HDS': 'ESSENTIALS-HDS',
  'ESSENTIALS-HIPAA': 'ESSENTIALS-HIPAA',
  'ESSENTIALS-NSX': 'ESSENTIALS-NSX',
  'ESSENTIALS-NSX-T': 'ESSENTIALS-NSX-T',
  'ESSENTIALS-NSX-VROPS': 'ESSENTIALS-NSX-VROPS',
  'ESSENTIALS-PCIDSS': 'ESSENTIALS-PCIDSS',
  'ESSENTIALS-UNKNOWN': 'ESSENTIALS-UNKNOWN',
  'ESSENTIALS-VROPS': 'ESSENTIALS-VROPS',
  'NSX-T': 'NSX-T',
  'NSX-T-DEFAULT': 'NSX-T-DEFAULT',
  'NSX-T-HDS': 'NSX-T-HDS',
  'NSX-T-NSX': 'NSX-T-NSX',
  'NSX-T-NSX-VROPS': 'NSX-T-NSX-VROPS',
  'NSX-T-PCIDSS': 'NSX-T-PCIDSS',
  'NSX-T-VROPS': 'NSX-T-VROPS',
  'NSX-T-VROPS-WITHOUT-NSX': 'NSX-T-VROPS-WITHOUT-NSX',
  'NSX-T-WITHOUT-NSX': 'NSX-T-WITHOUT-NSX',
  PREMIER: 'PREMIER',
  'PREMIER-DEFAULT': 'PREMIER-DEFAULT',
  'PREMIER-HDS': 'PREMIER-HDS',
  'PREMIER-HIPAA': 'PREMIER-HIPAA',
  'PREMIER-NSX': 'PREMIER-NSX',
  'PREMIER-NSX-T': 'PREMIER-NSX-T',
  'PREMIER-NSX-VROPS': 'PREMIER-NSX-VROPS',
  'PREMIER-PCIDSS': 'PREMIER-PCIDSS',
  'PREMIER-UNKNOWN': 'PREMIER-UNKNOWN',
  'PREMIER-VROPS': 'PREMIER-VROPS',
  SDDC: 'SDDC',
  'SDDC-DEFAULT': 'SDDC-DEFAULT',
  'SDDC-HDS': 'SDDC-HDS',
  'SDDC-HIPAA': 'SDDC-HIPAA',
  'SDDC-LEGACY': 'SDDC-LEGACY',
  'SDDC-LEGACY-HDS': 'SDDC-LEGACY-HDS',
  'SDDC-LEGACY-HIPAA': 'SDDC-LEGACY-HIPAA',
  'SDDC-LEGACY-PCIDSS': 'SDDC-LEGACY-PCIDSS',
  'SDDC-LEGACY-UNKNOWN': 'SDDC-LEGACY-UNKNOWN',
  'SDDC-LEGACY-VROPS': 'SDDC-LEGACY-VROPS',
  'SDDC-LEGACY-VROPS-WITHOUT-NSX': 'SDDC-LEGACY-VROPS-WITHOUT-NSX',
  'SDDC-LEGACY-WITHOUT-NSX': 'SDDC-LEGACY-WITHOUT-NSX',
  'SDDC-PCIDSS': 'SDDC-PCIDSS',
  'SDDC-UNKNOWN': 'SDDC-UNKNOWN',
  'SDDC-VROPS': 'SDDC-VROPS',
  'SDDC-VROPS-WITHOUT-NSX': 'SDDC-VROPS-WITHOUT-NSX',
  'SDDC-WITHOUT-NSX': 'SDDC-WITHOUT-NSX',
  UNKNOWN: 'UNKNOWN',
  'UNKNOWN-HDS': 'UNKNOWN-HDS',
  'UNKNOWN-HIPAA': 'UNKNOWN-HIPAA',
  'UNKNOWN-NSX': 'UNKNOWN-NSX',
  'UNKNOWN-NSX-T': 'UNKNOWN-NSX-T',
  'UNKNOWN-NSX-VROPS': 'UNKNOWN-NSX-VROPS',
  'UNKNOWN-PCIDSS': 'UNKNOWN-PCIDSS',
  'UNKNOWN-UNKNOWN': 'UNKNOWN-UNKNOWN',
  'UNKNOWN-VROPS': 'UNKNOWN-VROPS',
  'UNKNOWN-VSPHERE': 'UNKNOWN-VSPHERE',
  VSPHERE: 'VSPHERE',
  'VSPHERE-DEFAULT': 'VSPHERE-DEFAULT',
  'VSPHERE-HDS': 'VSPHERE-HDS',
  'VSPHERE-NSX': 'VSPHERE-NSX',
  'VSPHERE-NSX-VROPS': 'VSPHERE-NSX-VROPS',
  'VSPHERE-PCIDSS': 'VSPHERE-PCIDSS',
  'VSPHERE-VROPS': 'VSPHERE-VROPS',
  'VSPHERE-VROPS-WITHOUT-NSX': 'VSPHERE-VROPS-WITHOUT-NSX',
  'VSPHERE-WITHOUT-NSX': 'VSPHERE-WITHOUT-NSX',
} as const;

/**
 * Virtual datacenter
 */
export interface DedicatedCloudDatacenterOVH {
  /** The commercial name of this Datacenter */
  readonly commercialName?: DedicatedCloudCommercialNameEnumOVH;
  /** The commercial range associated to this Datacenter */
  readonly commercialRangeName?: string;
  /** Id of the Datacenter */
  readonly datacenterId?: number;
  description?: string;
  /**
   * Name of the associated Horizon View service if the VDI option is enabled
   * @nullable
   */
  readonly horizonViewName?: string | null;
  /** Check if this datacenter is removable (Need to be Empty) */
  readonly isRemovable?: boolean;
  name?: string;
  /** Os version installed on your VMware on OVHcloud */
  readonly version?: string;
}

/**
 * AutoScale associated to this cluster
 * @nullable
 */
export type DedicatedCloudClusterOVHAutoscale = DedicatedCloudClusterAutoScaleOVH | null;

/**
 * Cluster
 */
export interface DedicatedCloudClusterOVH {
  /**
   * AutoScale associated to this cluster
   * @nullable
   */
  readonly autoscale?: DedicatedCloudClusterOVHAutoscale;
  /** Id of the cluster */
  readonly clusterId?: number;
  /** Drs mode of the cluster */
  readonly drsMode?: DedicatedCloudClusterClusterDrsModeEnumOVH;
  /** Drs status of the cluster */
  readonly drsStatus?: DedicatedCloudClusterClusterConfigsStatusEnumOVH;
  /** Evc mode of the cluster */
  readonly evcMode?: string;
  /** High availability status of the cluster */
  readonly haStatus?: DedicatedCloudClusterClusterConfigsStatusEnumOVH;
  /** Name of the cluster */
  readonly name?: string;
  /** The VMware MoRef of the cluster */
  readonly vmwareClusterId?: string;
}

/**
 * Available features
 */
export interface DedicatedCloudCapabilitiesOVH {
  /** canAddRessource right order status in this VMware on OVHcloud */
  readonly addRessourceRightStatus?: DedicatedCloudCapabilitiesFeatureStatusEnumOVH;
  /** Backup feature order status for this VMware on OVHcloud */
  readonly backupStatus?: DedicatedCloudCapabilitiesFeatureStatusEnumOVH;
  /** if true user can be added in this VMware on OVHcloud (with POST /dedicatedCloud/{serviceName}/user */
  readonly canAddUser?: boolean;
  /** fullAdminRO user right order status in this VMware on OVHcloud */
  readonly fullAdminRoUserStatus?: DedicatedCloudCapabilitiesFeatureStatusEnumOVH;
  /** Nexus 1000v feature order status in this VMware on OVHcloud ? */
  readonly nexus1000vStatus?: DedicatedCloudCapabilitiesFeatureStatusEnumOVH;
  /** Hypervisor upgrade order status in this VMware on OVHcloud (upgrade with POST /dedicatedCloud/{serviceName}/upgradeHypervisor) */
  readonly upgradable?: boolean;
  /** userAccessPolicy property edition status in PUT /dedicatedCloud/{serviceName} */
  readonly userAccessPolicyStatus?: DedicatedCloudCapabilitiesFeatureStatusEnumOVH;
}

/**
 * The Regional Internet Registry of this IP block
 */
export type DedicatedCloudBlockRegisterEnumOVH = typeof DedicatedCloudBlockRegisterEnumOVH[keyof typeof DedicatedCloudBlockRegisterEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudBlockRegisterEnumOVH = {
  arin: 'arin',
  ripe: 'ripe',
} as const;

/**
 * The billing type of this Dedicated Cloud
 */
export type DedicatedCloudBillingTypeEnumOVH = typeof DedicatedCloudBillingTypeEnumOVH[keyof typeof DedicatedCloudBillingTypeEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudBillingTypeEnumOVH = {
  demo: 'demo',
  monthly: 'monthly',
} as const;

/**
 * All states a Dedicated Cloud Backup can be in
 */
export type DedicatedCloudBackupStateEnumOVH = typeof DedicatedCloudBackupStateEnumOVH[keyof typeof DedicatedCloudBackupStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudBackupStateEnumOVH = {
  disabled: 'disabled',
  disabling: 'disabling',
  enabled: 'enabled',
  enabling: 'enabling',
  error: 'error',
  migrating: 'migrating',
  removing: 'removing',
} as const;

/**
 * Replication sync status
 * @nullable
 */
export type DedicatedCloudBackupRepositoryOVHSyncStatus = DedicatedCloudBackupReplicationSyncStatusOVH | null;

/**
 * Replication status
 * @nullable
 */
export type DedicatedCloudBackupRepositoryOVHReplication = DedicatedCloudOptionStateEnumOVH | null;

/**
 * Backup repository
 */
export interface DedicatedCloudBackupRepositoryOVH {
  /**
   * Replication last successful date
   * @nullable
   */
  readonly lastSuccessfulReplicationDate?: string | null;
  /**
   * Replication status
   * @nullable
   */
  readonly replication?: DedicatedCloudBackupRepositoryOVHReplication;
  /**
   * Replication zone
   * @nullable
   */
  readonly replicationZone?: string | null;
  /** Repository Id */
  readonly repositoryId?: number;
  /** Repository Name */
  readonly repositoryName?: string;
  /**
   * Replication sync status
   * @nullable
   */
  readonly syncStatus?: DedicatedCloudBackupRepositoryOVHSyncStatus;
}

/**
 * Offer type of the backup job
 * @nullable
 */
export type DedicatedCloudBackupJobOVHOfferType = DedicatedCloudBackupOfferTypeEnumOVH | null;

/**
 * Backup job
 */
export interface DedicatedCloudBackupJobOVH {
  /**
   * Disk space allocated to the virtual machine
   * @nullable
   */
  readonly allocatedDisk?: number | null;
  /**
   * List of days your Virtual Machine will be backuped
   * @nullable
   */
  readonly backupDays?: readonly DedicatedCloudBackupBackupDaysEnumOVH[] | null;
  /**
   * Backup is encrypted
   * @nullable
   */
  readonly encryption?: boolean | null;
  /**
   * Offer type of the backup job
   * @nullable
   */
  readonly offerType?: DedicatedCloudBackupJobOVHOfferType;
  /**
   * Number of days before the backup is deleted
   * @nullable
   */
  readonly retentionTime?: number | null;
  /** State of the backup job */
  readonly state?: DedicatedCloudBackupStateEnumOVH;
  /**
   * Name of the virtual Machine
   * @nullable
   */
  readonly vmName?: string | null;
}

/**
 * Schedule hour for start backup
 * @nullable
 */
export type DedicatedCloudBackupOVHScheduleHour = TimeOVH | null;

/**
 * Backup offer type
 * @nullable
 */
export type DedicatedCloudBackupOVHBackupOffer = DedicatedCloudBackupOfferTypeEnumOVH | null;

/**
 * Backup option
 */
export interface DedicatedCloudBackupOVH {
  /**
   * Duration on email report
   * @nullable
   */
  readonly backupDurationInReport?: boolean | null;
  /**
   * Backup offer type
   * @nullable
   */
  readonly backupOffer?: DedicatedCloudBackupOVHBackupOffer;
  /**
   * Backup size on day on email report
   * @nullable
   */
  readonly backupSizeInReport?: boolean | null;
  /**
   * Disk size on mail report
   * @nullable
   */
  readonly diskSizeInReport?: boolean | null;
  /**
   * Backup is encrypted
   * @nullable
   */
  readonly encryption?: boolean | null;
  /**
   * Full day on mail report
   * @nullable
   */
  readonly fullDayInReport?: boolean | null;
  /**
   * Name of the backup server virtual machine.
   * @nullable
   */
  readonly hostname?: string | null;
  /**
   * Unique additional email address for backup daily report
   * @nullable
   */
  readonly mailAddress?: string | null;
  /**
   * Backup replication zone
   * @nullable
   */
  readonly replicationZone?: string | null;
  /**
   * RestorePoint number on mail report
   * @nullable
   */
  readonly restorePointInReport?: boolean | null;
  /**
   * Schedule hour for start backup
   * @nullable
   */
  readonly scheduleHour?: DedicatedCloudBackupOVHScheduleHour;
  /** This Backup current state */
  readonly state?: DedicatedCloudBackupStateEnumOVH;
  /**
   * The moref of the backup server virtual machine
   * @nullable
   */
  readonly vmwareVmId?: string | null;
}

/**
 * Autoscale option
 */
export interface DedicatedCloudAutoScaleVirtualOVH {
  /** State of the option */
  readonly state?: DedicatedCloudOptionStateEnumOVH;
}

/**
 * Autoscale configuration
 */
export interface DedicatedCloudAutoScaleConfigOVH {
  /** CPU Max Threshold */
  cpuMaxThreshold?: number;
  /** CPU Min Threshold */
  cpuMinThreshold?: number;
  /**
   * Description of AutoScale configurations
   * @nullable
   */
  description?: string | null;
  /** Id of the AutoScale configuration */
  readonly id?: number;
  /** Maximum number of hosts in the cluster */
  maxNumOfHosts?: number;
  /** Memory Max Threshold */
  memMaxThreshold?: number;
  /** Memory Min Threshold */
  memMinThreshold?: number;
  /** Minimum number of hosts in the cluster */
  minNumOfHosts?: number;
  /** Storage Max Threshold */
  storageMaxThreshold?: number;
  /** Time delay between two scale-ins in mins */
  timeDelayScaleIn?: number;
  /** Time delay between two scale-outs in mins */
  timeDelayScaleOut?: number;
  /** Time delay between two storage scale-outs in mins */
  timeDelayStorageScaleOut?: number;
}

/**
 * All states an Allowed Network can be in
 */
export type DedicatedCloudAllowedNetworkStateEnumOVH = typeof DedicatedCloudAllowedNetworkStateEnumOVH[keyof typeof DedicatedCloudAllowedNetworkStateEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedCloudAllowedNetworkStateEnumOVH = {
  allowed: 'allowed',
  toDelete: 'toDelete',
  toUpdate: 'toUpdate',
} as const;

/**
 * Network allowed on infrastructure firewall
 */
export interface DedicatedCloudAllowedNetworkOVH {
  /** @nullable */
  description?: string | null;
  /** Network name, e.g. 123.100.200.0/32 */
  network?: Ipv4BlockOVH;
  readonly networkAccessId?: number;
  readonly state?: DedicatedCloudAllowedNetworkStateEnumOVH;
}

/**
 * ovh datacenter
 */
export type DedicatedDatacenterEnumOVH = typeof DedicatedDatacenterEnumOVH[keyof typeof DedicatedDatacenterEnumOVH];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DedicatedDatacenterEnumOVH = {
  bhs1: 'bhs1',
  bhs2: 'bhs2',
  bhs3: 'bhs3',
  bhs4: 'bhs4',
  bhs5: 'bhs5',
  bhs6: 'bhs6',
  bhs7: 'bhs7',
  bhs8: 'bhs8',
  cch01: 'cch01',
  crx1: 'crx1',
  crx2: 'crx2',
  dc1: 'dc1',
  eri1: 'eri1',
  eri2: 'eri2',
  gra04: 'gra04',
  gra1: 'gra1',
  gra2: 'gra2',
  gra3: 'gra3',
  gsw: 'gsw',
  hdf01: 'hdf01',
  hil1: 'hil1',
  ieb01: 'ieb01',
  'lil1-int1': 'lil1-int1',
  lim1: 'lim1',
  lim2: 'lim2',
  lim3: 'lim3',
  mr901: 'mr901',
  p19: 'p19',
  rbx: 'rbx',
  'rbx-hz': 'rbx-hz',
  rbx1: 'rbx1',
  rbx10: 'rbx10',
  rbx2: 'rbx2',
  rbx3: 'rbx3',
  rbx4: 'rbx4',
  rbx5: 'rbx5',
  rbx6: 'rbx6',
  rbx7: 'rbx7',
  rbx8: 'rbx8',
  rbx9: 'rbx9',
  sbg1: 'sbg1',
  sbg2: 'sbg2',
  sbg3: 'sbg3',
  sbg4: 'sbg4',
  sbg5: 'sbg5',
  sgp02: 'sgp02',
  sgp1: 'sgp1',
  syd03: 'syd03',
  syd1: 'syd1',
  syd2: 'syd2',
  vin1: 'vin1',
  waw1: 'waw1',
  ynm1: 'ynm1',
  yyz01: 'yyz01',
} as const;

/**
 * A numeric value tagged with its unit
 */
export interface ComplexTypeUnitAndValueLongOVH {
  unit?: string;
  value?: number;
}

/**
 * A numeric value tagged with its unit
 */
export interface ComplexTypeUnitAndValueDoubleOVH {
  unit?: string;
  value?: number;
}

