import { newSpecPage, newE2EPage } from '@stencil/core/testing';
import { OdsStringAttributes2Str } from '@ovhcloud/ods-testing';
import { OdsComponentAttributes2StringAttributes } from '@ovhcloud/ods-core';
import { defaultLocale } from '@ovhcloud/msc-utils';
import { {{ pascalCase componentTag }}, I{{ pascalCase componentTag }} } from '../src';
import { config } from '../mock/handlers';
import tradFR from '../src/translations/Messages_fr_FR.json';
import {
  mockRequests,
  e2eMockResponseHandler,
} from '../../../_common/mock-helpers';

const defaultAttributes = {
  content: 'World',
  locale: defaultLocale,
};

export const setupSpecTest = async ({
  attributes = {},
  html = ``,
}: {
  attributes?: Partial<I{{ pascalCase componentTag }}>;
  html?: string;
}) => {
  const mock = mockRequests(config);
  const stringAttributes = OdsComponentAttributes2StringAttributes<
    Partial<I{{ pascalCase componentTag }}>
  >({ ...defaultAttributes, ...attributes }, defaultAttributes);
  const page = await newSpecPage({
    components: [{{ pascalCase componentTag }}],
    html: `<{{ componentTag }} ${OdsStringAttributes2Str(
      stringAttributes,
    )}>${html}</{{ componentTag }}>`,
  });
  return { page, mock, tradFR };
};

export const setupE2eTest = async ({
  attributes = {},
  html = ``,
}: {
  attributes?: Partial<I{{ pascalCase componentTag }}>;
  html?: string;
}) => {
  const stringAttributes = OdsComponentAttributes2StringAttributes<
    Partial<I{{ pascalCase componentTag }}>
  >({ ...defaultAttributes, ...attributes }, defaultAttributes);

  const page = await newE2EPage({ timeout: 30000 });

  await page.setRequestInterception(true);

  page.on('response', e2eMockResponseHandler({ page, handlers: config }));

  await page.setContent(
    `<{{ componentTag }} ${OdsStringAttributes2Str(stringAttributes)}>${html}</{{ componentTag }}>`,
    { timeout: 30000 },
  );

  await page.waitForChanges();

  await page.evaluate(() => document.body.style.setProperty('margin', '0px'));

  const el = await page.find('{{ componentTag }}');

  return { page, el, };
};
