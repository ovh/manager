import {
  OdsThemeColorIntent,
  OdsThemeTypographyLevel,
  OdsThemeTypographySize,
} from '@ovhcloud/ods-theming';
import { Component, Prop, h, Element, Host, State, Watch } from '@stencil/core';
import { apiClient } from '@ovh-ux/manager-core-api';
import { HTMLStencilElement } from '@stencil/core/internal';
import { Locale, defaultLocale } from '@ovhcloud/msc-utils';
import { getTranslations, Translations } from './translations';

export interface I{{ pascalCase componentTag }} {
  content: string;
  locale?: Locale;
}

@Component({
  tag: '{{ componentTag }}',
  styleUrl: '{{ componentTag }}.scss',
  shadow: true,
})
export class {{ pascalCase componentTag }} implements I{{ pascalCase componentTag }} {
  @Element() host!: HTMLStencilElement;

  @Prop() public content = '';

  @Prop() public locale = defaultLocale;

  @State() private contactInfos?: { firstName: string; lastName: string };

  @State() private localeStrings?: Translations;

  @Watch('locale')
  async updateTranslations() {
    this.localeStrings = await getTranslations(this.locale);
  }

  async componentWillLoad() {
    this.updateTranslations();

    apiClient.v6.get('me/contact/11111111').then((response) => {
      this.contactInfos = response.data;
    });
  }

  displayFullName = () =>
    this.contactInfos
      ? `${this.contactInfos.firstName} ${this.contactInfos.lastName}`
      : '';

  render() {
    if (!this.localeStrings || !this.contactInfos) {
      return <osds-skeleton />;
    }

    return (
      <Host>
        <div style={ { display: 'grid' } }>
          <osds-text
            class="example"
            level={OdsThemeTypographyLevel.heading}
            size={OdsThemeTypographySize._400}
            color={OdsThemeColorIntent.info}
          >
            Hello {this.content}
          </osds-text>
          <osds-text
            class="example"
            style={ { backgroundColor: 'green' } }
            level={OdsThemeTypographyLevel.heading}
            size={OdsThemeTypographySize._400}
            color={OdsThemeColorIntent.info}
          >
            Locale {this.locale}: {this.localeStrings.test}
          </osds-text>
          <osds-text
            class="example"
            level={OdsThemeTypographyLevel.heading}
            size={OdsThemeTypographySize._400}
            color={OdsThemeColorIntent.info}
          >
            API data: {this.displayFullName()}
          </osds-text>
        </div>
      </Host>
    );
  }
}
