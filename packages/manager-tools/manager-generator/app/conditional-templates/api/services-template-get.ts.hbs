import { {{#if this.isApiV2}}fetchIcebergV2, {{/if}}{{#if this.isApiV6}}fetchIcebergV6, {{/if}}apiClient } from '@ovh-ux/manager-core-api';

{{#each operationList}}

{{#if this.params}}
export type {{pascalCase this.functionName}}Params = {
  {{#each this.params}}
  /** {{this.description}} */
  '{{this.name}}'{{#if this.required}}?{{/if}}: any;
  {{/each}}
};

{{/if}}
export const {{this.functionName}}QueryKey = {{#if this.urlParams}}(params: {{pascalCase this.functionName}}Params) => [`{{this.httpMethod}}{{this.url}}`]{{else}}['{{this.httpMethod}}{{this.url}}']{{/if}};

{{#if this.description}}
/**
 * {{this.description}}
 */
{{/if}}
export const {{this.functionName}} = async ({{#if this.params}}params: {{pascalCase this.functionName}}Params{{/if}}): Promise<any> =>
  apiClient.{{this.apiVersion}}.{{this.httpMethod}}({{#if this.urlParams}}`{{this.url}}`{{else}}'{{this.url}}'{{/if}}{{#if this.bodyParams}}, { data: params }{{/if}});
{{/each}}
{{#ifEq arg1=apiVersion arg2=mainApiPathApiVersion}}

{{#if this.isApiV6}}
/**
 *  Get listing with iceberg V6
 */
export const getListingIcebergV6 = async ({ {{#if this.isPCI }}projectId, {{/if}}pageSize, page }: { {{#if this.isPCI }}projectId: string, {{/if}}pageSize: number, page: number }) => {
  const { data, status, totalCount } = await fetchIcebergV6({
    route: `{{#if this.isPCI }}{{this.mainApiPathPci}}{{else}}{{this.mainApiPath}}{{/if}}`,
    pageSize,
    page
  });
  if (status > 400) {
    throw new Error();
  }
  return { data, status, totalCount };
};
{{/if}}

{{/ifEq}}
