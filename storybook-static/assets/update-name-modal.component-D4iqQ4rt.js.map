{"version":3,"file":"update-name-modal.component-D4iqQ4rt.js","sources":["../../src/components/templates/update-name-modal/translations/translations.ts","../../src/components/templates/update-name-modal/update-name-modal.component.tsx"],"sourcesContent":["import i18next from 'i18next';\n\nimport de_DE from './Messages_de_DE.json';\nimport en_GB from './Messages_en_GB.json';\nimport es_ES from './Messages_es_ES.json';\nimport fr_CA from './Messages_fr_CA.json';\nimport fr_FR from './Messages_fr_FR.json';\nimport it_IT from './Messages_it_IT.json';\nimport pl_PL from './Messages_pl_PL.json';\nimport pt_PT from './Messages_pt_PT.json';\n\nfunction addTranslations() {\n  i18next.addResources('de_DE', 'update-name-modal', de_DE);\n  i18next.addResources('en_GB', 'update-name-modal', en_GB);\n  i18next.addResources('es_ES', 'update-name-modal', es_ES);\n  i18next.addResources('fr_CA', 'update-name-modal', fr_CA);\n  i18next.addResources('fr_FR', 'update-name-modal', fr_FR);\n  i18next.addResources('it_IT', 'update-name-modal', it_IT);\n  i18next.addResources('pl_PL', 'update-name-modal', pl_PL);\n  i18next.addResources('pt_PT', 'update-name-modal', pt_PT);\n}\n\nif (i18next.isInitialized) {\n  addTranslations();\n} else {\n  i18next.on('initialized', addTranslations);\n}\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  OdsText,\n  OdsInput,\n  OdsMessage,\n  OdsModal,\n  OdsButton,\n  OdsFormField,\n} from '@ovhcloud/ods-components/react';\nimport {\n  ODS_BUTTON_VARIANT,\n  ODS_INPUT_TYPE,\n  ODS_MESSAGE_COLOR,\n  OdsInputChangeEventDetail,\n  OdsInputCustomEvent,\n} from '@ovhcloud/ods-components';\nimport { handleClick } from '../../../utils/click-utils';\nimport './translations/translations';\n\nexport type UpdateNameModalProps = {\n  headline: string;\n  description?: string;\n  inputLabel: string;\n  defaultValue?: string;\n  closeModal: () => void;\n  updateDisplayName: (newDisplayName: string) => void;\n  isLoading?: boolean;\n  error?: string;\n  cancelButtonLabel?: string;\n  confirmButtonLabel?: string;\n  pattern?: string;\n  patternMessage?: string;\n  isOpen?: boolean;\n};\n\nexport const UpdateNameModal: React.FC<UpdateNameModalProps> = ({\n  headline,\n  description,\n  inputLabel,\n  defaultValue,\n  closeModal,\n  isLoading,\n  updateDisplayName,\n  error,\n  cancelButtonLabel,\n  confirmButtonLabel,\n  pattern,\n  patternMessage,\n  isOpen = false,\n}) => {\n  const { t } = useTranslation('update-name-modal');\n  const [displayName, setDisplayName] = React.useState(defaultValue);\n  const [isPatternError, setIsPatternError] = React.useState(false);\n\n  React.useEffect(() => {\n    setDisplayName(defaultValue);\n  }, [defaultValue]);\n\n  React.useEffect(() => {\n    const regex = new RegExp(pattern);\n    setIsPatternError(!displayName?.match(regex));\n  }, [displayName, pattern]);\n\n  return (\n    <OdsModal isOpen={isOpen} onOdsClose={closeModal}>\n      <div>\n        <span className=\"update-name-headline text-[--ods-color-heading] text-[24px] leading-[32px] font-bold\">\n          {headline}\n        </span>\n      </div>\n      {!!error && (\n        <OdsMessage color={ODS_MESSAGE_COLOR.danger}>\n          <OdsText preset=\"span\">{t('updateModalError', { error })}</OdsText>\n        </OdsMessage>\n      )}\n      <span className=\"update-name-description text-[--ods-color-text] text-[14px] leading-[18px] my-[8px]\">\n        {description}\n      </span>\n      <OdsFormField className=\"mb-8\">\n        <div slot=\"label\">\n          <span className=\"update-name-input-label text-[--ods-color-text] text-[14px] leading-[18px] font-semibold\">\n            {inputLabel}\n          </span>\n        </div>\n        <OdsInput\n          aria-label=\"update-input\"\n          isDisabled={isLoading}\n          type={ODS_INPUT_TYPE.text}\n          value={displayName}\n          hasError={isPatternError || undefined}\n          name=\"update-name-modal-input\"\n          onOdsChange={(e: OdsInputCustomEvent<OdsInputChangeEventDetail>) =>\n            setDisplayName(e.detail.value as string)\n          }\n        />\n        {patternMessage && (\n          <div className=\"mt-5\">\n            <OdsText\n              preset=\"span\"\n              className={`update-name-modal-pattern-message ${\n                isPatternError && pattern ? 'error' : ''\n              }`}\n            >\n              {patternMessage}\n            </OdsText>\n          </div>\n        )}\n      </OdsFormField>\n      <OdsButton\n        isDisabled={isLoading}\n        slot=\"actions\"\n        variant={ODS_BUTTON_VARIANT.ghost}\n        {...handleClick(closeModal)}\n        label={cancelButtonLabel || t('updateModalCancelButton')}\n      />\n      <OdsButton\n        isDisabled={isPatternError}\n        slot=\"actions\"\n        isLoading={isLoading}\n        {...handleClick(() => updateDisplayName(displayName))}\n        label={confirmButtonLabel || t('updateModalConfirmButton')}\n      />\n    </OdsModal>\n  );\n};\n"],"names":["addTranslations","i18next","de_DE","en_GB","es_ES","fr_CA","fr_FR","it_IT","pl_PL","pt_PT","UpdateNameModal","headline","description","inputLabel","defaultValue","closeModal","isLoading","updateDisplayName","error","cancelButtonLabel","confirmButtonLabel","pattern","patternMessage","isOpen","t","useTranslation","displayName","setDisplayName","React","isPatternError","setIsPatternError","regex","jsxs","OdsModal","jsx","OdsMessage","ODS_MESSAGE_COLOR","OdsText","OdsFormField","OdsInput","ODS_INPUT_TYPE","e","OdsButton","ODS_BUTTON_VARIANT","handleClick"],"mappings":"2iDAWA,SAASA,GAAkB,CACjBC,EAAA,aAAa,QAAS,oBAAqBC,CAAK,EAChDD,EAAA,aAAa,QAAS,oBAAqBE,CAAK,EAChDF,EAAA,aAAa,QAAS,oBAAqBG,CAAK,EAChDH,EAAA,aAAa,QAAS,oBAAqBI,CAAK,EAChDJ,EAAA,aAAa,QAAS,oBAAqBK,EAAK,EAChDL,EAAA,aAAa,QAAS,oBAAqBM,EAAK,EAChDN,EAAA,aAAa,QAAS,oBAAqBO,EAAK,EAChDP,EAAA,aAAa,QAAS,oBAAqBQ,EAAK,CAC1D,CAEIR,EAAQ,cACMD,IAERC,EAAA,GAAG,cAAeD,CAAe,ECWpC,MAAAU,EAAA,CAAA,CAAyD,SAAAC,EAC9D,YAAAC,EACA,WAAAC,EACA,aAAAC,EACA,WAAAC,EACA,UAAAC,EACA,kBAAAC,EACA,MAAAC,EACA,kBAAAC,EACA,mBAAAC,EACA,QAAAC,EACA,eAAAC,EACA,OAAAC,EAAA,EAEF,IAAA,CACE,KAAA,CAAA,EAAAC,CAAA,EAAAC,EAAA,mBAAA,EACA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAd,CAAA,EACA,CAAAe,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EAEA,OAAAA,EAAA,UAAA,IAAA,CACED,EAAAb,CAAA,CAA2B,EAAA,CAAAA,CAAA,CAAA,EAG7Bc,EAAA,UAAA,IAAA,CACE,MAAAG,EAAA,IAAA,OAAAV,CAAA,EACAS,EAAA,EAAAJ,GAAA,MAAAA,EAAA,MAAAK,GAAA,CAA4C,EAAA,CAAAL,EAAAL,CAAA,CAAA,EAG9CW,EAAAA,KAAAC,EAAA,CAAA,OAAAV,EAAA,WAAAR,EAAA,SAAA,CAEImB,EAAAA,IAAA,MAAA,CAAA,SAAAA,EAAA,IAAA,OAAA,CAAA,UAAA,uFAAA,SAAAvB,CAAA,CAAA,CAAA,CAAA,EAIA,CAAA,CAAAO,GAAAgB,EAAAA,IAAAC,EAAA,CAAA,MAAAC,EAAA,OAAA,SAAAF,EAAA,IAAAG,EAAA,CAAA,OAAA,OAAA,SAAAb,EAAA,mBAAA,CAAA,MAAAN,CAAA,CAAA,CAAA,CAAA,EAAA,EAIEgB,EAAA,IAAA,OAAA,CAAA,UAAA,sFAAA,SAAAtB,EAAA,EAIFoB,EAAAA,KAAAM,EAAA,CAAA,UAAA,OAAA,SAAA,CAEEJ,EAAAA,IAAA,MAAA,CAAA,KAAA,QAAA,SAAAA,EAAA,IAAA,OAAA,CAAA,UAAA,2FAAA,SAAArB,CAAA,CAAA,CAAA,CAAA,EAIAqB,EAAA,IACAK,EAAC,CAAA,aAAA,eACY,WAAAvB,EACC,KAAAwB,EAAA,KACS,MAAAd,EACd,SAAAG,GAAA,OACqB,KAAA,0BACvB,YAAAY,GAAAd,EAAAc,EAAA,OAAA,KAAA,CAEoC,CAAA,EAE3CnB,GAAAY,EAAA,IAAA,MAAA,CAAA,UAAA,OAAA,SAAAA,EAAA,IAGIG,EAAC,CAAA,OAAA,OACQ,UAAA,qCAAAR,GAAAR,EAAA,QAAA,EAAA,GAGP,SAAAC,CAEC,CAAA,EAAA,CAEL,EAAA,EAEJY,EAAA,IACAQ,EAAC,CAAA,WAAA1B,EACa,KAAA,UACP,QAAA2B,EAAA,MACuB,GAAAC,EAAA7B,CAAA,EACF,MAAAI,GAAAK,EAAA,yBAAA,CAC6B,CAAA,EACzDU,EAAA,IACAQ,EAAC,CAAA,WAAAb,EACa,KAAA,UACP,UAAAb,EACL,GAAA4B,EAAA,IAAA3B,EAAAS,CAAA,CAAA,EACoD,MAAAN,GAAAI,EAAA,0BAAA,CACK,CAAA,CAC3D,CAAA,CAAA,CAGN"}