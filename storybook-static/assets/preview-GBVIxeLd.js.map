{"version":3,"file":"preview-GBVIxeLd.js","sources":["../../../../node_modules/react-i18next/dist/es/initReactI18next.js","../../../../node_modules/react-i18next/dist/es/I18nextProvider.js","../../../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../.storybook/i18n.ts","../../.storybook/preview.tsx"],"sourcesContent":["import { setDefaults } from './defaults.js';\nimport { setI18n } from './i18nInstance.js';\nexport const initReactI18next = {\n  type: '3rdParty',\n  init(instance) {\n    setDefaults(instance.options.react);\n    setI18n(instance);\n  }\n};","import { createElement, useMemo } from 'react';\nimport { I18nContext } from './context.js';\nexport function I18nextProvider(_ref) {\n  let {\n    i18n,\n    defaultNS,\n    children\n  } = _ref;\n  const value = useMemo(() => ({\n    i18n,\n    defaultNS\n  }), [i18n, defaultNS]);\n  return createElement(I18nContext.Provider, {\n    value\n  }, children);\n}","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        cache: this,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Map();\n    this.#mutationId = Date.now();\n  }\n  #mutations;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    const scope = scopeFor(mutation);\n    const mutations = this.#mutations.get(scope) ?? [];\n    mutations.push(mutation);\n    this.#mutations.set(scope, mutations);\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    const scope = scopeFor(mutation);\n    if (this.#mutations.has(scope)) {\n      const mutations = this.#mutations.get(scope)?.filter((x) => x !== mutation);\n      if (mutations) {\n        if (mutations.length === 0) {\n          this.#mutations.delete(scope);\n        } else {\n          this.#mutations.set(scope, mutations);\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const firstPendingMutation = this.#mutations.get(scopeFor(mutation))?.find((m) => m.state.status === \"pending\");\n    return !firstPendingMutation || firstPendingMutation === mutation;\n  }\n  runNext(mutation) {\n    const foundMutation = this.#mutations.get(scopeFor(mutation))?.find((m) => m !== mutation && m.state.isPaused);\n    return foundMutation?.continue() ?? Promise.resolve();\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((mutation) => {\n        this.remove(mutation);\n      });\n    });\n  }\n  getAll() {\n    return [...this.#mutations.values()].flat();\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id ?? String(mutation.mutationId);\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1)\n      return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0)\n      return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const cachedData = this.getQueryData(options.queryKey);\n    if (cachedData === void 0)\n      return this.fetchQuery(options);\n    else {\n      const defaultedOptions = this.defaultQueryOptions(options);\n      const query = this.#queryCache.build(this, defaultedOptions);\n      if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n        void this.prefetchQuery(defaultedOptions);\n      }\n      return Promise.resolve(cachedData);\n    }\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    const refetchFilters = {\n      type: \"active\",\n      ...filters\n    };\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  cancelQueries(filters = {}, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters = {}, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      const refetchFilters = {\n        ...filters,\n        type: filters.refetchType ?? filters.type ?? \"active\"\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  refetchQueries(filters = {}, options) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options?.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.enabled !== true && defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\ni18n.use(initReactI18next).init({\n  fallbackLng: 'fr_FR',\n  interpolation: {\n    escapeValue: false,\n  },\n  resources: {\n    en: {},\n  },\n});\n\nexport default i18n;\n","import React, { Suspense, useEffect } from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport '../src/lib.scss';\nimport { Preview } from '@storybook/react';\nimport '../src/tailwind/theme.css';\nimport '../src/index.css';\nimport i18n from './i18n';\nimport './storybook.css';\n\nconst mockQueryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false, // Do not retry on failure\n      staleTime: Infinity, // Data does not become stale\n    },\n  },\n});\n\nconst preview: Preview = {\n  parameters: {\n    docs: {\n      toc: {\n        contentsSelector: '.sbdocs-content',\n        headingSelector: 'h2, h3',\n        disable: false,\n      },\n      source: {\n        excludeDecorators: true,\n      },\n    },\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n    options: {\n      storySort: {\n        order: [\n          'Manager React Components',\n          ['Introduction', \"What's new?\", ['Changelog']],\n          '*',\n        ],\n      },\n      showPanel: true,\n    },\n  },\n};\n\nconst withI18next = (Story, context) => {\n  const { locale } = context.globals;\n\n  useEffect(() => {\n    i18n.changeLanguage(locale);\n  }, [locale]);\n\n  return (\n    <Suspense fallback={<div>loading translations...</div>}>\n      <I18nextProvider i18n={i18n}>\n        <QueryClientProvider client={mockQueryClient}>\n          <Story />\n        </QueryClientProvider>\n      </I18nextProvider>\n    </Suspense>\n  );\n};\n\n// export decorators for storybook to wrap your stories in\nexport const decorators = [withI18next];\n\nexport const globalTypes = {\n  locale: {\n    name: 'Locale',\n    description: 'Internationalization locale',\n    toolbar: {\n      icon: 'globe',\n      items: [\n        { value: 'fr_FR', title: 'Francais' },\n        { value: 'en_GB', title: 'English' },\n        { value: 'de_DE', title: 'Deutsch' },\n        { value: 'es_ES', title: 'Espagne' },\n        { value: 'it_IT', title: 'Italy' },\n        { value: 'pt_PT', title: 'Portugal' },\n        { value: 'pl_PL', title: 'Poland' },\n        { value: 'fr_CA', title: 'Canada' },\n      ],\n      showName: true,\n    },\n  },\n};\n\nexport default preview;\n"],"names":["initReactI18next","instance","setDefaults","setI18n","I18nextProvider","_ref","i18n","defaultNS","children","value","useMemo","createElement","I18nContext","QueryCache","_a","Subscribable","config","__privateAdd","_queries","__privateSet","client","options","state","queryKey","queryHash","hashQueryKeyByOptions","query","Query","__privateGet","queryInMap","notifyManager","filters","defaultedFilters","matchQuery","queries","event","listener","MutationCache","_mutations","_mutationId","mutation","Mutation","__privateWrapper","scope","scopeFor","mutations","x","firstPendingMutation","m","foundMutation","matchMutation","pausedMutations","noop","QueryClient","_queryCache","_mutationCache","_defaultOptions","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","focusManager","focused","onlineManager","online","_b","cachedData","defaultedOptions","resolveStaleTime","data","updater","prevData","functionalUpdate","queryCache","refetchFilters","cancelOptions","defaultedCancelOptions","promises","fetchOptions","promise","infiniteQueryBehavior","hashKey","defaults","result","queryDefault","partialMatchKey","mutationKey","skipToken","mockQueryClient","preview","withI18next","Story","context","locale","useEffect","Suspense","jsx","QueryClientProvider","decorators","globalTypes"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}