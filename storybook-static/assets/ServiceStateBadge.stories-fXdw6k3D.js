import{j as t}from"./jsx-runtime-BRNY0I4F.js";import{H as e}from"./lib-Dk32xhqR-BnP8dUtW.js";import"./index-Bnop-kX6.js";import"./iframe-IyM3Vz8H.js";import"./index-4pTrEEYx.js";import"./index-GPs4uoxI.js";const a=()=>t.jsx(e,{state:"active"});a.parameters={docs:{source:{code:'<ServiceStateBadge state="active" />'}}};const s=()=>t.jsx(e,{state:"deleted"});s.parameters={docs:{source:{code:'<ServiceStateBadge state="deleted" />'}}};const r=()=>t.jsx(e,{state:"suspended"});r.parameters={docs:{source:{code:'<ServiceStateBadge state="suspended" />'}}};const c=()=>t.jsx(e,{state:"toActivate"}),d=()=>t.jsx(e,{state:"toDelete"}),i=()=>t.jsx(e,{state:"toSuspend"}),n=()=>t.jsx(e,{state:"unknown"}),o=()=>t.jsx(e,{isLoading:!0,state:"unknown"});o.parameters={docs:{source:{code:`<ServiceStateBadge
  isLoading={true}
  state="unknown"
/>`}}};const q={title:"Manager UI Kit/Components/Badges/ServiceStateBadge",component:e,tags:["autodocs"],argTypes:{state:{control:{type:"select"},options:["active","deleted","suspended","toActivate","toDelete","toSuspend","unknown"],description:"Select the state of the service."}},args:{state:"active"},decorators:[]};var S,p,u;a.parameters={...a.parameters,docs:{...(S=a.parameters)==null?void 0:S.docs,source:{originalSource:'() => <ServiceStateBadge state="active" />',...(u=(p=a.parameters)==null?void 0:p.docs)==null?void 0:u.source}}};var m,g,v;s.parameters={...s.parameters,docs:{...(m=s.parameters)==null?void 0:m.docs,source:{originalSource:'() => <ServiceStateBadge state="deleted" />',...(v=(g=s.parameters)==null?void 0:g.docs)==null?void 0:v.source}}};var B,l,x;r.parameters={...r.parameters,docs:{...(B=r.parameters)==null?void 0:B.docs,source:{originalSource:'() => <ServiceStateBadge state="suspended" />',...(x=(l=r.parameters)==null?void 0:l.docs)==null?void 0:x.source}}};var j,k,w;c.parameters={...c.parameters,docs:{...(j=c.parameters)==null?void 0:j.docs,source:{originalSource:'() => <ServiceStateBadge state="toActivate" />',...(w=(k=c.parameters)==null?void 0:k.docs)==null?void 0:w.source}}};var A,D,T;d.parameters={...d.parameters,docs:{...(A=d.parameters)==null?void 0:A.docs,source:{originalSource:'() => <ServiceStateBadge state="toDelete" />',...(T=(D=d.parameters)==null?void 0:D.docs)==null?void 0:T.source}}};var L,f,R;i.parameters={...i.parameters,docs:{...(L=i.parameters)==null?void 0:L.docs,source:{originalSource:'() => <ServiceStateBadge state="toSuspend" />',...(R=(f=i.parameters)==null?void 0:f.docs)==null?void 0:R.source}}};var U,h,y;n.parameters={...n.parameters,docs:{...(U=n.parameters)==null?void 0:U.docs,source:{originalSource:"() => <ServiceStateBadge state={'unknown' as unknown as ResourceStatus} />",...(y=(h=n.parameters)==null?void 0:h.docs)==null?void 0:y.source}}};var E,H,_;o.parameters={...o.parameters,docs:{...(E=o.parameters)==null?void 0:E.docs,source:{originalSource:"() => <ServiceStateBadge isLoading state={'unknown' as unknown as ResourceStatus} />",...(_=(H=o.parameters)==null?void 0:H.docs)==null?void 0:_.source}}};const z=["ServiceStateBadgeActive","ServiceStateBadgeDeleted","ServiceStateBadgeSuspended","ServiceStateBadgeToActivate","ServiceStateBadgeToDelete","ServiceStateBadgeToSuspend","ServiceStateBadgeUnknown","LoadingBadge"];export{o as LoadingBadge,a as ServiceStateBadgeActive,s as ServiceStateBadgeDeleted,r as ServiceStateBadgeSuspended,c as ServiceStateBadgeToActivate,d as ServiceStateBadgeToDelete,i as ServiceStateBadgeToSuspend,n as ServiceStateBadgeUnknown,z as __namedExportsOrder,q as default};
