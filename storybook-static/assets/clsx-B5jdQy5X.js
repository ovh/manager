let e;const y=new Uint8Array(16);function p(){if(!e&&(e=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!e))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return e(y)}const r=[];for(let n=0;n<256;++n)r.push((n+256).toString(16).slice(1));function g(n,t=0){return r[n[t+0]]+r[n[t+1]]+r[n[t+2]]+r[n[t+3]]+"-"+r[n[t+4]]+r[n[t+5]]+"-"+r[n[t+6]]+r[n[t+7]]+"-"+r[n[t+8]]+r[n[t+9]]+"-"+r[n[t+10]]+r[n[t+11]]+r[n[t+12]]+r[n[t+13]]+r[n[t+14]]+r[n[t+15]]}const m=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),i={randomUUID:m};function a(n,t,o){if(i.randomUUID&&!t&&!n)return i.randomUUID();n=n||{};const u=n.random||(n.rng||p)();return u[6]=u[6]&15|64,u[8]=u[8]&63|128,g(u)}function d(n){var t,o,u="";if(typeof n=="string"||typeof n=="number")u+=n;else if(typeof n=="object")if(Array.isArray(n)){var c=n.length;for(t=0;t<c;t++)n[t]&&(o=d(n[t]))&&(u&&(u+=" "),u+=o)}else for(o in n)n[o]&&(u&&(u+=" "),u+=o);return u}function l(){for(var n,t,o=0,u="",c=arguments.length;o<c;o++)(n=arguments[o])&&(t=d(n))&&(u&&(u+=" "),u+=t);return u}export{l as c,a as v};
