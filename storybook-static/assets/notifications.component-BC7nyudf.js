import{j as S}from"./jsx-runtime-BRNY0I4F.js";import{r as v,g as C,e as M}from"./index-Bnop-kX6.js";import{r as $}from"./index-CNSIveXf.js";import{l as h}from"./index-D-q5QNgV.js";import{a as q}from"./index-CwE47CCN.js";const L={BASE_URL:"./",DEV:!1,MODE:"production",PROD:!0,SSR:!1,STORYBOOK:"true"},O=t=>{let e;const n=new Set,o=(s,d)=>{const c=typeof s=="function"?s(e):s;if(!Object.is(c,e)){const a=e;e=d??(typeof c!="object"||c===null)?c:Object.assign({},e,c),n.forEach(u=>u(e,a))}},i=()=>e,m={setState:o,getState:i,getInitialState:()=>_,subscribe:s=>(n.add(s),()=>n.delete(s)),destroy:()=>{(L?"production":void 0)!=="production"&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),n.clear()}},_=e=t(o,i,m);return m},W=t=>t?O(t):O;var D={exports:{}},R={},j={exports:{}},A={};/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var f=v;function P(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var B=typeof Object.is=="function"?Object.is:P,F=f.useState,z=f.useEffect,U=f.useLayoutEffect,Y=f.useDebugValue;function k(t,e){var n=e(),o=F({inst:{value:n,getSnapshot:e}}),i=o[0].inst,r=o[1];return U(function(){i.value=n,i.getSnapshot=e,E(i)&&r({inst:i})},[t,n,e]),z(function(){return E(i)&&r({inst:i}),t(function(){E(i)&&r({inst:i})})},[t]),Y(n),n}function E(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!B(t,n)}catch{return!0}}function K(t,e){return e()}var G=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?K:k;A.useSyncExternalStore=f.useSyncExternalStore!==void 0?f.useSyncExternalStore:G;j.exports=A;var H=j.exports;/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var g=v,J=H;function Q(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var X=typeof Object.is=="function"?Object.is:Q,Z=J.useSyncExternalStore,tt=g.useRef,et=g.useEffect,nt=g.useMemo,ot=g.useDebugValue;R.useSyncExternalStoreWithSelector=function(t,e,n,o,i){var r=tt(null);if(r.current===null){var l={hasValue:!1,value:null};r.current=l}else l=r.current;r=nt(function(){function m(a){if(!_){if(_=!0,s=a,a=o(a),i!==void 0&&l.hasValue){var u=l.value;if(i(u,a))return d=u}return d=a}if(u=d,X(s,a))return u;var b=o(a);return i!==void 0&&i(u,b)?u:(s=a,d=b)}var _=!1,s,d,c=n===void 0?null:n;return[function(){return m(e())},c===null?void 0:function(){return m(c())}]},[e,n,o,i]);var p=Z(t,r[0],r[1]);return et(function(){l.hasValue=!0,l.value=p},[p]),ot(p),p};D.exports=R;var it=D.exports;const rt=C(it),V={BASE_URL:"./",DEV:!1,MODE:"production",PROD:!0,SSR:!1,STORYBOOK:"true"},{useDebugValue:st}=M,{useSyncExternalStoreWithSelector:at}=rt;let N=!1;const ct=t=>t;function ut(t,e=ct,n){(V?"production":void 0)!=="production"&&n&&!N&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),N=!0);const o=at(t.subscribe,t.getState,t.getServerState||t.getInitialState,e,n);return st(o),o}const I=t=>{(V?"production":void 0)!=="production"&&typeof t!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const e=typeof t=="function"?W(t):t,n=(o,i)=>ut(e,o,i);return Object.assign(n,e),n},lt=t=>t?I(t):I;var y=(t=>(t.Success="success",t.Error="error",t.Info="info",t.Warning="warning",t))(y||{});const dt=1e3,T=lt((t,e)=>({uid:0,notifications:[],addNotification:(n,o,i=!1)=>t(r=>({uid:r.uid+1,notifications:[...r.notifications,{uid:r.uid,content:n,type:o,dismissable:i,creationTimestamp:Date.now()}]})),addSuccess:(n,o=!1)=>e().addNotification(n,"success",o),addError:(n,o=!1)=>e().addNotification(n,"error",o),addWarning:(n,o=!1)=>e().addNotification(n,"warning",o),addInfo:(n,o=!1)=>e().addNotification(n,"info",o),clearNotification:n=>t(o=>({notifications:o.notifications.filter(({uid:i})=>i!==n)})),clearNotifications:()=>t(n=>({notifications:n.notifications.filter(o=>Date.now()-o.creationTimestamp<dt)}))})),ft=t=>{switch(t){case y.Success:return h.success;case y.Error:return h.danger;case y.Warning:return h.warning;case y.Info:return h.information;default:return h.information}},w=({notification:t})=>{const{clearNotification:e}=T();return S.jsx($,{className:"mb-2 w-full",color:ft(t.type),onOdsRemove:()=>e(t.uid),children:t.content})};try{w.displayName="OdsNotification",w.__docgenInfo={description:"",displayName:"OdsNotification",props:{notification:{defaultValue:null,description:"",name:"notification",required:!0,type:{name:"Notification"}}}}}catch{}try{odsnotification.displayName="odsnotification",odsnotification.__docgenInfo={description:"",displayName:"odsnotification",props:{notification:{defaultValue:null,description:"",name:"notification",required:!0,type:{name:"Notification"}}}}}catch{}const x=({clearAfterRead:t=!0})=>{const e=q(),[n]=v.useState(e),{notifications:o,clearNotifications:i}=T();return v.useEffect(()=>{t&&n.pathname!==e.pathname&&i()},[t,e.pathname]),S.jsx(S.Fragment,{children:o.map(r=>S.jsx(w,{notification:r},r.uid))})};try{x.displayName="Notifications",x.__docgenInfo={description:`This component display the list of notifications. It acts
as a "flash" component because by default once the notifications have been
shown they are cleared. It means that you can use this component on multiple
pages, switching page won't display notifications twice.

It replicates the current behavior of public cloud notifications for
actions (success / errors / etc)`,displayName:"Notifications",props:{clearAfterRead:{defaultValue:{value:"true"},description:"Clear notifications once they have been displayed (on location changes)",name:"clearAfterRead",required:!1,type:{name:"boolean"}}}}}catch{}try{notificationscomponent.displayName="notificationscomponent",notificationscomponent.__docgenInfo={description:`This component display the list of notifications. It acts
as a "flash" component because by default once the notifications have been
shown they are cleared. It means that you can use this component on multiple
pages, switching page won't display notifications twice.

It replicates the current behavior of public cloud notifications for
actions (success / errors / etc)`,displayName:"notificationscomponent",props:{clearAfterRead:{defaultValue:{value:"true"},description:"Clear notifications once they have been displayed (on location changes)",name:"clearAfterRead",required:!1,type:{name:"boolean"}}}}}catch{}export{x as N,w as O,y as a,T as u};
