{"version":3,"file":"preview-f3612344.js","sources":["../../../../node_modules/react-i18next/dist/es/I18nextProvider.js","../../../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../.storybook/i18n.ts","../../.storybook/preview.tsx"],"sourcesContent":["import { createElement, useMemo } from 'react';\nimport { I18nContext } from './context';\nexport function I18nextProvider(_ref) {\n  var i18n = _ref.i18n,\n      defaultNS = _ref.defaultNS,\n      children = _ref.children;\n  var value = useMemo(function () {\n    return {\n      i18n: i18n,\n      defaultNS: defaultNS\n    };\n  }, [i18n, defaultNS]);\n  return createElement(I18nContext.Provider, {\n    value: value\n  }, children);\n}","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        cache: this,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { canFetch, createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #defaultOptions;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#defaultOptions = config.defaultOptions;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const executeMutation = () => {\n      this.#retryer = createRetryer({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject(new Error(\"No mutationFn found\"));\n          }\n          return this.options.mutationFn(variables);\n        },\n        onFail: (failureCount, error) => {\n          this.#dispatch({ type: \"failed\", failureCount, error });\n        },\n        onPause: () => {\n          this.#dispatch({ type: \"pause\" });\n        },\n        onContinue: () => {\n          this.#dispatch({ type: \"continue\" });\n        },\n        retry: this.options.retry ?? 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode\n      });\n      return this.#retryer.promise;\n    };\n    const restored = this.state.status === \"pending\";\n    try {\n      if (!restored) {\n        this.#dispatch({ type: \"pending\", variables });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables\n          });\n        }\n      }\n      const data = await executeMutation();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !canFetch(this.options.networkMode),\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = [];\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #mutationId;\n  #resuming;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.push(mutation);\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    this.#mutations = this.#mutations.filter((x) => x !== mutation);\n    this.notify({ type: \"removed\", mutation });\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.remove(mutation);\n      });\n    });\n  }\n  getAll() {\n    return this.#mutations;\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.#mutations.find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.#mutations.filter(\n      (mutation) => matchMutation(filters, mutation)\n    );\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    this.#resuming = (this.#resuming ?? Promise.resolve()).then(() => {\n      const pausedMutations = this.#mutations.filter((x) => x.state.isPaused);\n      return notifyManager.batch(\n        () => pausedMutations.reduce(\n          (promise, mutation) => promise.then(() => mutation.continue().catch(noop)),\n          Promise.resolve()\n        )\n      );\n    }).then(() => {\n      this.#resuming = void 0;\n    });\n    return this.#resuming;\n  }\n};\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, skipToken } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const fetchFn = async () => {\n        const options = context.options;\n        const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n        const oldPages = context.state.data?.pages || [];\n        const oldPageParams = context.state.data?.pageParams || [];\n        const empty = { pages: [], pageParams: [] };\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = context.options.queryFn && context.options.queryFn !== skipToken ? context.options.queryFn : () => {\n          if (process.env.NODE_ENV !== \"production\") {\n            if (context.options.queryFn === skipToken) {\n              console.error(\n                `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${context.options.queryHash}'`\n              );\n            }\n          }\n          return Promise.reject(\n            new Error(`Missing queryFn: '${context.options.queryHash}'`)\n          );\n        };\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? \"backward\" : \"forward\",\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const page = await queryFn(\n            queryFnContext\n          );\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        let result;\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          result = await fetchPage(\n            empty,\n            oldPageParams[0] ?? options.initialPageParam\n          );\n          const remainingPages = pages ?? oldPages.length;\n          for (let i = 1; i < remainingPages; i++) {\n            const param = getNextPageParam(options, result);\n            result = await fetchPage(result, param);\n          }\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  );\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return options.getPreviousPageParam?.(\n    pages[0],\n    pages,\n    pageParams[0],\n    pageParams\n  );\n}\nfunction hasNextPage(options, data) {\n  if (!data)\n    return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam)\n    return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1)\n      return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0)\n      return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const cachedData = this.getQueryData(options.queryKey);\n    if (cachedData === void 0)\n      return this.fetchQuery(options);\n    else {\n      const defaultedOptions = this.defaultQueryOptions(options);\n      const query = this.#queryCache.build(this, defaultedOptions);\n      if (options.revalidateIfStale && query.isStaleByTime(defaultedOptions.staleTime)) {\n        void this.prefetchQuery(defaultedOptions);\n      }\n      return Promise.resolve(cachedData);\n    }\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    const refetchFilters = {\n      type: \"active\",\n      ...filters\n    };\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  cancelQueries(filters = {}, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters = {}, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      const refetchFilters = {\n        ...filters,\n        type: filters.refetchType ?? filters.type ?? \"active\"\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  refetchQueries(filters = {}, options) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options?.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.enabled !== true && defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\ni18n.use(initReactI18next).init({\n  fallbackLng: 'fr_FR',\n  interpolation: {\n    escapeValue: false,\n  },\n  resources: {\n    en: {},\n  },\n});\n\nexport default i18n;\n","import React, { Suspense, useEffect } from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport { odsSetup } from '@ovhcloud/ods-common-core';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n\nimport { Preview } from '@storybook/react';\nimport '../src/tailwind/theme.css';\nimport i18n from './i18n';\n\nimport '@ovhcloud/ods-theme-blue-jeans';\n\nodsSetup();\n\nconst mockQueryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false, // Do not retry on failure\n      staleTime: Infinity, // Data does not become stale\n    },\n  },\n});\n\nconst preview: Preview = {\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n};\n\nconst withI18next = (Story, context) => {\n  const { locale } = context.globals;\n\n  useEffect(() => {\n    i18n.changeLanguage(locale);\n  }, [locale]);\n\n  return (\n    <Suspense fallback={<div>loading translations...</div>}>\n      <I18nextProvider i18n={i18n}>\n        <QueryClientProvider client={mockQueryClient}>\n          <Story />\n        </QueryClientProvider>\n      </I18nextProvider>\n    </Suspense>\n  );\n};\n\n// export decorators for storybook to wrap your stories in\nexport const decorators = [withI18next];\n\nexport const globalTypes = {\n  locale: {\n    name: 'Locale',\n    description: 'Internationalization locale',\n    toolbar: {\n      icon: 'globe',\n      items: [\n        { value: 'fr_FR', title: 'Francais' },\n        { value: 'en_GB', title: 'English' },\n        { value: 'de_DE', title: 'Deutsch' },\n        { value: 'es_ES', title: 'Espagne' },\n        { value: 'it_IT', title: 'Italy' },\n        { value: 'pt_PT', title: 'Portugal' },\n        { value: 'pl_PL', title: 'Poland' },\n        { value: 'fr_CA', title: 'Canada' },\n      ],\n      showName: true,\n    },\n  },\n};\n\nexport default preview;\n"],"names":["I18nextProvider","_ref","i18n","defaultNS","children","value","useMemo","createElement","I18nContext","QueryCache","_a","Subscribable","config","__privateAdd","_queries","__privateSet","client","options","state","queryKey","queryHash","hashQueryKeyByOptions","query","Query","__privateGet","queryInMap","notifyManager","filters","defaultedFilters","matchQuery","queries","event","listener","Mutation","Removable","_dispatch","_observers","_defaultOptions","_mutationCache","_retryer","getDefaultState","observer","x","variables","executeMutation","createRetryer","failureCount","error","__privateMethod","dispatch_fn","restored","_b","context","_d","_c","data","_f","_e","_h","_g","_j","_i","_l","_k","_n","_m","_p","_o","_r","_q","_t","_s","action","reducer","canFetch","MutationCache","_mutations","_mutationId","_resuming","mutation","__privateWrapper","matchMutation","pausedMutations","promise","noop","infiniteQueryBehavior","pages","fetchFn","direction","oldPages","oldPageParams","empty","cancelled","addSignalProperty","object","queryFn","skipToken","fetchPage","param","previous","queryFnContext","page","maxPages","addTo","addToStart","addToEnd","result","pageParamFn","getPreviousPageParam","getNextPageParam","oldData","remainingPages","i","pageParams","lastIndex","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","focusManager","focused","onlineManager","online","cachedData","defaultedOptions","updater","prevData","functionalUpdate","queryCache","refetchFilters","cancelOptions","defaultedCancelOptions","promises","fetchOptions","hashKey","defaults","queryDefault","partialMatchKey","mutationKey","initReactI18next","odsSetup","mockQueryClient","preview","withI18next","Story","locale","useEffect","Suspense","jsx","QueryClientProvider","decorators","globalTypes"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}