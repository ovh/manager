import{j as A}from"./jsx-runtime-BRNY0I4F.js";import{s as V}from"./index-vm89uYmh.js";import{k as m}from"./index-C7RZ_VRQ.js";import{r as D,g as M,e as T}from"./index-Bnop-kX6.js";const $={BASE_URL:"./",DEV:!1,MODE:"production",PROD:!0,SSR:!1,STORYBOOK:"true"},h=t=>{let e;const n=new Set,o=(s,f)=>{const u=typeof s=="function"?s(e):s;if(!Object.is(u,e)){const c=e;e=f??(typeof u!="object"||u===null)?u:Object.assign({},e,u),n.forEach(a=>a(e,c))}},r=()=>e,S={setState:o,getState:r,getInitialState:()=>E,subscribe:s=>(n.add(s),()=>n.delete(s)),destroy:()=>{($?"production":void 0)!=="production"&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),n.clear()}},E=e=t(o,r,S);return S},W=t=>t?h(t):h;var N={exports:{}},I={},b={exports:{}},R={};/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var l=D;function C(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var P=typeof Object.is=="function"?Object.is:C,q=l.useState,L=l.useEffect,B=l.useLayoutEffect,F=l.useDebugValue;function k(t,e){var n=e(),o=q({inst:{value:n,getSnapshot:e}}),r=o[0].inst,i=o[1];return B(function(){r.value=n,r.getSnapshot=e,y(r)&&i({inst:r})},[t,n,e]),L(function(){return y(r)&&i({inst:r}),t(function(){y(r)&&i({inst:r})})},[t]),F(n),n}function y(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!P(t,n)}catch{return!0}}function z(t,e){return e()}var U=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?z:k;R.useSyncExternalStore=l.useSyncExternalStore!==void 0?l.useSyncExternalStore:U;b.exports=R;var Y=b.exports;/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var _=D,K=Y;function G(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var H=typeof Object.is=="function"?Object.is:G,J=K.useSyncExternalStore,Q=_.useRef,X=_.useEffect,Z=_.useMemo,tt=_.useDebugValue;I.useSyncExternalStoreWithSelector=function(t,e,n,o,r){var i=Q(null);if(i.current===null){var d={hasValue:!1,value:null};i.current=d}else d=i.current;i=Z(function(){function S(c){if(!E){if(E=!0,s=c,c=o(c),r!==void 0&&d.hasValue){var a=d.value;if(r(a,c))return f=a}return f=c}if(a=f,H(s,c))return a;var g=o(c);return r!==void 0&&r(a,g)?a:(s=c,f=g)}var E=!1,s,f,u=n===void 0?null:n;return[function(){return S(e())},u===null?void 0:function(){return S(u())}]},[e,n,o,r]);var p=J(t,i[0],i[1]);return X(function(){d.hasValue=!0,d.value=p},[p]),tt(p),p};N.exports=I;var et=N.exports;const nt=M(et),j={BASE_URL:"./",DEV:!1,MODE:"production",PROD:!0,SSR:!1,STORYBOOK:"true"},{useDebugValue:ot}=T,{useSyncExternalStoreWithSelector:rt}=nt;let O=!1;const it=t=>t;function st(t,e=it,n){(j?"production":void 0)!=="production"&&n&&!O&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),O=!0);const o=rt(t.subscribe,t.getState,t.getServerState||t.getInitialState,e,n);return ot(o),o}const w=t=>{(j?"production":void 0)!=="production"&&typeof t!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const e=typeof t=="function"?W(t):t,n=(o,r)=>st(e,o,r);return Object.assign(n,e),n},ct=t=>t?w(t):w;var v=(t=>(t.Success="success",t.Error="error",t.Info="info",t.Warning="warning",t))(v||{});const ut=1e3,at=ct((t,e)=>({uid:0,notifications:[],addNotification:(n,o,r=!1)=>t(i=>({uid:i.uid+1,notifications:[...i.notifications,{uid:i.uid,content:n,type:o,dismissable:r,creationTimestamp:Date.now()}]})),addSuccess:(n,o=!1)=>e().addNotification(n,"success",o),addError:(n,o=!1)=>e().addNotification(n,"error",o),addWarning:(n,o=!1)=>e().addNotification(n,"warning",o),addInfo:(n,o=!1)=>e().addNotification(n,"info",o),clearNotification:n=>t(o=>({notifications:o.notifications.filter(({uid:r})=>r!==n)})),clearNotifications:()=>t(n=>({notifications:n.notifications.filter(o=>Date.now()-o.creationTimestamp<ut)}))})),dt=t=>{switch(t){case v.Success:return m.success;case v.Error:return m.danger;case v.Warning:return m.warning;case v.Info:return m.information;default:return m.information}},x=({notification:t})=>{const{clearNotification:e}=at();return A.jsx(V,{className:"mb-2 w-full",color:dt(t.type),onOdsRemove:()=>e(t.uid),children:t.content})};try{x.displayName="OdsNotification",x.__docgenInfo={description:"",displayName:"OdsNotification",props:{notification:{defaultValue:null,description:"",name:"notification",required:!0,type:{name:"Notification"}}}}}catch{}try{odsnotification.displayName="odsnotification",odsnotification.__docgenInfo={description:"",displayName:"odsnotification",props:{notification:{defaultValue:null,description:"",name:"notification",required:!0,type:{name:"Notification"}}}}}catch{}export{v as N,x as O,at as u};
