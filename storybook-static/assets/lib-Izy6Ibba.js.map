{"version":3,"file":"lib-Izy6Ibba.js","sources":["../../../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js"],"sourcesContent":["// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (!restored) {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const fetchFn = async () => {\n        const options = context.options;\n        const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n        const oldPages = context.state.data?.pages || [];\n        const oldPageParams = context.state.data?.pageParams || [];\n        const empty = { pages: [], pageParams: [] };\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? \"backward\" : \"forward\",\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const page = await queryFn(\n            queryFnContext\n          );\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        let result;\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          result = await fetchPage(\n            empty,\n            oldPageParams[0] ?? options.initialPageParam\n          );\n          const remainingPages = pages ?? oldPages.length;\n          for (let i = 1; i < remainingPages; i++) {\n            const param = getNextPageParam(options, result);\n            if (param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n          }\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data)\n    return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam)\n    return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map"],"names":["Mutation","_a","Removable","config","__privateAdd","_dispatch","_observers","_mutationCache","_retryer","__privateSet","getDefaultState","options","observer","__privateGet","x","variables","createRetryer","failureCount","error","__privateMethod","dispatch_fn","restored","isPaused","_b","context","_d","_c","data","_f","_e","_h","_g","_j","_i","_l","_k","_n","_m","_p","_o","_r","_q","_t","_s","action","reducer","state","notifyManager","infiniteQueryBehavior","pages","query","fetchFn","direction","oldPages","oldPageParams","empty","cancelled","addSignalProperty","object","queryFn","ensureQueryFn","fetchPage","param","previous","queryFnContext","page","maxPages","addTo","addToStart","addToEnd","result","pageParamFn","getPreviousPageParam","getNextPageParam","oldData","remainingPages","i","pageParams","lastIndex","hasNextPage","hasPreviousPage"],"mappings":"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","x_google_ignoreList":[0,1]}